{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.esm.js","../../src/functions/fee.ts","../../src/config/colors.ts","../../src/config/park.ts","../../src/config/chart.ts","../../src/components/FeeChart.svelte","../../src/components/IconPark.svelte","../../src/components/ParkButton.svelte","../../src/utils/string.ts","../../src/utils/time.ts","../../src/components/ParkingInfo.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/PopupChoosePark.svelte","../../src/components/IconTrash.svelte","../../src/components/ResetButton.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.43.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const baseStyle = readStyle(line.options);\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle = baseStyle;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex: line._datasetIndex\n      }));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { overrides as $, toPadding as A, each as B, getMaximumSize as C, _getParentNode as D, readUsedSize as E, throttled as F, supportsEventListenerOptions as G, HALF_PI as H, _isDomSupported as I, log10 as J, _factorize as K, finiteOrDefault as L, callback as M, _addGrace as N, toDegrees as O, PI as P, _measureText as Q, _int16Range as R, _alignPixel as S, TAU as T, clipArea as U, renderText as V, unclipArea as W, toFont as X, _toLeftRightCenter as Y, _alignStartEnd as Z, _arrayUnique as _, resolve as a, merge as a0, _capitalize as a1, descriptors as a2, isFunction as a3, _attachContext as a4, _createResolver as a5, _descriptors as a6, mergeIf as a7, uid as a8, debounce as a9, _setMinAndMaxByKey as aA, niceNum as aB, almostWhole as aC, almostEquals as aD, _decimalPlaces as aE, _longestText as aF, _filterBetween as aG, _lookup as aH, getHoverColor as aI, clone$1 as aJ, _merger as aK, _mergerIf as aL, _deprecated as aM, toFontString as aN, splineCurve as aO, splineCurveMonotone as aP, getStyle as aQ, fontString as aR, toLineHeight as aS, PITAU as aT, INFINITY as aU, RAD_PER_DEG as aV, QUARTER_PI as aW, TWO_THIRDS_PI as aX, _angleDiff as aY, retinaScale as aa, clearCanvas as ab, setsEqual as ac, _elementsEqual as ad, getAngleFromPoint as ae, _readValueToProps as af, _updateBezierControlPoints as ag, _computeSegments as ah, _boundSegments as ai, _steppedInterpolation as aj, _bezierInterpolation as ak, _pointInLine as al, _steppedLineTo as am, _bezierCurveTo as an, drawPoint as ao, addRoundedRectPath as ap, toTRBL as aq, toTRBLCorners as ar, _boundSegment as as, _normalizeAngle as at, getRtlAdapter as au, overrideTextDirection as av, _textX as aw, restoreTextDirection as ax, noop as ay, distanceBetweenPoints as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, toPercentage as k, listenArrayEvents as l, toDimension as m, formatNumber as n, _angleBetween as o, isNumber as p, _limitValue as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _lookupByKey as w, getRelativePosition as x, _isPointInArea as y, _rlookupByKey as z };\n","/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","/**\n * calculate parking fee\n */\nexport function calculateFee(feeRates, parkedHrs = 1) {\n    if (!Array.isArray(feeRates)) {\n        throw new TypeError(`Error! \"feeRates\" argument for \"calculateFee()\" should be an array, instead it receives, ${JSON.stringify(feeRates)}`);\n    }\n    // Initialize values\n    let totalCost = 0;\n    let hrsLeft = parkedHrs;\n    // use .some to break instead of forEach that cannot be stopped\n    feeRates.some((rate, index) => {\n        // Stop the loop when there is no hrsLeft\n        if (hrsLeft <= 0)\n            return true;\n        // if the rate is the last one,\n        // we'll use that rate for the rest of hr left.\n        if (index === feeRates.length - 1) {\n            // Most parking fee will think that fragment of an hour is full one hour,\n            // and we can achieve that by using Math.ceil\n            const hrsFactor = Math.ceil(hrsLeft / rate.hrs);\n            const costByRate = hrsFactor * rate.cost;\n            totalCost += costByRate;\n            hrsLeft = 0;\n            // stop any further operation,\n            // because at this the last item and we should get our answer.\n            return true;\n        }\n        // add cost of the rate to total cost\n        totalCost += rate.cost;\n        // minus hrsLeft and make sure hrsLeft won't go below zero\n        hrsLeft = Math.max(hrsLeft - rate.hrs, 0);\n        // continue the loop\n        return false;\n    });\n    return totalCost;\n}\nexport const storage = {\n    key: 'PARKING_TIME_START',\n    store: function (data) {\n        const prevData = this.getData();\n        localStorage.setItem(this.key, JSON.stringify(Object.assign(Object.assign({}, prevData), data)));\n    },\n    getData: function () {\n        const rawData = localStorage.getItem(this.key);\n        if (!rawData)\n            return null;\n        const parsedData = JSON.parse(rawData);\n        if (parsedData.start) {\n            parsedData.start = new Date(parsedData.start);\n        }\n        return parsedData;\n    },\n    reset: function () {\n        localStorage.removeItem(this.key);\n    },\n};\n","const COLORS = {\n    RED: '#ff4a48',\n    ORANGE: '#ff9f40',\n    YELLOW: '#ffcd56',\n    GREEN: '#7ad461',\n    TEAL: '#4bc0c0',\n    BLUE: '#36a2eb',\n    PURPLE: '#9966ff',\n    GRAY: '#c9cbcf',\n    GRID: 'rgba(255, 255, 255, 0.1)',\n};\nexport default COLORS;\n","import COLORS from './colors';\nexport const parkConfig = {\n    ICON: {\n        name: 'Icon Siam',\n        color: COLORS.PURPLE,\n        feeRates: new Date() > new Date('2021-01-31 23:59')\n            ? [\n                { hrs: 2, cost: 0 },\n                { hrs: 1, cost: 20 },\n            ]\n            : [\n                { hrs: 6, cost: 0 },\n                { hrs: 1, cost: 20 },\n            ],\n    },\n    SAMYAN: {\n        name: 'SamYan Mitrtown',\n        color: COLORS.YELLOW,\n        feeRates: [\n            { hrs: 2, cost: 0 },\n            { hrs: 1, cost: 10 },\n            { hrs: 1, cost: 10 },\n            { hrs: 1, cost: 20 },\n        ],\n    },\n    MBK: {\n        name: 'MBK',\n        color: COLORS.RED,\n        feeRates: [\n            { hrs: 2, cost: 10 },\n            { hrs: 1, cost: 10 },\n        ],\n    },\n    CTW: {\n        name: 'CTW',\n        color: COLORS.BLUE,\n        feeRates: [\n            { hrs: 4, cost: 10 },\n            { hrs: 1, cost: 20 },\n        ],\n    },\n    SIAM_CEN: {\n        name: 'Siam Center',\n        color: COLORS.GREEN,\n        feeRates: [\n            { hrs: 2, cost: 20 },\n            { hrs: 1, cost: 20 },\n        ],\n    },\n};\nexport const parkConfigEntries = Object.entries(parkConfig);\n","import { CategoryScale, Chart, LinearScale, LineController, LineElement, PointElement, } from 'chart.js';\nimport { calculateFee } from '../functions/fee';\nimport COLORS from './colors';\nimport { parkConfig } from './park';\nChart.register(LinearScale, CategoryScale, LineController, PointElement, LineElement);\nconst MAX_OVERVIEW_HOURS = 8;\nexport const OVERVIEW_HOURS_ARRAY = Array.from(\n// make array-like object that have specific length property\n{ length: MAX_OVERVIEW_HOURS }, \n// map function to create the array using index + 1\n// which will result in an array starting from 1 to array length\n(unused, index) => index + 1);\n/**\n * This data shows parking fee of each place for each hour you parked\n */\nexport const feeOverview = Object.values(parkConfig).map(park => ({\n    label: park.name,\n    data: OVERVIEW_HOURS_ARRAY.map(hours => calculateFee(park.feeRates, hours)),\n    borderColor: park.color,\n    backgroundColor: park.color,\n    fill: false,\n}));\nexport const chartData = {\n    labels: OVERVIEW_HOURS_ARRAY.map(hour => `${hour} hr${hour > 1 ? 's' : ''}`),\n    datasets: feeOverview,\n};\nexport const chartOptions = {\n    maintainAspectRatio: false,\n    plugins: {\n        tooltip: {\n            // show all parking fee at the hour\n            mode: 'index',\n            intersect: false,\n            // put cheaper parking to be displayed first\n            itemSort: (a, b) => a.parsed.y - b.parsed.y,\n        },\n        legend: {\n            position: 'bottom',\n            labels: {\n                boxWidth: 5,\n                padding: 20,\n                usePointStyle: true,\n            },\n        },\n    },\n    hover: {\n        mode: 'nearest',\n        intersect: true,\n    },\n    scales: {\n        y: {\n            beginAtZero: true,\n            grid: {\n                color: COLORS.GRID,\n                borderColor: COLORS.GRID,\n            },\n        },\n        x: {\n            grid: {\n                color: COLORS.GRID,\n                borderColor: COLORS.GRID,\n            },\n        },\n    },\n};\n","<script lang=\"ts\">\n  import { Chart } from 'chart.js'\n  import { onMount } from 'svelte'\n  import { chartData, chartOptions } from '../config/chart'\n\n  let chartElement: HTMLCanvasElement\n  onMount(() => {\n    new Chart(chartElement, {\n      type: 'line',\n      data: chartData,\n      options: chartOptions,\n    })\n  })\n</script>\n\n<div class=\"chart-container\">\n  <canvas bind:this={chartElement} height=\"280\" />\n</div>\n\n<style>\n  .chart-container {\n    max-width: 600px;\n    margin: 0 auto;\n  }\n</style>\n","<svg\n  aria-hidden=\"true\"\n  focusable=\"false\"\n  data-prefix=\"fas\"\n  data-icon=\"parking\"\n  role=\"img\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 448 512\"\n  class=\"svg-inline--fa fa-parking fa-w-14\"\n>\n  <path\n    fill=\"currentColor\"\n    d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM240 320h-48v48c0 8.8-7.2 16-16 16h-32c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16h96c52.9 0 96 43.1 96 96s-43.1 96-96 96zm0-128h-48v64h48c17.6 0 32-14.4 32-32s-14.4-32-32-32z\"\n    class=\"\"\n  />\n</svg>\n","<script>\n  import COLORS from '../config/colors'\n  import IconPark from './IconPark.svelte'\n</script>\n\n<button\n  class=\"floating-button _prevent-selection\"\n  style=\"background-color: {COLORS.PURPLE}\"\n  on:click|preventDefault\n>\n  <IconPark />\n  Park\n</button>\n","/**\n * fill the value to match the desire length and return as a string\n */\nexport function strPad(value, length, pad) {\n    const parsedValue = typeof value === 'number' ? value.toString() : value;\n    if (parsedValue.length >= length)\n        return parsedValue;\n    return `${pad.repeat(length - parsedValue.length)}${value}`;\n}\n","import { strPad } from './string';\n/**\n * Get duration between two date objects in milliseconds\n * NOTE: the duration will always be positive, which mean the arguments order won't affect the result\n */\nexport function getDuration(dateStart, dateEnd = new Date()) {\n    return Math.abs(dateEnd.getTime() - dateStart.getTime());\n}\n/**\n * converts milliseconds to hours\n */\nexport function msToHrs(ms) {\n    return ms / 1000 / 60 / 60;\n}\nexport function durationToTime(ms) {\n    /**\n     * Takes as many whole units from the time pool (ms) as possible\n     * @param {number} msUnit - Size of a single unit in milliseconds\n     * @return {number} Number of units taken from the time pool\n     */\n    const allocate = (msUnit) => {\n        const units = Math.trunc(ms / msUnit);\n        ms -= units * msUnit;\n        return units;\n    };\n    return {\n        hours: allocate(3600000),\n        minutes: allocate(60000),\n        seconds: allocate(1000),\n    };\n}\nexport function formatDuration(ms) {\n    const time = durationToTime(ms);\n    return `${strPad(time.hours, 2, '0')}:${strPad(time.minutes, 2, '0')}:${strPad(time.seconds, 2, '0')}`;\n}\n","<script lang=\"ts\">\n  import { onDestroy } from 'svelte'\n  import COLORS from '../config/colors'\n  import { FeeRate, parkConfig } from '../config/park'\n  import { calculateFee } from '../functions/fee'\n  import { formatDuration, getDuration, msToHrs } from '../utils/time'\n\n  export let isLive = false\n  export let parkId: string\n  export let start: Date\n  export let onClickLiveButton: (event: MouseEvent) => void\n\n  let name: string\n  let color: string\n  let duration: number\n  let feeRates: FeeRate[]\n  let fee: number\n  \n  function updateDurationAndFee() {\n    duration = getDuration(start)\n    fee = calculateFee(feeRates, msToHrs(duration)) \n  }\n  \n  $: {\n    const parkInfo = parkConfig[parkId]\n    name = parkInfo.name\n    color = parkInfo.color\n    feeRates = parkInfo.feeRates\n    updateDurationAndFee()\n  }\n\n  let timeoutId: number\n  $: if (isLive) {\n    timeoutId = window.setTimeout(updateDurationAndFee, 1000)\n  } else {\n    clearTimeout(timeoutId)\n  }\n  onDestroy(() => {\n    clearTimeout(timeoutId)\n  })\n</script>\n\n<div class=\"container\">\n  <button class=\"live-button\" class:-live={isLive} on:click|preventDefault={onClickLiveButton}>\n    LIVE\n  </button>\n  <h2 class=\"park-title\" style=\"color: {color};\">{name}</h2>\n  <div class=\"park-info-field\">\n    <span class=\"label\">Check-in:</span>\n    <span class=\"value\">{start.toLocaleString()}</span>\n  </div>\n  <div class=\"park-info-field\">\n    <span class=\"label\">Duration:</span>\n    <span class=\"value\">{formatDuration(duration)}</span>\n  </div>\n  <hr class=\"separator\" />\n  <div class=\"park-info-field -summary\">\n    <span class=\"label\">Total:</span>\n    <span class=\"value\" style=\"color: {COLORS.GREEN};\">\n      {fee.toLocaleString('en-TH', {\n        style: 'currency',\n        currency: 'THB',\n      })}\n    </span>\n  </div>\n</div>\n\n<style>\n  .container {\n    position: relative;\n    background-color: #1d1d1d;\n    margin-top: 12px;\n    padding: 24px;\n    border-radius: var(--rounded-radius);\n  }\n\n  .live-button {\n    position: absolute;\n    top: 30px;\n    right: 24px;\n    width: 42px;\n    height: 18px;\n    font-size: 10px;\n    background-color: #636363;\n    color: #ffffff;\n    border-radius: 10px;\n    box-shadow: none;\n    border: 0 none;\n    outline: 0 none;\n    opacity: 0.6;\n    cursor: pointer;\n  }\n\n  @keyframes pulse {\n    0% {\n      background-color: #ff4a48;\n    }\n    50% {\n      background-color: #9c3333;\n    }\n    100% {\n      background-color: #ff4a48;\n    }\n  }\n\n  .live-button.-live {\n    opacity: 1;\n    animation: pulse 1s infinite ease-in-out;\n  }\n\n  .park-title {\n    margin: 0 0 12px;\n    font-size: 21px;\n    text-align: left;\n  }\n\n  .park-info-field:not(:last-child) {\n    margin-bottom: 8px;\n  }\n\n  .park-info-field > .label {\n    display: inline-block;\n    vertical-align: baseline;\n    min-width: 72px;\n  }\n\n  .park-info-field > .value {\n    font-weight: 700;\n  }\n\n  .separator {\n    margin: 24px 0;\n    border: solid rgba(255, 255, 255, 0.2);\n    border-width: 0 0 1px 0;\n  }\n\n  .park-info-field.-summary {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .park-info-field.-summary > .value {\n    font-size: 21px;\n    font-weight: 700;\n    text-align: right;\n  }\n</style>\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script lang=\"ts\">\n  import { parkConfigEntries } from '../config/park'\n  import { fade, fly } from 'svelte/transition'\n\n  export let onClickBackdrop: () => void\n  export let onChoosePark: (parkId: string) => void\n</script>\n\n<div\n  class=\"backdrop\"\n  on:click|preventDefault={onClickBackdrop}\n  transition:fade={{ duration: 300 }}\n/>\n<section class=\"popup\" transition:fly={{ y: 40, duration: 300 }}>\n  <div class=\"popup-header\">Where are you parking at?</div>\n  <ul class=\"park-list\">\n    {#each parkConfigEntries as [parkId, parkInfo] (parkId)}\n      <li\n        class=\"park-list-item _prevent-selection\"\n        data-park-id={parkId}\n        on:click={() => onChoosePark(parkId)}\n      >\n        {parkInfo.name}\n      </li>\n    {/each}\n  </ul>\n</section>\n\n<style>\n  .popup {\n    position: fixed;\n    z-index: 100;\n    top: 50%;\n    left: 24px;\n    right: 24px;\n    transform: translateY(-50%);\n    background-color: #272727;\n    padding: 24px;\n    border-radius: var(--rounded-radius);\n  }\n\n  .backdrop {\n    position: fixed;\n    z-index: 90;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n\n  .popup-header {\n    margin-bottom: 16px;\n  }\n\n  .park-list {\n    padding: 0;\n    margin: 0;\n  }\n\n  .park-list-item {\n    list-style: none;\n    padding: 16px;\n    cursor: pointer;\n  }\n\n  .park-list-item:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: var(--rounded-radius);\n  }\n</style>\n","<svg\n  aria-hidden=\"true\"\n  focusable=\"false\"\n  data-prefix=\"fas\"\n  data-icon=\"trash\"\n  role=\"img\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 448 512\"\n  class=\"svg-inline--fa fa-trash fa-w-14\"\n>\n  <path\n    fill=\"currentColor\"\n    d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"\n    class=\"\"\n  />\n</svg>\n","<script>\n  import COLORS from '../config/colors'\n  import IconTrash from './IconTrash.svelte'\n</script>\n\n<button\n  class=\"floating-button _prevent-selection\"\n  style=\"background-color: {COLORS.YELLOW}\"\n  on:click|preventDefault\n>\n  <IconTrash />\n  Reset\n</button>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import FeeChart from './components/FeeChart.svelte'\n  import ParkButton from './components/ParkButton.svelte'\n  import ParkingInfo from './components/ParkingInfo.svelte'\n  import PopupChoosePark from './components/PopupChoosePark.svelte'\n  import ResetButton from './components/ResetButton.svelte'\n  import { storage } from './functions/fee'\n\n  interface CurrentParkState {\n    parkId: string\n    start: Date\n  }\n\n  let isChoosingPark = false\n  let currentPark: CurrentParkState | undefined\n  let isLive = false\n\n  onMount(() => {\n    // Get data from storage and populate into local state\n    const { start, parkId, isLive: storageIsLive } = storage.getData()\n    if (!start || !parkId) return undefined\n\n    isLive = storageIsLive\n    currentPark = { parkId, start }\n  })\n\n  function onChoosePark(parkId: string) {\n    const newParkingInfo = { parkId, start: new Date() }\n    // store it to storage\n    storage.store({ start: newParkingInfo.start, parkId })\n    // update the state\n    currentPark = newParkingInfo\n    // close the popup\n    isChoosingPark = false\n  }\n\n  function onResetPark() {\n    // reset storage\n    storage.reset()\n    // preserve isLive in storage\n    storage.store({ isLive })\n    currentPark = undefined\n  }\n\n  function onClickLiveButton() {\n    isLive = !isLive\n    storage.store({ isLive })\n  }\n</script>\n\n<main class=\"app\">\n  <h1 class=\"header\">Bike parking fee</h1>\n  <FeeChart />\n\n  {#if currentPark}\n    <ParkingInfo\n      {isLive}\n      parkId={currentPark.parkId}\n      start={currentPark.start}\n      {onClickLiveButton}\n    />\n    <ResetButton on:click={onResetPark} />\n  {:else}\n    <ParkButton on:click={() => (isChoosingPark = true)} />\n  {/if}\n\n  {#if isChoosingPark}\n    <PopupChoosePark\n      {onChoosePark}\n      onClickBackdrop={() => (isChoosingPark = false)}\n    />\n  {/if}\n</main>\n\n<style>\n  .header {\n    font-size: 21px;\n    text-align: center;\n    margin: 0 0 24px;\n  }\n</style>\n","import App from './App.svelte';\nconst app = new App({ target: document.body });\nexport default app;\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","setProperty","toggle_class","toggle","classList","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","add","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","bubble","callbacks","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","callback","has","fragment","before_update","dirty","ctx","after_update","promise","dispatch","direction","kind","dispatchEvent","detail","bubbles","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","destroy_block","lookup","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","index","splice","$$props","obj","$$set","keys","requestAnimFrame","throttled","thisArg","updateFn","updateArgs","args","prototype","ticking","apply","_alignStartEnd","align","id","isNullOrUndef","isArray","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","k","isValidKey","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","charAt","toUpperCase","defined","isFunction","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","y","epsilon","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","distanceBetweenPoints","pt1","pt2","sqrt","_angleDiff","_normalizeAngle","_angleBetween","angle","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","hex","h1","h2","eq","hexString","v","g","isShort","lim","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","_rgb","_valid","valid","hslString","color","weight","me","c1","c2","w2","w1","val","deg","rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","set","scope","values","defaults","_descriptors","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","_resolveScriptable","isIndexable","arr","item","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","splitByStyles","segments","segmentOptions","baseStyle","readStyle","prevStyle","p0","p0DataIndex","p1DataIndex","_datasetIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","anims","date","numSteps","initial","currentStep","_update","_refresh","remaining","running","draw","_active","_total","_notify","charts","complete","progress","_getAnims","reduce","acc","cur","_duration","cancel","interpolators","boolean","to","factor","c0","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","wait","all","awaitAll","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","hidden","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","arguments","_sync","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","BarController","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","tooltip","title","DoughnutController","innerRadius","outerRadius","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","getRelativePosition$1","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","getProps","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","error","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","setsEqual","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","getAngleFromPoint","rAdjust","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","inflateAmount","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","original","getPropertyPriority","prevTextDirection","overrideTextDirection","textDirection","drawBody","drawFooter","restoreTextDirection","positionChanged","_positionChanged","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","labelCount","numberOrZero","param","logarithmic","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","calculateFee","feeRates","parkedHrs","TypeError","totalCost","hrsLeft","rate","costByRate","hrs","cost","storage","store","prevData","getData","localStorage","setItem","rawData","getItem","parsedData","removeItem","COLORS","parkConfig","ICON","SAMYAN","MBK","CTW","SIAM_CEN","parkConfigEntries","OVERVIEW_HOURS_ARRAY","unused","feeOverview","park","hours","chartData","chartOptions","chartElement","strPad","pad","repeat","formatDuration","ms","allocate","msUnit","units","trunc","minutes","seconds","durationToTime","toLocaleString","currency","fee","timeoutId","isLive","parkId","onClickLiveButton","updateDurationAndFee","dateStart","dateEnd","getTime","getDuration","parkInfo","cubicOut","fade","fly","target_opacity","transform","od","u","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","onClickBackdrop","onChoosePark","currentPark","isChoosingPark","storageIsLive","newParkingInfo"],"mappings":"gCAAA,SAASA,KACT,MAAMC,EAAWC,GAAKA,EAetB,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAiIhF,MAAME,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMtB,EASxD,MAAMwB,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMd,SAAQiB,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,QAGM,IAAfN,EAAMO,MACNV,EAAIK,GA+HZ,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAWvB,SAASE,EAAmBF,GACxB,IAAKA,EACD,OAAOG,SACX,MAAMC,EAAOJ,EAAKK,YAAcL,EAAKK,cAAgBL,EAAKM,cAC1D,OAAIF,GAAQA,EAAKG,KACNH,EAEJJ,EAAKM,cAEhB,SAASE,EAAwBR,GAC7B,MAAMS,EAAgBC,EAAQ,SAE9B,OAEJ,SAA2BV,EAAMW,GAC7Bb,EAAOE,EAAKY,MAAQZ,EAAMW,GAJ1BE,CAAkBX,EAAmBF,GAAOS,GACrCA,EA6BX,SAASK,EAAOf,EAAQC,EAAMe,GAC1BhB,EAAOiB,aAAahB,EAAMe,GAAU,MAUxC,SAASE,EAAOjB,GACZA,EAAKkB,WAAWC,YAAYnB,GAQhC,SAASU,EAAQU,GACb,OAAOjB,SAASkB,cAAcD,GAiBlC,SAASE,EAAYF,GACjB,OAAOjB,SAASoB,gBAAgB,6BAA8BH,GAElE,SAASI,EAAKC,GACV,OAAOtB,SAASuB,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAO5B,EAAM6B,EAAOC,EAASC,GAElC,OADA/B,EAAKgC,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM/B,EAAKiC,oBAAoBJ,EAAOC,EAASC,GAE1D,SAASG,EAAgBhE,GACrB,OAAO,SAAU2D,GAGb,OAFAA,EAAMM,iBAECjE,EAAGkE,KAAKC,KAAMR,IAwB7B,SAASS,EAAKtC,EAAMuC,EAAWC,GACd,MAATA,EACAxC,EAAKyC,gBAAgBF,GAChBvC,EAAK0C,aAAaH,KAAeC,GACtCxC,EAAK2C,aAAaJ,EAAWC,GAqLrC,SAASI,EAASpB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKqB,YAAcpB,IACnBD,EAAKC,KAAOA,GAapB,SAASqB,EAAU9C,EAAM+C,EAAKP,EAAOQ,GACjChD,EAAKW,MAAMsC,YAAYF,EAAKP,EAAOQ,EAAY,YAAc,IA8EjE,SAASE,EAAaxC,EAASU,EAAM+B,GACjCzC,EAAQ0C,UAAUD,EAAS,MAAQ,UAAU/B,GA8EjD,MAAMiC,EAAc,IAAI9D,IACxB,IAiII+D,EAjIAC,EAAS,EASb,SAASC,EAAYxD,EAAMpB,EAAGC,EAAG4E,EAAUC,EAAOC,EAAMzF,EAAI0F,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,GAAKF,EAAM,CAC/B,MAAMG,EAAIpF,GAAKC,EAAID,GAAK+E,EAAKI,GAC7BD,GAAiB,IAAJC,EAAU,KAAK7F,EAAG8F,EAAG,EAAIA,QAE1C,MAAMC,EAAOH,EAAY,SAAS5F,EAAGW,EAAG,EAAIA,SACtCuC,EAAO,YAfjB,SAAc8C,GACV,IAAIC,EAAO,KACPC,EAAIF,EAAIG,OACZ,KAAOD,KACHD,GAASA,GAAQ,GAAKA,EAAQD,EAAII,WAAWF,GACjD,OAAOD,IAAS,EAUSA,CAAKF,MAASL,IACjCW,EAAMrE,EAAmBF,GAC/BqD,EAAYmB,IAAID,GAChB,MAAME,EAAaF,EAAIG,sBAAwBH,EAAIG,oBAAsBlE,EAAwBR,GAAM2E,OACjGC,EAAgBL,EAAIM,iBAAmBN,EAAIM,eAAiB,IAC7DD,EAAcxD,KACfwD,EAAcxD,IAAQ,EACtBqD,EAAWK,WAAW,cAAc1D,KAAQ6C,IAAQQ,EAAWM,SAASV,SAE5E,MAAMW,EAAYhF,EAAKW,MAAMqE,WAAa,GAG1C,OAFAhF,EAAKW,MAAMqE,UAAY,GAAGA,EAAY,GAAGA,MAAgB,KAAK5D,KAAQqC,cAAqBC,aAC3FH,GAAU,EACHnC,EAEX,SAAS6D,EAAYjF,EAAMoB,GACvB,MAAM8D,GAAYlF,EAAKW,MAAMqE,WAAa,IAAIG,MAAM,MAC9CC,EAAOF,EAASG,OAAOjE,EACvBkE,GAAQA,EAAKC,QAAQnE,GAAQ,EAC7BkE,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAASb,OAASe,EAAKf,OACnCmB,IACAxF,EAAKW,MAAMqE,UAAYI,EAAKK,KAAK,MACjClC,GAAUiC,EACLjC,GAKTpE,GAAI,KACIoE,IAEJF,EAAY7E,SAAQ+F,IAChB,MAAME,EAAaF,EAAIG,oBACvB,IAAIN,EAAIK,EAAWM,SAASV,OAC5B,KAAOD,KACHK,EAAWiB,WAAWtB,GAC1BG,EAAIM,eAAiB,MAEzBxB,EAAYsC,aA0EpB,SAASC,EAAsBC,GAC3BvC,EAAoBuC,EAExB,SAASC,IACL,IAAKxC,EACD,MAAM,IAAIyC,MAAM,oDACpB,OAAOzC,EAKX,SAAS0C,EAAQ9H,GACb4H,IAAwBG,GAAGC,SAASC,KAAKjI,GAqC7C,SAASkI,EAAOP,EAAWhE,GACvB,MAAMwE,EAAYR,EAAUI,GAAGI,UAAUxE,EAAMyE,MAC3CD,GAEAA,EAAUE,QAAQ/H,SAAQN,GAAMA,EAAGkE,KAAKC,KAAMR,KAItD,MAAM2E,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB9I,GACzBwI,EAAiBP,KAAKjI,GAK1B,IAAI+I,GAAW,EACf,MAAMC,EAAiB,IAAI3H,IAC3B,SAAS4H,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAI7C,EAAI,EAAGA,EAAIoC,EAAiBnC,OAAQD,GAAK,EAAG,CACjD,MAAMyB,EAAYW,EAAiBpC,GACnCwB,EAAsBC,GACtBuB,EAAOvB,EAAUI,IAIrB,IAFAL,EAAsB,MACtBY,EAAiBnC,OAAS,EACnBoC,EAAkBpC,QACrBoC,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAIrC,EAAI,EAAGA,EAAIsC,EAAiBrC,OAAQD,GAAK,EAAG,CACjD,MAAMkD,EAAWZ,EAAiBtC,GAC7B8C,EAAeK,IAAID,KAEpBJ,EAAe1C,IAAI8C,GACnBA,KAGRZ,EAAiBrC,OAAS,QACrBmC,EAAiBnC,QAC1B,KAAOsC,EAAgBtC,QACnBsC,EAAgBU,KAAhBV,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAevB,SAEnB,SAASyB,EAAOnB,GACZ,GAAoB,OAAhBA,EAAGuB,SAAmB,CACtBvB,EAAGmB,SACH9I,EAAQ2H,EAAGwB,eACX,MAAMC,EAAQzB,EAAGyB,MACjBzB,EAAGyB,MAAQ,EAAE,GACbzB,EAAGuB,UAAYvB,EAAGuB,SAASzD,EAAEkC,EAAG0B,IAAKD,GACrCzB,EAAG2B,aAAapJ,QAAQwI,IAIhC,IAAIa,EAUJ,SAASC,EAAS9H,EAAM+H,EAAWC,GAC/BhI,EAAKiI,cA3VT,SAAsB3B,EAAM4B,EAAQC,GAAU,GAC1C,MAAMC,EAAIjI,SAASkI,YAAY,eAE/B,OADAD,EAAEE,gBAAgBhC,EAAM6B,GAAS,EAAOD,GACjCE,EAwVYG,CAAa,GAAGR,EAAY,QAAU,UAAUC,MAEvE,MAAMQ,EAAW,IAAIjJ,IACrB,IAAIkJ,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHjJ,EAAG,GACHqE,EAAG0E,GAGX,SAASG,IACAH,EAAOE,GACRrK,EAAQmK,EAAO/I,GAEnB+I,EAASA,EAAO1E,EAEpB,SAAS8E,EAAcC,EAAOC,GACtBD,GAASA,EAAM1E,IACfoE,EAAS7I,OAAOmJ,GAChBA,EAAM1E,EAAE2E,IAGhB,SAASC,GAAeF,EAAOC,EAAO9H,EAAQqG,GAC1C,GAAIwB,GAASA,EAAMG,EAAG,CAClB,GAAIT,EAASjB,IAAIuB,GACb,OACJN,EAAShE,IAAIsE,GACbL,EAAO/I,EAAEyG,MAAK,KACVqC,EAAS7I,OAAOmJ,GACZxB,IACIrG,GACA6H,EAAMI,EAAE,GACZ5B,QAGRwB,EAAMG,EAAEF,IAGhB,MAAMI,GAAkB,CAAE1F,SAAU,GAwHpC,SAAS2F,GAAgCpJ,EAAM9B,EAAImL,EAAQC,GACvD,IAAIC,EAASrL,EAAG8B,EAAMqJ,GAClBrF,EAAIsF,EAAQ,EAAI,EAChBE,EAAkB,KAClBC,EAAkB,KAClBC,EAAiB,KACrB,SAASC,IACDD,GACAzE,EAAYjF,EAAM0J,GAE1B,SAASE,EAAKC,EAASpG,GACnB,MAAMyF,EAAKW,EAAQhL,EAAImF,EAEvB,OADAP,GAAYqG,KAAKC,IAAIb,GACd,CACHtK,EAAGoF,EACHnF,EAAGgL,EAAQhL,EACXqK,EAAAA,EACAzF,SAAAA,EACAuG,MAAOH,EAAQG,MACfC,IAAKJ,EAAQG,MAAQvG,EACrByG,MAAOL,EAAQK,OAGvB,SAASC,EAAGtL,GACR,MAAM6E,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG2G,OAAEA,EAASrM,EAAQsM,KAAEA,EAAOvM,EAAIwM,IAAEA,GAAQf,GAAUJ,GAC/EU,EAAU,CACZG,MAAOhL,IAAQ0E,EACf7E,EAAAA,GAECA,IAEDgL,EAAQK,MAAQzB,EAChBA,EAAOE,GAAK,GAEZa,GAAmBC,EACnBA,EAAkBI,GAKdS,IACAX,IACAD,EAAiBlG,EAAYxD,EAAMgE,EAAGnF,EAAG4E,EAAUC,EAAO0G,EAAQE,IAElEzL,GACAwL,EAAK,EAAG,GACZb,EAAkBI,EAAKC,EAASpG,GAChCuD,GAAoB,IAAMc,EAAS9H,EAAMnB,EAAG,WA9jCxD,SAAcyI,GACV,IAAI7H,EACe,IAAfH,EAAMO,MACNV,EAAIK,GAEK,IAAIqH,SAAQ0D,IACjBjL,EAAMkF,IAAI/E,EAAO,CAAEC,EAAG4H,EAAU1H,EAAG2K,OAyjCnCC,EAAKxL,IAUD,GATIyK,GAAmBzK,EAAMyK,EAAgBO,QACzCR,EAAkBI,EAAKH,EAAiBhG,GACxCgG,EAAkB,KAClB3B,EAAS9H,EAAMwJ,EAAgB3K,EAAG,SAC9ByL,IACAX,IACAD,EAAiBlG,EAAYxD,EAAMgE,EAAGwF,EAAgB3K,EAAG2K,EAAgB/F,SAAU,EAAG2G,EAAQb,EAAOe,OAGzGd,EACA,GAAIxK,GAAOwK,EAAgBS,IACvBI,EAAKrG,EAAIwF,EAAgB3K,EAAG,EAAImF,GAChC8D,EAAS9H,EAAMwJ,EAAgB3K,EAAG,OAC7B4K,IAEGD,EAAgB3K,EAEhB8K,MAIOH,EAAgBU,MAAMvB,GACzBrK,EAAQkL,EAAgBU,MAAMxK,IAG1C8J,EAAkB,UAEjB,GAAIxK,GAAOwK,EAAgBQ,MAAO,CACnC,MAAMjG,EAAI/E,EAAMwK,EAAgBQ,MAChChG,EAAIwF,EAAgB5K,EAAI4K,EAAgBN,EAAIkB,EAAOrG,EAAIyF,EAAgB/F,UACvE4G,EAAKrG,EAAG,EAAIA,GAGpB,SAAUwF,IAAmBC,OAIzC,MAAO,CACHgB,IAAI5L,GACIJ,EAAY8K,IAhQnB1B,IACDA,EAAUhB,QAAQC,UAClBe,EAAQ6C,MAAK,KACT7C,EAAU,SAGXA,GA2PY6C,MAAK,KAERnB,EAASA,IACTY,EAAGtL,MAIPsL,EAAGtL,IAGX4L,MACId,IACAH,EAAkBC,EAAkB,OA6FhD,SAASkB,GAAc7B,EAAO8B,GAC1B9B,EAAMI,EAAE,GACR0B,EAAOjL,OAAOmJ,EAAM/F,KAmSxB,SAAS8H,GAAiB/B,GACtBA,GAASA,EAAMpJ,IAKnB,SAASoL,GAAgBjF,EAAW9F,EAAQgB,EAAQgK,GAChD,MAAMvD,SAAEA,EAAQtB,SAAEA,EAAQ8E,WAAEA,EAAUpD,aAAEA,GAAiB/B,EAAUI,GACnEuB,GAAYA,EAASyD,EAAElL,EAAQgB,GAC1BgK,GAED/D,GAAoB,KAChB,MAAMkE,EAAiBhF,EAASiF,IAAIlN,GAAKoH,OAAO5G,GAC5CuM,EACAA,EAAW7E,QAAQ+E,GAKnB5M,EAAQ4M,GAEZrF,EAAUI,GAAGC,SAAW,MAGhC0B,EAAapJ,QAAQwI,GAEzB,SAASoE,GAAkBvF,EAAWwF,GAClC,MAAMpF,EAAKJ,EAAUI,GACD,OAAhBA,EAAGuB,WACHlJ,EAAQ2H,EAAG+E,YACX/E,EAAGuB,UAAYvB,EAAGuB,SAAS0B,EAAEmC,GAG7BpF,EAAG+E,WAAa/E,EAAGuB,SAAW,KAC9BvB,EAAG0B,IAAM,IAGjB,SAAS2D,GAAWzF,EAAWzB,IACI,IAA3ByB,EAAUI,GAAGyB,MAAM,KACnBlB,EAAiBL,KAAKN,GAxvBrBkB,IACDA,GAAmB,EACnBH,EAAiB8D,KAAKvD,IAwvBtBtB,EAAUI,GAAGyB,MAAM6D,KAAK,IAE5B1F,EAAUI,GAAGyB,MAAOtD,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASwF,GAAK/D,EAAW9D,EAASyJ,EAAUC,EAAiBC,EAAWC,EAAOC,EAAelE,EAAQ,EAAE,IACpG,MAAMmE,EAAmBvI,EACzBsC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBuB,SAAU,KACVG,IAAK,KAELgE,MAAAA,EACAvE,OAAQtJ,EACR4N,UAAAA,EACAI,MAAO3N,IAEP+H,SAAU,GACV8E,WAAY,GACZe,cAAe,GACftE,cAAe,GACfG,aAAc,GACdoE,QAAS,IAAIC,IAAIlK,EAAQiK,UAAYH,EAAmBA,EAAiB5F,GAAG+F,QAAU,KAEtF3F,UAAWlI,IACXuJ,MAAAA,EACAwE,YAAY,EACZ9L,KAAM2B,EAAQhC,QAAU8L,EAAiB5F,GAAG7F,MAEhDwL,GAAiBA,EAAc3F,EAAG7F,MAClC,IAAI+L,GAAQ,EAkBZ,GAjBAlG,EAAG0B,IAAM6D,EACHA,EAAS3F,EAAW9D,EAAQ4J,OAAS,IAAI,CAACvH,EAAGgI,KAAQC,KACnD,MAAM7J,EAAQ6J,EAAKhI,OAASgI,EAAK,GAAKD,EAOtC,OANInG,EAAG0B,KAAO+D,EAAUzF,EAAG0B,IAAIvD,GAAI6B,EAAG0B,IAAIvD,GAAK5B,MACtCyD,EAAGiG,YAAcjG,EAAG6F,MAAM1H,IAC3B6B,EAAG6F,MAAM1H,GAAG5B,GACZ2J,GACAb,GAAWzF,EAAWzB,IAEvBgI,KAET,GACNnG,EAAGmB,SACH+E,GAAQ,EACR7N,EAAQ2H,EAAGwB,eAEXxB,EAAGuB,WAAWiE,GAAkBA,EAAgBxF,EAAG0B,KAC/C5F,EAAQhC,OAAQ,CAChB,GAAIgC,EAAQuK,QAAS,CAEjB,MAAMC,EAvxClB,SAAkB7L,GACd,OAAO8L,MAAMC,KAAK/L,EAAQgM,YAsxCJC,CAAS5K,EAAQhC,QAE/BkG,EAAGuB,UAAYvB,EAAGuB,SAASoF,EAAEL,GAC7BA,EAAM/N,QAAQyC,QAIdgF,EAAGuB,UAAYvB,EAAGuB,SAAS9H,IAE3BqC,EAAQuH,OACRT,EAAchD,EAAUI,GAAGuB,UAC/BsD,GAAgBjF,EAAW9D,EAAQhC,OAAQgC,EAAQhB,OAAQgB,EAAQgJ,eAEnE5D,IAEJvB,EAAsBiG,GAkD1B,MAAMgB,GACFpC,WACIW,GAAkB/I,KAAM,GACxBA,KAAKyK,SAAWhP,EAEpB2M,IAAInE,EAAMgB,GACN,MAAMjB,EAAahE,KAAK4D,GAAGI,UAAUC,KAAUjE,KAAK4D,GAAGI,UAAUC,GAAQ,IAEzE,OADAD,EAAUF,KAAKmB,GACR,KACH,MAAMyF,EAAQ1G,EAAUd,QAAQ+B,IACjB,IAAXyF,GACA1G,EAAU2G,OAAOD,EAAO,IAGpCtC,KAAKwC,GAtzDT,IAAkBC,EAuzDN7K,KAAK8K,QAvzDCD,EAuzDkBD,EAtzDG,IAA5B7O,OAAOgP,KAAKF,GAAK7I,UAuzDhBhC,KAAK4D,GAAGiG,YAAa,EACrB7J,KAAK8K,MAAMF,GACX5K,KAAK4D,GAAGiG,YAAa;;;;;;OC31DjC,MAAMmB,GACkB,oBAAXtO,OACF,SAASuI,GACd,OAAOA,KAGJvI,OAAOM,sBAEhB,SAASiO,GAAUpP,EAAIqP,EAASC,GAC9B,MAAMC,EAAaD,IAAcE,GAASlB,MAAMmB,UAAUpH,MAAMnE,KAAKsL,IACrE,IAAIE,GAAU,EACVF,EAAO,GACX,OAAO,YAAYrB,GACjBqB,EAAOD,EAAWpB,GACbuB,IACHA,GAAU,EACVP,GAAiBjL,KAAKrD,QAAQ,KAC5B6O,GAAU,EACV1P,EAAG2P,MAAMN,EAASG,QAiB1B,MACMI,GAAiB,CAACC,EAAO/D,EAAOC,IAAkB,UAAV8D,EAAoB/D,EAAkB,QAAV+D,EAAkB9D,GAAOD,EAAQC,GAAO,EAO5GrG,GAAO,WACX,IAAIoK,EAAK,EACT,OAAO,WACL,OAAOA,QAGX,SAASC,GAAczL,GACrB,OAAOA,MAAAA,EAET,SAAS0L,GAAQ1L,GACf,GAAIgK,MAAM0B,SAAW1B,MAAM0B,QAAQ1L,GACjC,OAAO,EAET,MAAM8D,EAAOlI,OAAOuP,UAAUQ,SAAS/L,KAAKI,GAC5C,MAA0B,YAAtB8D,EAAK8H,OAAO,EAAG,IAAwC,WAApB9H,EAAK8H,QAAQ,GAKtD,SAASC,GAAS7L,GAChB,OAAiB,OAAVA,GAA4D,oBAA1CpE,OAAOuP,UAAUQ,SAAS/L,KAAKI,GAE1D,MAAM8L,GAAkB9L,IAA4B,iBAAVA,GAAsBA,aAAiB+L,SAAWC,UAAUhM,GACtG,SAASiM,GAAgBjM,EAAOkM,GAC9B,OAAOJ,GAAe9L,GAASA,EAAQkM,EAEzC,SAASC,GAAenM,EAAOkM,GAC7B,YAAwB,IAAVlM,EAAwBkM,EAAelM,EAEvD,MAIMoM,GAAc,CAACpM,EAAOqM,IACT,iBAAVrM,GAAsBA,EAAMsM,SAAS,KAC1CC,WAAWvM,GAAS,IAAMqM,GACvBrM,EACP,SAAS8E,GAASpJ,EAAIwP,EAAMH,GAC1B,GAAIrP,GAAyB,mBAAZA,EAAGkE,KAClB,OAAOlE,EAAG2P,MAAMN,EAASG,GAG7B,SAASsB,GAAKC,EAAU/Q,EAAIqP,EAAS2B,GACnC,IAAI9K,EAAG+K,EAAK/B,EACZ,GAAIc,GAAQe,GAEV,GADAE,EAAMF,EAAS5K,OACX6K,EACF,IAAK9K,EAAI+K,EAAM,EAAG/K,GAAK,EAAGA,IACxBlG,EAAGkE,KAAKmL,EAAS0B,EAAS7K,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAI+K,EAAK/K,IACnBlG,EAAGkE,KAAKmL,EAAS0B,EAAS7K,GAAIA,QAG7B,GAAIiK,GAASY,GAGlB,IAFA7B,EAAOhP,OAAOgP,KAAK6B,GACnBE,EAAM/B,EAAK/I,OACND,EAAI,EAAGA,EAAI+K,EAAK/K,IACnBlG,EAAGkE,KAAKmL,EAAS0B,EAAS7B,EAAKhJ,IAAKgJ,EAAKhJ,IAI/C,SAASgL,GAAeC,EAAIC,GAC1B,IAAIlL,EAAGmL,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGhL,SAAWiL,EAAGjL,OACjC,OAAO,EAET,IAAKD,EAAI,EAAGmL,EAAOF,EAAGhL,OAAQD,EAAImL,IAAQnL,EAGxC,GAFAoL,EAAKH,EAAGjL,GACRqL,EAAKH,EAAGlL,GACJoL,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGzC,QAAU0C,EAAG1C,MACzD,OAAO,EAGX,OAAO,EAET,SAAS4C,GAAQC,GACf,GAAI1B,GAAQ0B,GACV,OAAOA,EAAOzE,IAAIwE,IAEpB,GAAItB,GAASuB,GAAS,CACpB,MAAM7P,EAAS3B,OAAOC,OAAO,MACvB+O,EAAOhP,OAAOgP,KAAKwC,GACnBC,EAAOzC,EAAK/I,OAClB,IAAIyL,EAAI,EACR,KAAOA,EAAID,IAAQC,EACjB/P,EAAOqN,EAAK0C,IAAMH,GAAQC,EAAOxC,EAAK0C,KAExC,OAAO/P,EAET,OAAO6P,EAET,SAASG,GAAWhN,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAewC,QAAQxC,GAE3D,SAASiN,GAAQjN,EAAKhD,EAAQ6P,EAAQ7N,GACpC,IAAKgO,GAAWhN,GACd,OAEF,MAAMkN,EAAOlQ,EAAOgD,GACdmN,EAAON,EAAO7M,GAChBsL,GAAS4B,IAAS5B,GAAS6B,GAC7BC,GAAMF,EAAMC,EAAMnO,GAElBhC,EAAOgD,GAAO4M,GAAQO,GAG1B,SAASC,GAAMpQ,EAAQ6P,EAAQ7N,GAC7B,MAAMqO,EAAUlC,GAAQ0B,GAAUA,EAAS,CAACA,GACtCL,EAAOa,EAAQ/L,OACrB,IAAKgK,GAAStO,GACZ,OAAOA,EAGT,MAAMsQ,GADNtO,EAAUA,GAAW,IACEsO,QAAUL,GACjC,IAAK,IAAI5L,EAAI,EAAGA,EAAImL,IAAQnL,EAAG,CAE7B,IAAKiK,GADLuB,EAASQ,EAAQhM,IAEf,SAEF,MAAMgJ,EAAOhP,OAAOgP,KAAKwC,GACzB,IAAK,IAAIE,EAAI,EAAGD,EAAOzC,EAAK/I,OAAQyL,EAAID,IAAQC,EAC9CO,EAAOjD,EAAK0C,GAAI/P,EAAQ6P,EAAQ7N,GAGpC,OAAOhC,EAET,SAASuQ,GAAQvQ,EAAQ6P,GACvB,OAAOO,GAAMpQ,EAAQ6P,EAAQ,CAACS,OAAQE,KAExC,SAASA,GAAUxN,EAAKhD,EAAQ6P,GAC9B,IAAKG,GAAWhN,GACd,OAEF,MAAMkN,EAAOlQ,EAAOgD,GACdmN,EAAON,EAAO7M,GAChBsL,GAAS4B,IAAS5B,GAAS6B,GAC7BI,GAAQL,EAAMC,GACJ9R,OAAOuP,UAAU6C,eAAepO,KAAKrC,EAAQgD,KACvDhD,EAAOgD,GAAO4M,GAAQO,IAW1B,SAASO,GAAmB1N,EAAKiH,GAC/B,MAAM0G,EAAM3N,EAAIwC,QAFN,IAEmByE,GAC7B,OAAgB,IAAT0G,EAAa3N,EAAIsB,OAASqM,EAEnC,SAASC,GAAiBzD,EAAKnK,GAC7B,GAPkB,KAOdA,EACF,OAAOmK,EAET,IAAI0D,EAAM,EACNF,EAAMD,GAAmB1N,EAAK6N,GAClC,KAAO1D,GAAOwD,EAAME,GAClB1D,EAAMA,EAAInK,EAAIqL,OAAOwC,EAAKF,EAAME,IAChCA,EAAMF,EAAM,EACZA,EAAMD,GAAmB1N,EAAK6N,GAEhC,OAAO1D,EAET,SAAS2D,GAAY3M,GACnB,OAAOA,EAAI4M,OAAO,GAAGC,cAAgB7M,EAAIqC,MAAM,GAEjD,MAAMyK,GAAWxO,QAA2B,IAAVA,EAC5ByO,GAAczO,GAA2B,mBAAVA,EAa/B0O,GAAKpH,KAAKoH,GACVC,GAAM,EAAID,GACVE,GAAQD,GAAMD,GACdG,GAAW9C,OAAO+C,kBAClBC,GAAcL,GAAK,IACnBM,GAAUN,GAAK,EACfO,GAAaP,GAAK,EAClBQ,GAAqB,EAALR,GAAS,EACzBS,GAAQ7H,KAAK6H,MACbC,GAAO9H,KAAK8H,KAClB,SAASC,GAAQC,GACf,MAAMC,EAAejI,KAAKkI,MAAMF,GAChCA,EAAQG,GAAaH,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMI,EAAYpI,KAAKqI,IAAI,GAAIrI,KAAKsI,MAAMT,GAAMG,KAC1CO,EAAWP,EAAQI,EAEzB,OADqBG,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DH,EAkBxB,SAASI,GAASC,GAChB,OAAQC,MAAMzD,WAAWwD,KAAO/D,SAAS+D,GAE3C,SAASN,GAAajU,EAAGyU,EAAGC,GAC1B,OAAO5I,KAAKC,IAAI/L,EAAIyU,GAAKC,EAM3B,SAASC,GAAmBC,EAAO7S,EAAQ8S,GACzC,IAAIzO,EAAGmL,EAAM/M,EACb,IAAK4B,EAAI,EAAGmL,EAAOqD,EAAMvO,OAAQD,EAAImL,EAAMnL,IACzC5B,EAAQoQ,EAAMxO,GAAGyO,GACZL,MAAMhQ,KACTzC,EAAO+S,IAAMhJ,KAAKgJ,IAAI/S,EAAO+S,IAAKtQ,GAClCzC,EAAOgT,IAAMjJ,KAAKiJ,IAAIhT,EAAOgT,IAAKvQ,IAIxC,SAASwQ,GAAUC,GACjB,OAAOA,GAAW/B,GAAK,KAEzB,SAASgC,GAAUC,GACjB,OAAOA,GAAW,IAAMjC,IAE1B,SAASkC,GAAepV,GACtB,IAAKsQ,GAAetQ,GAClB,OAEF,IAAIoK,EAAI,EACJrE,EAAI,EACR,KAAO+F,KAAKkI,MAAMhU,EAAIoK,GAAKA,IAAMpK,GAC/BoK,GAAK,GACLrE,IAEF,OAAOA,EAeT,SAASsP,GAAsBC,EAAKC,GAClC,OAAOzJ,KAAK0J,KAAK1J,KAAKqI,IAAIoB,EAAIvV,EAAIsV,EAAItV,EAAG,GAAK8L,KAAKqI,IAAIoB,EAAId,EAAIa,EAAIb,EAAG,IAExE,SAASgB,GAAW7U,EAAGC,GACrB,OAAQD,EAAIC,EAAIuS,IAASD,GAAMD,GAEjC,SAASwC,GAAgB9U,GACvB,OAAQA,EAAIuS,GAAMA,IAAOA,GAE3B,SAASwC,GAAcC,EAAO5J,EAAOC,EAAK4J,GACxC,MAAMjV,EAAI8U,GAAgBE,GACpBE,EAAIJ,GAAgB1J,GACpB5B,EAAIsL,GAAgBzJ,GACpB8J,EAAeL,GAAgBI,EAAIlV,GACnCoV,EAAaN,GAAgBtL,EAAIxJ,GACjCqV,EAAeP,GAAgB9U,EAAIkV,GACnCI,EAAaR,GAAgB9U,EAAIwJ,GACvC,OAAOxJ,IAAMkV,GAAKlV,IAAMwJ,GAAMyL,GAAyBC,IAAM1L,GACvD2L,EAAeC,GAAcC,EAAeC,EAEpD,SAASC,GAAY3R,EAAOsQ,EAAKC,GAC/B,OAAOjJ,KAAKiJ,IAAID,EAAKhJ,KAAKgJ,IAAIC,EAAKvQ,IAMrC,MAAM4R,GAAUpQ,GAAY,IAANA,GAAiB,IAANA,EAC3BqQ,GAAY,CAACrQ,EAAG8P,EAAG/P,KAAQ+F,KAAKqI,IAAI,EAAG,IAAMnO,GAAK,IAAM8F,KAAKwK,KAAKtQ,EAAI8P,GAAK3C,GAAMpN,GACjFwQ,GAAa,CAACvQ,EAAG8P,EAAG/P,IAAM+F,KAAKqI,IAAI,GAAI,GAAKnO,GAAK8F,KAAKwK,KAAKtQ,EAAI8P,GAAK3C,GAAMpN,GAAK,EAC/EyQ,GAAU,CACdC,OAAQzQ,GAAKA,EACb0Q,WAAY1Q,GAAKA,EAAIA,EACrB2Q,YAAa3Q,IAAMA,GAAKA,EAAI,GAC5B4Q,cAAe5Q,IAAOA,GAAK,IAAO,EAC9B,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAC9B6Q,YAAa7Q,GAAKA,EAAIA,EAAIA,EAC1B8Q,aAAc9Q,IAAMA,GAAK,GAAKA,EAAIA,EAAI,EACtC+Q,eAAgB/Q,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAC9BgR,YAAahR,GAAKA,EAAIA,EAAIA,EAAIA,EAC9BiR,aAAcjR,MAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5CkR,eAAgBlR,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GACnCmR,YAAanR,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCoR,aAAcpR,IAAMA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CqR,eAAgBrR,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GACtCsR,WAAYtR,GAA8B,EAAxB8F,KAAKyL,IAAIvR,EAAIwN,IAC/BgE,YAAaxR,GAAK8F,KAAKwK,IAAItQ,EAAIwN,IAC/BiE,cAAezR,IAAM,IAAO8F,KAAKyL,IAAIrE,GAAKlN,GAAK,GAC/C0R,WAAY1R,GAAY,IAANA,EAAW,EAAI8F,KAAKqI,IAAI,EAAG,IAAMnO,EAAI,IACvD2R,YAAa3R,GAAY,IAANA,EAAW,EAA4B,EAAvB8F,KAAKqI,IAAI,GAAI,GAAKnO,GACrD4R,cAAe5R,GAAKoQ,GAAOpQ,GAAKA,EAAIA,EAAI,GACpC,GAAM8F,KAAKqI,IAAI,EAAG,IAAU,EAAJnO,EAAQ,IAChC,IAAyC,EAAjC8F,KAAKqI,IAAI,GAAI,IAAU,EAAJnO,EAAQ,KACvC6R,WAAY7R,GAAMA,GAAK,EAAKA,IAAM8F,KAAK0J,KAAK,EAAIxP,EAAIA,GAAK,GACzD8R,YAAa9R,GAAK8F,KAAK0J,KAAK,GAAKxP,GAAK,GAAKA,GAC3C+R,cAAe/R,IAAOA,GAAK,IAAO,GAC7B,IAAO8F,KAAK0J,KAAK,EAAIxP,EAAIA,GAAK,GAC/B,IAAO8F,KAAK0J,KAAK,GAAKxP,GAAK,GAAKA,GAAK,GACzCgS,cAAehS,GAAKoQ,GAAOpQ,GAAKA,EAAIqQ,GAAUrQ,EAAG,KAAO,IACxDiS,eAAgBjS,GAAKoQ,GAAOpQ,GAAKA,EAAIuQ,GAAWvQ,EAAG,KAAO,IAC1DyG,iBAAiBzG,GACf,MAAM8P,EAAI,MAEV,OAAOM,GAAOpQ,GAAKA,EACjBA,EAAI,GACA,GAAMqQ,GAAc,EAAJrQ,EAAO8P,EAHnB,KAIJ,GAAM,GAAMS,GAAe,EAAJvQ,EAAQ,EAAG8P,EAJ9B,MAMZrJ,WAAWzG,GACT,MAAM8P,EAAI,QACV,OAAO9P,EAAIA,IAAM8P,EAAI,GAAK9P,EAAI8P,IAEhCrJ,YAAYzG,GACV,MAAM8P,EAAI,QACV,OAAQ9P,GAAK,GAAKA,IAAM8P,EAAI,GAAK9P,EAAI8P,GAAK,GAE5CrJ,cAAczG,GACZ,IAAI8P,EAAI,QACR,OAAK9P,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhB8P,WAAqB9P,EAAI8P,GAA3C,GAEF,KAAQ9P,GAAK,GAAKA,IAAuB,GAAhB8P,WAAqB9P,EAAI8P,GAAK,IAEhEoC,aAAclS,GAAK,EAAIwQ,GAAQ2B,cAAc,EAAInS,GACjDyG,cAAczG,GACZ,MAAMiH,EAAI,OACJ/B,EAAI,KACV,OAAIlF,EAAK,EAAIkF,EACJ+B,EAAIjH,EAAIA,EAEbA,EAAK,EAAIkF,EACJ+B,GAAKjH,GAAM,IAAMkF,GAAMlF,EAAI,IAEhCA,EAAK,IAAMkF,EACN+B,GAAKjH,GAAM,KAAOkF,GAAMlF,EAAI,MAE9BiH,GAAKjH,GAAM,MAAQkF,GAAMlF,EAAI,SAEtCoS,gBAAiBpS,GAAMA,EAAI,GACO,GAA9BwQ,GAAQ0B,aAAiB,EAAJlS,GACc,GAAnCwQ,GAAQ2B,cAAkB,EAAJnS,EAAQ,GAAW,IASzCmH,GAAM,CAACkL,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIxY,EAAG,GAAIC,EAAG,GAAIa,EAAG,GAAIwJ,EAAG,GAAId,EAAG,GAAIxI,EAAG,IACnJyX,GAAM,mBACNC,GAAMzY,GAAMwY,GAAQ,GAAJxY,GAChB0Y,GAAM1Y,GAAMwY,IAAS,IAAJxY,IAAa,GAAKwY,GAAQ,GAAJxY,GACvC2Y,GAAM3Y,IAAa,IAAJA,IAAa,IAAY,GAAJA,GA0B1C,SAAS4Y,GAAUC,GAClB,IAAI9X,EA1BL,SAAiB8X,GAChB,OAAOF,GAAGE,EAAE/O,IAAM6O,GAAGE,EAAEC,IAAMH,GAAGE,EAAE7Y,IAAM2Y,GAAGE,EAAE9Y,GAyBrCgZ,CAAQF,GAAKJ,GAAKC,GAC1B,OAAOG,EACJ,IAAM9X,EAAE8X,EAAE/O,GAAK/I,EAAE8X,EAAEC,GAAK/X,EAAE8X,EAAE7Y,IAAM6Y,EAAE9Y,EAAI,IAAMgB,EAAE8X,EAAE9Y,GAAK,IACvD8Y,EAEJ,SAAS1F,GAAM0F,GACd,OAAOA,EAAI,GAAM,EAElB,MAAMG,GAAM,CAACH,EAAG9K,EAAGkL,IAAMhO,KAAKiJ,IAAIjJ,KAAKgJ,IAAI4E,EAAGI,GAAIlL,GAClD,SAASmL,GAAIL,GACZ,OAAOG,GAAI7F,GAAU,KAAJ0F,GAAW,EAAG,KAEhC,SAASM,GAAIN,GACZ,OAAOG,GAAI7F,GAAU,IAAJ0F,GAAU,EAAG,KAE/B,SAASO,GAAIP,GACZ,OAAOG,GAAI7F,GAAM0F,EAAI,MAAQ,IAAK,EAAG,GAEtC,SAASQ,GAAIR,GACZ,OAAOG,GAAI7F,GAAU,IAAJ0F,GAAU,EAAG,KAE/B,MAAMS,GAAS,uGAgCf,MAAMC,GAAS,+GACf,SAASC,GAASP,EAAGhE,EAAGlH,GACvB,MAAMhO,EAAIkV,EAAIhK,KAAKgJ,IAAIlG,EAAG,EAAIA,GACxBhN,EAAI,CAAC2S,EAAGzC,GAAKyC,EAAIuF,EAAI,IAAM,KAAOlL,EAAIhO,EAAIkL,KAAKiJ,IAAIjJ,KAAKgJ,IAAIhD,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAAClQ,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAEvB,SAAS0Y,GAASR,EAAGhE,EAAG4D,GACvB,MAAM9X,EAAI,CAAC2S,EAAGzC,GAAKyC,EAAIuF,EAAI,IAAM,IAAMJ,EAAIA,EAAI5D,EAAIhK,KAAKiJ,IAAIjJ,KAAKgJ,IAAIhD,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAAClQ,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAEvB,SAAS2Y,GAAST,EAAGU,EAAG3Z,GACvB,MAAM4Z,EAAMJ,GAASP,EAAG,EAAG,IAC3B,IAAI1T,EAMJ,IALIoU,EAAI3Z,EAAI,IACXuF,EAAI,GAAKoU,EAAI3Z,GACb2Z,GAAKpU,EACLvF,GAAKuF,GAEDA,EAAI,EAAGA,EAAI,EAAGA,IAClBqU,EAAIrU,IAAM,EAAIoU,EAAI3Z,EAClB4Z,EAAIrU,IAAMoU,EAEX,OAAOC,EAER,SAASC,GAAQhB,GAChB,MACM/O,EAAI+O,EAAE/O,EADE,IAERgP,EAAID,EAAEC,EAFE,IAGR9Y,EAAI6Y,EAAE7Y,EAHE,IAIRkU,EAAMjJ,KAAKiJ,IAAIpK,EAAGgP,EAAG9Y,GACrBiU,EAAMhJ,KAAKgJ,IAAInK,EAAGgP,EAAG9Y,GACrB+N,GAAKmG,EAAMD,GAAO,EACxB,IAAIgF,EAAGhE,EAAG5K,EAWV,OAVI6J,IAAQD,IACX5J,EAAI6J,EAAMD,EACVgB,EAAIlH,EAAI,GAAM1D,GAAK,EAAI6J,EAAMD,GAAO5J,GAAK6J,EAAMD,GAC/CgF,EAAI/E,IAAQpK,GACPgP,EAAI9Y,GAAKqK,GAAMyO,EAAI9Y,EAAI,EAAI,GAC7BkU,IAAQ4E,GACN9Y,EAAI8J,GAAKO,EAAI,GACbP,EAAIgP,GAAKzO,EAAI,EAClB4O,EAAQ,GAAJA,EAAS,IAEP,CAAK,EAAJA,EAAOhE,GAAK,EAAGlH,GAExB,SAAS+L,GAAM/Y,EAAGhB,EAAGC,EAAGa,GACvB,OACC8M,MAAM0B,QAAQtP,GACXgB,EAAEhB,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBgB,EAAEhB,EAAGC,EAAGa,IACVyL,IAAI6M,IAEP,SAASY,GAAQd,EAAGhE,EAAGlH,GACtB,OAAO+L,GAAMN,GAAUP,EAAGhE,EAAGlH,GAQ9B,SAASiM,GAAIf,GACZ,OAAQA,EAAI,IAAM,KAAO,IAE1B,SAASgB,GAAS5U,GACjB,MAAM+G,EAAImN,GAAOW,KAAK7U,GACtB,IACIwT,EADA9Y,EAAI,IAER,IAAKqM,EACJ,OAEGA,EAAE,KAAOyM,IACZ9Y,EAAIqM,EAAE,GAAK8M,IAAK9M,EAAE,IAAM+M,IAAK/M,EAAE,KAEhC,MAAM6M,EAAIe,IAAK5N,EAAE,IACX+N,GAAM/N,EAAE,GAAK,IACbgO,GAAMhO,EAAE,GAAK,IAQnB,OANCyM,EADY,QAATzM,EAAE,GAtBP,SAAiB6M,EAAGU,EAAG3Z,GACtB,OAAO8Z,GAAMJ,GAAUT,EAAGU,EAAG3Z,GAsBxBqa,CAAQpB,EAAGkB,EAAIC,GACA,QAAThO,EAAE,GArBd,SAAiB6M,EAAGhE,EAAG4D,GACtB,OAAOiB,GAAML,GAAUR,EAAGhE,EAAG4D,GAqBxByB,CAAQrB,EAAGkB,EAAIC,GAEfL,GAAQd,EAAGkB,EAAIC,GAEb,CACNtQ,EAAG+O,EAAE,GACLC,EAAGD,EAAE,GACL7Y,EAAG6Y,EAAE,GACL9Y,EAAGA,GAuBL,MAAMwa,GAAQ,CACbpb,EAAG,OACHqb,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACH5C,EAAG,KACHC,EAAG,QACHC,EAAG,QACH2C,EAAG,KACHC,EAAG,WACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH/C,EAAG,KACHgD,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAEEC,GAAQ,CACbC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAkBR,IAAIC,GACJ,SAASC,GAAU7f,GACb4f,KACJA,GAnBF,WACC,MAAME,EAAW,GACX5W,EAAOhP,OAAOgP,KAAKqN,IACnBwJ,EAAQ7lB,OAAOgP,KAAKgM,IAC1B,IAAIhV,EAAG8f,EAAGpU,EAAGqU,EAAIC,EACjB,IAAKhgB,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAAK,CAEjC,IADA+f,EAAKC,EAAKhX,EAAKhJ,GACV8f,EAAI,EAAGA,EAAID,EAAM5f,OAAQ6f,IAC7BpU,EAAImU,EAAMC,GACVE,EAAKA,EAAGC,QAAQvU,EAAGsJ,GAAMtJ,IAE1BA,EAAIwU,SAAS7J,GAAM0J,GAAK,IACxBH,EAASI,GAAM,CAACtU,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,GAEhD,OAAOkU,EAKIO,GACVT,GAAQU,YAAc,CAAC,EAAG,EAAG,EAAG,IAEjC,MAAM5lB,EAAIklB,GAAQ5f,EAAIugB,eACtB,OAAO7lB,GAAK,CACX+J,EAAG/J,EAAE,GACL+Y,EAAG/Y,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEyF,OAAezF,EAAE,GAAK,KAG7B,SAAS8lB,GAAOhN,EAAGtT,EAAGugB,GACrB,GAAIjN,EAAG,CACN,IAAIkN,EAAMlM,GAAQhB,GAClBkN,EAAIxgB,GAAK0F,KAAKiJ,IAAI,EAAGjJ,KAAKgJ,IAAI8R,EAAIxgB,GAAKwgB,EAAIxgB,GAAKugB,EAAa,IAANvgB,EAAU,IAAM,IACvEwgB,EAAMhM,GAAQgM,GACdlN,EAAE/O,EAAIic,EAAI,GACVlN,EAAEC,EAAIiN,EAAI,GACVlN,EAAE7Y,EAAI+lB,EAAI,IAGZ,SAASC,GAAMnN,EAAGoN,GACjB,OAAOpN,EAAItZ,OAAO2mB,OAAOD,GAAS,GAAIpN,GAAKA,EAE5C,SAASsN,GAAWC,GACnB,IAAIvN,EAAI,CAAC/O,EAAG,EAAGgP,EAAG,EAAG9Y,EAAG,EAAGD,EAAG,KAY9B,OAXI4N,MAAM0B,QAAQ+W,GACbA,EAAM5gB,QAAU,IACnBqT,EAAI,CAAC/O,EAAGsc,EAAM,GAAItN,EAAGsN,EAAM,GAAIpmB,EAAGomB,EAAM,GAAIrmB,EAAG,KAC3CqmB,EAAM5gB,OAAS,IAClBqT,EAAE9Y,EAAIoZ,GAAIiN,EAAM,OAIlBvN,EAAImN,GAAMI,EAAO,CAACtc,EAAG,EAAGgP,EAAG,EAAG9Y,EAAG,EAAGD,EAAG,KACrCA,EAAIoZ,GAAIN,EAAE9Y,GAEN8Y,EAER,SAASwN,GAAchhB,GACtB,MAAsB,MAAlBA,EAAI4M,OAAO,GA5XhB,SAAkB5M,GACjB,MAAM+G,EAAIkN,GAAOY,KAAK7U,GACtB,IACIyE,EAAGgP,EAAG9Y,EADND,EAAI,IAER,GAAKqM,EAAL,CAGA,GAAIA,EAAE,KAAOtC,EAAG,CACf,MAAM+O,GAAKzM,EAAE,GACbrM,EAAI,KAAOqM,EAAE,GAAK8M,GAAIL,GAAS,IAAJA,GAQ5B,OANA/O,GAAKsC,EAAE,GACP0M,GAAK1M,EAAE,GACPpM,GAAKoM,EAAE,GACPtC,EAAI,KAAOsC,EAAE,GAAK8M,GAAIpP,GAAKA,GAC3BgP,EAAI,KAAO1M,EAAE,GAAK8M,GAAIJ,GAAKA,GAC3B9Y,EAAI,KAAOoM,EAAE,GAAK8M,GAAIlZ,GAAKA,GACpB,CACN8J,EAAGA,EACHgP,EAAGA,EACH9Y,EAAGA,EACHD,EAAGA,IAwWIumB,CAASjhB,GAEV4U,GAAS5U,GAEjB,MAAMkhB,GACL3a,YAAYwa,GACX,GAAIA,aAAiBG,GACpB,OAAOH,EAER,MAAM3e,SAAc2e,EACpB,IAAIvN,EApbN,IAAkBxT,EAEbkI,EADA+C,EAobU,WAAT7I,EACHoR,EAAIsN,GAAWC,GACI,WAAT3e,IAtbR6I,GADajL,EAwbF+gB,GAvbD5gB,OAEC,MAAXH,EAAI,KACK,IAARiL,GAAqB,IAARA,EAChB/C,EAAM,CACLzD,EAAG,IAAoB,GAAdwC,GAAIjH,EAAI,IACjByT,EAAG,IAAoB,GAAdxM,GAAIjH,EAAI,IACjBrF,EAAG,IAAoB,GAAdsM,GAAIjH,EAAI,IACjBtF,EAAW,IAARuQ,EAA0B,GAAdhE,GAAIjH,EAAI,IAAW,KAEjB,IAARiL,GAAqB,IAARA,IACvB/C,EAAM,CACLzD,EAAGwC,GAAIjH,EAAI,KAAO,EAAIiH,GAAIjH,EAAI,IAC9ByT,EAAGxM,GAAIjH,EAAI,KAAO,EAAIiH,GAAIjH,EAAI,IAC9BrF,EAAGsM,GAAIjH,EAAI,KAAO,EAAIiH,GAAIjH,EAAI,IAC9BtF,EAAW,IAARuQ,EAAahE,GAAIjH,EAAI,KAAO,EAAIiH,GAAIjH,EAAI,IAAO,OAwanDwT,EApaKtL,GAoakB2X,GAAUkB,IAAUC,GAAcD,IAE1D5iB,KAAKgjB,KAAO3N,EACZrV,KAAKijB,SAAW5N,EAEjB6N,YACC,OAAOljB,KAAKijB,OAEb7M,UACC,IAAIf,EAAImN,GAAMxiB,KAAKgjB,MAInB,OAHI3N,IACHA,EAAE9Y,EAAIqZ,GAAIP,EAAE9Y,IAEN8Y,EAERe,QAAQvL,GACP7K,KAAKgjB,KAAOL,GAAW9X,GAExBzC,YACC,OAAOpI,KAAKijB,QAtYK5N,EAsYcrV,KAAKgjB,QApYpC3N,EAAE9Y,EAAI,IACH,QAAQ8Y,EAAE/O,MAAM+O,EAAEC,MAAMD,EAAE7Y,MAAMoZ,GAAIP,EAAE9Y,MACtC,OAAO8Y,EAAE/O,MAAM+O,EAAEC,MAAMD,EAAE7Y,MAkYgBwD,KAAKgjB,KAtYnD,IAAmB3N,EAwYlBjN,YACC,OAAOpI,KAAKijB,OAAS7N,GAAUpV,KAAKgjB,MAAQhjB,KAAKgjB,KAElD5a,YACC,OAAOpI,KAAKijB,OAlSd,SAAmB5N,GAClB,IAAKA,EACJ,OAED,MAAM9Y,EAAI8Z,GAAQhB,GACZI,EAAIlZ,EAAE,GACNkV,EAAIoE,GAAItZ,EAAE,IACVgO,EAAIsL,GAAItZ,EAAE,IAChB,OAAO8Y,EAAE9Y,EAAI,IACV,QAAQkZ,MAAMhE,OAAOlH,OAAOqL,GAAIP,EAAE9Y,MAClC,OAAOkZ,MAAMhE,OAAOlH,MAwRD4Y,CAAUnjB,KAAKgjB,MAAQhjB,KAAKgjB,KAElD5a,IAAIgb,EAAOC,GACV,MAAMC,EAAKtjB,KACX,GAAIojB,EAAO,CACV,MAAMG,EAAKD,EAAGlN,IACRoN,EAAKJ,EAAMhN,IACjB,IAAIqN,EACJ,MAAM/hB,EAAI2hB,IAAWI,EAAK,GAAMJ,EAC1BlN,EAAI,EAAIzU,EAAI,EACZnF,EAAIgnB,EAAGhnB,EAAIinB,EAAGjnB,EACdmnB,IAAOvN,EAAI5Z,IAAO,EAAI4Z,GAAKA,EAAI5Z,IAAM,EAAI4Z,EAAI5Z,IAAM,GAAK,EAC9DknB,EAAK,EAAIC,EACTH,EAAGjd,EAAI,IAAOod,EAAKH,EAAGjd,EAAImd,EAAKD,EAAGld,EAAI,GACtCid,EAAGjO,EAAI,IAAOoO,EAAKH,EAAGjO,EAAImO,EAAKD,EAAGlO,EAAI,GACtCiO,EAAG/mB,EAAI,IAAOknB,EAAKH,EAAG/mB,EAAIinB,EAAKD,EAAGhnB,EAAI,GACtC+mB,EAAGhnB,EAAImF,EAAI6hB,EAAGhnB,GAAK,EAAImF,GAAK8hB,EAAGjnB,EAC/B+mB,EAAGlN,IAAMmN,EAEV,OAAOD,EAERlb,QACC,OAAO,IAAI2a,GAAM/iB,KAAKoW,KAEvBhO,MAAM7L,GAEL,OADAyD,KAAKgjB,KAAKzmB,EAAIoZ,GAAIpZ,GACXyD,KAERoI,QAAQka,GAGP,OAFYtiB,KAAKgjB,KACbzmB,GAAK,EAAI+lB,EACNtiB,KAERoI,YACC,MAAMgO,EAAMpW,KAAKgjB,KACXW,EAAMhU,GAAc,GAARyG,EAAI9P,EAAkB,IAAR8P,EAAId,EAAmB,IAARc,EAAI5Z,GAEnD,OADA4Z,EAAI9P,EAAI8P,EAAId,EAAIc,EAAI5Z,EAAImnB,EACjB3jB,KAERoI,QAAQka,GAGP,OAFYtiB,KAAKgjB,KACbzmB,GAAK,EAAI+lB,EACNtiB,KAERoI,SACC,MAAMiN,EAAIrV,KAAKgjB,KAIf,OAHA3N,EAAE/O,EAAI,IAAM+O,EAAE/O,EACd+O,EAAEC,EAAI,IAAMD,EAAEC,EACdD,EAAE7Y,EAAI,IAAM6Y,EAAE7Y,EACPwD,KAERoI,QAAQka,GAEP,OADAD,GAAOriB,KAAKgjB,KAAM,EAAGV,GACdtiB,KAERoI,OAAOka,GAEN,OADAD,GAAOriB,KAAKgjB,KAAM,GAAIV,GACftiB,KAERoI,SAASka,GAER,OADAD,GAAOriB,KAAKgjB,KAAM,EAAGV,GACdtiB,KAERoI,WAAWka,GAEV,OADAD,GAAOriB,KAAKgjB,KAAM,GAAIV,GACftiB,KAERoI,OAAOwb,GAEN,OA/WF,SAAgBvO,EAAGuO,GAClB,IAAInO,EAAIY,GAAQhB,GAChBI,EAAE,GAAKe,GAAIf,EAAE,GAAKmO,GAClBnO,EAAIc,GAAQd,GACZJ,EAAE/O,EAAImP,EAAE,GACRJ,EAAEC,EAAIG,EAAE,GACRJ,EAAE7Y,EAAIiZ,EAAE,GAwWPoO,CAAO7jB,KAAKgjB,KAAMY,GACX5jB,MAGT,SAAS8jB,GAAUlB,GAClB,OAAO,IAAIG,GAAMH,GAGlB,MAAMmB,GAAuB5jB,GAAUA,aAAiB6jB,gBAAkB7jB,aAAiB8jB,cAC3F,SAASb,GAAMjjB,GACb,OAAO4jB,GAAoB5jB,GAASA,EAAQ2jB,GAAU3jB,GAExD,SAAS+jB,GAAc/jB,GACrB,OAAO4jB,GAAoB5jB,GACvBA,EACA2jB,GAAU3jB,GAAOgkB,SAAS,IAAKC,OAAO,IAAKhP,YAGjD,MAAMiP,GAAYtoB,OAAOC,OAAO,MAC1BsoB,GAAcvoB,OAAOC,OAAO,MAClC,SAASuoB,GAAW5mB,EAAM+C,GACxB,IAAKA,EACH,OAAO/C,EAET,MAAMoN,EAAOrK,EAAIoC,MAAM,KACvB,IAAK,IAAIf,EAAI,EAAGmO,EAAInF,EAAK/I,OAAQD,EAAImO,IAAKnO,EAAG,CAC3C,MAAM0L,EAAI1C,EAAKhJ,GACfpE,EAAOA,EAAK8P,KAAO9P,EAAK8P,GAAK1R,OAAOC,OAAO,OAE7C,OAAO2B,EAET,SAAS6mB,GAAIzmB,EAAM0mB,EAAOC,GACxB,MAAqB,iBAAVD,EACF3W,GAAMyW,GAAWxmB,EAAM0mB,GAAQC,GAEjC5W,GAAMyW,GAAWxmB,EAAM,IAAK0mB,GAmFrC,IAAIE,GAAW,IAjFf,MACEvc,YAAYwc,GACV5kB,KAAK2C,eAAYkiB,EACjB7kB,KAAK8kB,gBAAkB,kBACvB9kB,KAAK+kB,YAAc,kBACnB/kB,KAAKojB,MAAQ,OACbpjB,KAAKglB,SAAW,GAChBhlB,KAAKilB,iBAAoBtb,GAAYA,EAAQub,MAAMC,SAASC,sBAC5DplB,KAAKqlB,SAAW,GAChBrlB,KAAKslB,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFtlB,KAAKulB,KAAO,CACVC,OAAQ,qDACRhoB,KAAM,GACNc,MAAO,SACPmnB,WAAY,IACZpC,OAAQ,MAEVrjB,KAAK0lB,MAAQ,GACb1lB,KAAK2lB,qBAAuB,CAACrgB,EAAK5F,IAAYwkB,GAAcxkB,EAAQolB,iBACpE9kB,KAAK4lB,iBAAmB,CAACtgB,EAAK5F,IAAYwkB,GAAcxkB,EAAQqlB,aAChE/kB,KAAK6lB,WAAa,CAACvgB,EAAK5F,IAAYwkB,GAAcxkB,EAAQ0jB,OAC1DpjB,KAAK8lB,UAAY,IACjB9lB,KAAK+lB,YAAc,CACjBC,KAAM,UACNC,WAAW,GAEbjmB,KAAKkmB,qBAAsB,EAC3BlmB,KAAKmmB,QAAU,KACfnmB,KAAKomB,QAAU,KACfpmB,KAAKqmB,SAAU,EACfrmB,KAAKsmB,QAAU,GACftmB,KAAKumB,YAAa,EAClBvmB,KAAKwmB,WAAQ3B,EACb7kB,KAAKymB,OAAS,GACdzmB,KAAK0mB,UAAW,EAChB1mB,KAAK2mB,SAAS/B,GAEhBxc,IAAIqc,EAAOC,GACT,OAAOF,GAAIxkB,KAAMykB,EAAOC,GAE1Btc,IAAIqc,GACF,OAAOF,GAAWvkB,KAAMykB,GAE1Brc,SAASqc,EAAOC,GACd,OAAOF,GAAIF,GAAaG,EAAOC,GAEjCtc,SAASqc,EAAOC,GACd,OAAOF,GAAIH,GAAWI,EAAOC,GAE/Btc,MAAMqc,EAAO1lB,EAAM6nB,EAAaC,GAC9B,MAAMC,EAAcvC,GAAWvkB,KAAMykB,GAC/BsC,EAAoBxC,GAAWvkB,KAAM4mB,GACrCI,EAAc,IAAMjoB,EAC1BhD,OAAOkrB,iBAAiBH,EAAa,CACnC1e,CAAC4e,GAAc,CACb7mB,MAAO2mB,EAAY/nB,GACnBmoB,UAAU,GAEZ9e,CAACrJ,GAAO,CACNooB,YAAY,EACZ/e,MACE,MAAM1B,EAAQ1G,KAAKgnB,GACbtpB,EAASqpB,EAAkBF,GACjC,OAAI7a,GAAStF,GACJ3K,OAAO2mB,OAAO,GAAIhlB,EAAQgJ,GAE5B4F,GAAe5F,EAAOhJ,IAE/B0K,IAAIjI,GACFH,KAAKgnB,GAAe7mB,QAMF,CAC1BinB,YAAcroB,IAAUA,EAAKsoB,WAAW,MACxCC,WAAavoB,GAAkB,WAATA,EACtB2mB,MAAO,CACL6B,UAAW,eAEbxB,YAAa,CACXqB,aAAa,EACbE,YAAY,KAahB,SAASE,GAAaliB,EAAKlG,EAAMqoB,EAAIC,EAASC,GAC5C,IAAIC,EAAYxoB,EAAKuoB,GAQrB,OAPKC,IACHA,EAAYxoB,EAAKuoB,GAAUriB,EAAIuiB,YAAYF,GAAQG,MACnDL,EAAG3jB,KAAK6jB,IAENC,EAAYF,IACdA,EAAUE,GAELF,EAET,SAASK,GAAaziB,EAAKigB,EAAMyC,EAAeC,GAE9C,IAAI7oB,GADJ6oB,EAAQA,GAAS,IACA7oB,KAAO6oB,EAAM7oB,MAAQ,GAClCqoB,EAAKQ,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAM1C,OAASA,IACjBnmB,EAAO6oB,EAAM7oB,KAAO,GACpBqoB,EAAKQ,EAAMC,eAAiB,GAC5BD,EAAM1C,KAAOA,GAEfjgB,EAAI6iB,OACJ7iB,EAAIigB,KAAOA,EACX,IAAImC,EAAU,EACd,MAAMxa,EAAO8a,EAAchmB,OAC3B,IAAID,EAAG8f,EAAGuG,EAAM/rB,EAAOgsB,EACvB,IAAKtmB,EAAI,EAAGA,EAAImL,EAAMnL,IAEpB,GADA1F,EAAQ2rB,EAAcjmB,GAClB1F,MAAAA,IAA4D,IAAnBwP,GAAQxP,GACnDqrB,EAAUF,GAAaliB,EAAKlG,EAAMqoB,EAAIC,EAASrrB,QAC1C,GAAIwP,GAAQxP,GACjB,IAAKwlB,EAAI,EAAGuG,EAAO/rB,EAAM2F,OAAQ6f,EAAIuG,EAAMvG,IACzCwG,EAAchsB,EAAMwlB,GAChBwG,MAAAA,GAAsDxc,GAAQwc,KAChEX,EAAUF,GAAaliB,EAAKlG,EAAMqoB,EAAIC,EAASW,IAKvD/iB,EAAIgjB,UACJ,MAAMC,EAAQd,EAAGzlB,OAAS,EAC1B,GAAIumB,EAAQP,EAAchmB,OAAQ,CAChC,IAAKD,EAAI,EAAGA,EAAIwmB,EAAOxmB,WACd3C,EAAKqoB,EAAG1lB,IAEjB0lB,EAAG9c,OAAO,EAAG4d,GAEf,OAAOb,EAET,SAASc,GAAYtD,EAAOuD,EAAOX,GACjC,MAAM7C,EAAmBC,EAAMwD,wBACzBC,EAAsB,IAAVb,EAAcrgB,KAAKiJ,IAAIoX,EAAQ,EAAG,IAAO,EAC3D,OAAOrgB,KAAKkI,OAAO8Y,EAAQE,GAAa1D,GAAoBA,EAAmB0D,EAEjF,SAASC,GAAYC,EAAQvjB,IAC3BA,EAAMA,GAAOujB,EAAOC,WAAW,OAC3BX,OACJ7iB,EAAIyjB,iBACJzjB,EAAI0jB,UAAU,EAAG,EAAGH,EAAOf,MAAOe,EAAOI,QACzC3jB,EAAIgjB,UAEN,SAASY,GAAU5jB,EAAK5F,EAAS/D,EAAGyU,GAClC,IAAInM,EAAMklB,EAASC,EAAS5rB,EAAM6rB,EAClC,MAAM/qB,EAAQoB,EAAQ4pB,WAChBC,EAAW7pB,EAAQ6pB,SACnBC,EAAS9pB,EAAQ8pB,OACvB,IAAIC,GAAOF,GAAY,GAAKra,GAC5B,GAAI5Q,GAA0B,iBAAVA,IAClB2F,EAAO3F,EAAMwN,WACA,8BAAT7H,GAAiD,+BAATA,GAM1C,OALAqB,EAAI6iB,OACJ7iB,EAAIokB,UAAU/tB,EAAGyU,GACjB9K,EAAIue,OAAO4F,GACXnkB,EAAIqkB,UAAUrrB,GAAQA,EAAMwpB,MAAQ,GAAIxpB,EAAM2qB,OAAS,EAAG3qB,EAAMwpB,MAAOxpB,EAAM2qB,aAC7E3jB,EAAIgjB,UAIR,KAAInY,MAAMqZ,IAAWA,GAAU,GAA/B,CAIA,OADAlkB,EAAIskB,YACItrB,GACR,QACEgH,EAAIukB,IAAIluB,EAAGyU,EAAGoZ,EAAQ,EAAG1a,IACzBxJ,EAAIwkB,YACJ,MACF,IAAK,WACHxkB,EAAIykB,OAAOpuB,EAAI8L,KAAKwK,IAAIwX,GAAOD,EAAQpZ,EAAI3I,KAAKyL,IAAIuW,GAAOD,GAC3DC,GAAOpa,GACP/J,EAAI0kB,OAAOruB,EAAI8L,KAAKwK,IAAIwX,GAAOD,EAAQpZ,EAAI3I,KAAKyL,IAAIuW,GAAOD,GAC3DC,GAAOpa,GACP/J,EAAI0kB,OAAOruB,EAAI8L,KAAKwK,IAAIwX,GAAOD,EAAQpZ,EAAI3I,KAAKyL,IAAIuW,GAAOD,GAC3DlkB,EAAIwkB,YACJ,MACF,IAAK,cACHT,EAAwB,KAATG,EACfhsB,EAAOgsB,EAASH,EAChBF,EAAU1hB,KAAKyL,IAAIuW,EAAMra,IAAc5R,EACvC4rB,EAAU3hB,KAAKwK,IAAIwX,EAAMra,IAAc5R,EACvC8H,EAAIukB,IAAIluB,EAAIwtB,EAAS/Y,EAAIgZ,EAASC,EAAcI,EAAM5a,GAAI4a,EAAMta,IAChE7J,EAAIukB,IAAIluB,EAAIytB,EAAShZ,EAAI+Y,EAASE,EAAcI,EAAMta,GAASsa,GAC/DnkB,EAAIukB,IAAIluB,EAAIwtB,EAAS/Y,EAAIgZ,EAASC,EAAcI,EAAKA,EAAMta,IAC3D7J,EAAIukB,IAAIluB,EAAIytB,EAAShZ,EAAI+Y,EAASE,EAAcI,EAAMta,GAASsa,EAAM5a,IACrEvJ,EAAIwkB,YACJ,MACF,IAAK,OACH,IAAKP,EAAU,CACb/rB,EAAOiK,KAAKwiB,QAAUT,EACtBlkB,EAAI4kB,KAAKvuB,EAAI6B,EAAM4S,EAAI5S,EAAM,EAAIA,EAAM,EAAIA,GAC3C,MAEFisB,GAAOra,GACT,IAAK,UACH+Z,EAAU1hB,KAAKyL,IAAIuW,GAAOD,EAC1BJ,EAAU3hB,KAAKwK,IAAIwX,GAAOD,EAC1BlkB,EAAIykB,OAAOpuB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIytB,EAAShZ,EAAI+Y,GAC5B7jB,EAAI0kB,OAAOruB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIytB,EAAShZ,EAAI+Y,GAC5B7jB,EAAIwkB,YACJ,MACF,IAAK,WACHL,GAAOra,GACT,IAAK,QACH+Z,EAAU1hB,KAAKyL,IAAIuW,GAAOD,EAC1BJ,EAAU3hB,KAAKwK,IAAIwX,GAAOD,EAC1BlkB,EAAIykB,OAAOpuB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAIykB,OAAOpuB,EAAIytB,EAAShZ,EAAI+Y,GAC5B7jB,EAAI0kB,OAAOruB,EAAIytB,EAAShZ,EAAI+Y,GAC5B,MACF,IAAK,OACHA,EAAU1hB,KAAKyL,IAAIuW,GAAOD,EAC1BJ,EAAU3hB,KAAKwK,IAAIwX,GAAOD,EAC1BlkB,EAAIykB,OAAOpuB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAIykB,OAAOpuB,EAAIytB,EAAShZ,EAAI+Y,GAC5B7jB,EAAI0kB,OAAOruB,EAAIytB,EAAShZ,EAAI+Y,GAC5BM,GAAOra,GACP+Z,EAAU1hB,KAAKyL,IAAIuW,GAAOD,EAC1BJ,EAAU3hB,KAAKwK,IAAIwX,GAAOD,EAC1BlkB,EAAIykB,OAAOpuB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAIykB,OAAOpuB,EAAIytB,EAAShZ,EAAI+Y,GAC5B7jB,EAAI0kB,OAAOruB,EAAIytB,EAAShZ,EAAI+Y,GAC5B,MACF,IAAK,OACHA,EAAU1hB,KAAKyL,IAAIuW,GAAOD,EAC1BJ,EAAU3hB,KAAKwK,IAAIwX,GAAOD,EAC1BlkB,EAAIykB,OAAOpuB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B9jB,EAAI0kB,OAAOruB,EAAIwtB,EAAS/Y,EAAIgZ,GAC5B,MACF,IAAK,OACH9jB,EAAIykB,OAAOpuB,EAAGyU,GACd9K,EAAI0kB,OAAOruB,EAAI8L,KAAKyL,IAAIuW,GAAOD,EAAQpZ,EAAI3I,KAAKwK,IAAIwX,GAAOD,GAG7DlkB,EAAI4D,OACAxJ,EAAQyqB,YAAc,GACxB7kB,EAAI8kB,UAGR,SAASC,GAAeC,EAAOC,EAAMC,GAEnC,OADAA,EAASA,GAAU,IACXD,GAASD,GAASA,EAAM3uB,EAAI4uB,EAAKE,KAAOD,GAAUF,EAAM3uB,EAAI4uB,EAAKG,MAAQF,GACjFF,EAAMla,EAAIma,EAAKI,IAAMH,GAAUF,EAAMla,EAAIma,EAAKK,OAASJ,EAEzD,SAASK,GAASvlB,EAAKilB,GACrBjlB,EAAI6iB,OACJ7iB,EAAIskB,YACJtkB,EAAI4kB,KAAKK,EAAKE,KAAMF,EAAKI,IAAKJ,EAAKG,MAAQH,EAAKE,KAAMF,EAAKK,OAASL,EAAKI,KACzErlB,EAAIwlB,OAEN,SAASC,GAAWzlB,GAClBA,EAAIgjB,UAEN,SAAS0C,GAAe1lB,EAAKzC,EAAUnF,EAAQutB,EAAMjF,GACnD,IAAKnjB,EACH,OAAOyC,EAAI0kB,OAAOtsB,EAAO/B,EAAG+B,EAAO0S,GAErC,GAAa,WAAT4V,EAAmB,CACrB,MAAMkF,GAAYroB,EAASlH,EAAI+B,EAAO/B,GAAK,EAC3C2J,EAAI0kB,OAAOkB,EAAUroB,EAASuN,GAC9B9K,EAAI0kB,OAAOkB,EAAUxtB,EAAO0S,OACV,UAAT4V,KAAuBiF,EAChC3lB,EAAI0kB,OAAOnnB,EAASlH,EAAG+B,EAAO0S,GAE9B9K,EAAI0kB,OAAOtsB,EAAO/B,EAAGkH,EAASuN,GAEhC9K,EAAI0kB,OAAOtsB,EAAO/B,EAAG+B,EAAO0S,GAE9B,SAAS+a,GAAe7lB,EAAKzC,EAAUnF,EAAQutB,GAC7C,IAAKpoB,EACH,OAAOyC,EAAI0kB,OAAOtsB,EAAO/B,EAAG+B,EAAO0S,GAErC9K,EAAI8lB,cACFH,EAAOpoB,EAASwoB,KAAOxoB,EAASyoB,KAChCL,EAAOpoB,EAAS0oB,KAAO1oB,EAAS2oB,KAChCP,EAAOvtB,EAAO4tB,KAAO5tB,EAAO2tB,KAC5BJ,EAAOvtB,EAAO8tB,KAAO9tB,EAAO6tB,KAC5B7tB,EAAO/B,EACP+B,EAAO0S,GAEX,SAASqb,GAAWnmB,EAAKnG,EAAMxD,EAAGyU,EAAGmV,EAAMmG,EAAO,IAChD,MAAMC,EAAQ9f,GAAQ1M,GAAQA,EAAO,CAACA,GAChCirB,EAASsB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAI9pB,EAAG+pB,EAIP,IAHAxmB,EAAI6iB,OACJ7iB,EAAIigB,KAAOA,EAAKoC,OAmBlB,SAAuBriB,EAAKomB,GACtBA,EAAKK,aACPzmB,EAAIokB,UAAUgC,EAAKK,YAAY,GAAIL,EAAKK,YAAY,IAEjDngB,GAAc8f,EAAKnC,WACtBjkB,EAAIue,OAAO6H,EAAKnC,UAEdmC,EAAKtI,QACP9d,EAAI0mB,UAAYN,EAAKtI,OAEnBsI,EAAKO,YACP3mB,EAAI2mB,UAAYP,EAAKO,WAEnBP,EAAKQ,eACP5mB,EAAI4mB,aAAeR,EAAKQ,cAhC1BC,CAAc7mB,EAAKomB,GACd3pB,EAAI,EAAGA,EAAI4pB,EAAM3pB,SAAUD,EAC9B+pB,EAAOH,EAAM5pB,GACTqoB,IACEsB,EAAKG,cACPvmB,EAAI8mB,YAAcV,EAAKG,aAEpBjgB,GAAc8f,EAAKE,eACtBtmB,EAAI+mB,UAAYX,EAAKE,aAEvBtmB,EAAIgnB,WAAWR,EAAMnwB,EAAGyU,EAAGsb,EAAKa,WAElCjnB,EAAIknB,SAASV,EAAMnwB,EAAGyU,EAAGsb,EAAKa,UAC9BE,GAAannB,EAAK3J,EAAGyU,EAAG0b,EAAMJ,GAC9Btb,GAAKmV,EAAKE,WAEZngB,EAAIgjB,UAmBN,SAASmE,GAAannB,EAAK3J,EAAGyU,EAAG0b,EAAMJ,GACrC,GAAIA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CACxC,MAAMC,EAAUtnB,EAAIuiB,YAAYiE,GAC1BrB,EAAO9uB,EAAIixB,EAAQC,sBACnBnC,EAAQ/uB,EAAIixB,EAAQE,uBACpBnC,EAAMva,EAAIwc,EAAQG,wBAClBnC,EAASxa,EAAIwc,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiB/B,EAAMC,GAAU,EAAIA,EAC9DtlB,EAAI8mB,YAAc9mB,EAAI0mB,UACtB1mB,EAAIskB,YACJtkB,EAAI+mB,UAAYX,EAAKwB,iBAAmB,EACxC5nB,EAAIykB,OAAOU,EAAMwC,GACjB3nB,EAAI0kB,OAAOU,EAAOuC,GAClB3nB,EAAI8kB,UAGR,SAAS+C,GAAmB7nB,EAAK4kB,GAC/B,MAAMvuB,EAACA,EAACyU,EAAEA,EAAC+F,EAAEA,EAACV,EAAEA,EAAC+T,OAAEA,GAAUU,EAC7B5kB,EAAIukB,IAAIluB,EAAI6tB,EAAO4D,QAAShd,EAAIoZ,EAAO4D,QAAS5D,EAAO4D,SAAUje,GAASN,IAAI,GAC9EvJ,EAAI0kB,OAAOruB,EAAGyU,EAAIqF,EAAI+T,EAAO6D,YAC7B/nB,EAAIukB,IAAIluB,EAAI6tB,EAAO6D,WAAYjd,EAAIqF,EAAI+T,EAAO6D,WAAY7D,EAAO6D,WAAYxe,GAAIM,IAAS,GAC1F7J,EAAI0kB,OAAOruB,EAAIwa,EAAIqT,EAAO8D,YAAald,EAAIqF,GAC3CnQ,EAAIukB,IAAIluB,EAAIwa,EAAIqT,EAAO8D,YAAald,EAAIqF,EAAI+T,EAAO8D,YAAa9D,EAAO8D,YAAane,GAAS,GAAG,GAChG7J,EAAI0kB,OAAOruB,EAAIwa,EAAG/F,EAAIoZ,EAAO+D,UAC7BjoB,EAAIukB,IAAIluB,EAAIwa,EAAIqT,EAAO+D,SAAUnd,EAAIoZ,EAAO+D,SAAU/D,EAAO+D,SAAU,GAAIpe,IAAS,GACpF7J,EAAI0kB,OAAOruB,EAAI6tB,EAAO4D,QAAShd,GAGjC,MAAMod,GAAc,IAAIC,OAAO,wCACzBC,GAAa,IAAID,OAAO,yEAC9B,SAASE,GAAaxtB,EAAO3C,GAC3B,MAAMowB,GAAW,GAAKztB,GAAO0tB,MAAML,IACnC,IAAKI,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPpwB,EAGT,OADA2C,GAASytB,EAAQ,GACTA,EAAQ,IAChB,IAAK,KACH,OAAOztB,EACT,IAAK,IACHA,GAAS,IAGX,OAAO3C,EAAO2C,EAGhB,SAAS2tB,GAAkB3tB,EAAOmJ,GAChC,MAAMS,EAAM,GACNgkB,EAAW/hB,GAAS1C,GACpByB,EAAOgjB,EAAWhyB,OAAOgP,KAAKzB,GAASA,EACvC0kB,EAAOhiB,GAAS7L,GAClB4tB,EACEE,GAAQ3hB,GAAenM,EAAM8tB,GAAO9tB,EAAMmJ,EAAM2kB,KAChDA,GAAQ9tB,EAAM8tB,GAChB,IAAM9tB,EACV,IAAK,MAAM8tB,KAAQljB,EACjBhB,EAAIkkB,IAAqBD,EAAKC,IAXF,EAa9B,OAAOlkB,EAET,SAASmkB,GAAO/tB,GACd,OAAO2tB,GAAkB3tB,EAAO,CAACwqB,IAAK,IAAKD,MAAO,IAAKE,OAAQ,IAAKH,KAAM,MAE5E,SAAS0D,GAAchuB,GACrB,OAAO2tB,GAAkB3tB,EAAO,CAAC,UAAW,WAAY,aAAc,gBAExE,SAASiuB,GAAUjuB,GACjB,MAAM0K,EAAMqjB,GAAO/tB,GAGnB,OAFA0K,EAAIid,MAAQjd,EAAI4f,KAAO5f,EAAI6f,MAC3B7f,EAAIoe,OAASpe,EAAI8f,IAAM9f,EAAI+f,OACpB/f,EAET,SAASwjB,GAAO3uB,EAAS4uB,GACvB5uB,EAAUA,GAAW,GACrB4uB,EAAWA,GAAY3J,GAASY,KAChC,IAAI/nB,EAAO8O,GAAe5M,EAAQlC,KAAM8wB,EAAS9wB,MAC7B,iBAATA,IACTA,EAAOykB,SAASzkB,EAAM,KAExB,IAAIc,EAAQgO,GAAe5M,EAAQpB,MAAOgwB,EAAShwB,OAC/CA,KAAW,GAAKA,GAAOuvB,MAAMH,MAC/Ba,QAAQC,KAAK,kCAAoClwB,EAAQ,KACzDA,EAAQ,IAEV,MAAMinB,EAAO,CACXC,OAAQlZ,GAAe5M,EAAQ8lB,OAAQ8I,EAAS9I,QAChDC,WAAYkI,GAAarhB,GAAe5M,EAAQ+lB,WAAY6I,EAAS7I,YAAajoB,GAClFA,KAAAA,EACAc,MAAAA,EACA+kB,OAAQ/W,GAAe5M,EAAQ2jB,OAAQiL,EAASjL,QAChDsE,OAAQ,IAGV,OADApC,EAAKoC,OAzVP,SAAsBpC,GACpB,OAAKA,GAAQ3Z,GAAc2Z,EAAK/nB,OAASoO,GAAc2Z,EAAKC,QACnD,MAEDD,EAAKjnB,MAAQinB,EAAKjnB,MAAQ,IAAM,KACrCinB,EAAKlC,OAASkC,EAAKlC,OAAS,IAAM,IACnCkC,EAAK/nB,KAAO,MACZ+nB,EAAKC,OAkVOiJ,CAAalJ,GACpBA,EAET,SAAS9gB,GAAQiqB,EAAQ/kB,EAASe,EAAOikB,GACvC,IACI5sB,EAAGmL,EAAM/M,EADTyuB,GAAY,EAEhB,IAAK7sB,EAAI,EAAGmL,EAAOwhB,EAAO1sB,OAAQD,EAAImL,IAAQnL,EAE5C,GADA5B,EAAQuuB,EAAO3sB,QACD8iB,IAAV1kB,SAGY0kB,IAAZlb,GAA0C,mBAAVxJ,IAClCA,EAAQA,EAAMwJ,GACdilB,GAAY,QAEA/J,IAAVna,GAAuBmB,GAAQ1L,KACjCA,EAAQA,EAAMuK,EAAQvK,EAAM6B,QAC5B4sB,GAAY,QAEA/J,IAAV1kB,GAIF,OAHIwuB,IAASC,IACXD,EAAKC,WAAY,GAEZzuB,EAYb,SAAS0uB,GAAQC,EAAO3uB,EAAO4uB,GAC7BA,EAAMA,IAASrkB,GAAUokB,EAAMpkB,GAASvK,GACxC,IAEI6uB,EAFAC,EAAKH,EAAM9sB,OAAS,EACpBktB,EAAK,EAET,KAAOD,EAAKC,EAAK,GACfF,EAAOE,EAAKD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAGT,MAAO,CAACE,GAAAA,EAAID,GAAAA,GAEd,MAAME,GAAe,CAACL,EAAOpuB,EAAKP,IAChC0uB,GAAQC,EAAO3uB,GAAOuK,GAASokB,EAAMpkB,GAAOhK,GAAOP,IAC/CivB,GAAgB,CAACN,EAAOpuB,EAAKP,IACjC0uB,GAAQC,EAAO3uB,GAAOuK,GAASokB,EAAMpkB,GAAOhK,IAAQP,IActD,MAAMkvB,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA+BvD,SAASC,GAAoB/e,EAAOgf,GAClC,MAAMC,EAAOjf,EAAMkf,SACnB,IAAKD,EACH,OAEF,MAAME,EAAYF,EAAKE,UACjBhlB,EAAQglB,EAAUxsB,QAAQqsB,IACjB,IAAX7kB,GACFglB,EAAU/kB,OAAOD,EAAO,GAEtBglB,EAAU1tB,OAAS,IAGvBqtB,GAAYlzB,SAASuE,WACZ6P,EAAM7P,aAER6P,EAAMkf,UAEf,SAASE,GAAaC,GACpB,MAAMpL,EAAM,IAAItnB,IAChB,IAAI6E,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO0iB,EAAM5tB,OAAQD,EAAImL,IAAQnL,EAC3CyiB,EAAIriB,IAAIytB,EAAM7tB,IAEhB,OAAIyiB,EAAIhnB,OAAS0P,EACR0iB,EAEFzlB,MAAMC,KAAKoa,GAGpB,SAASqL,GAAgBC,EAAQC,EAAW,CAAC,IAAKC,EAAaF,EAAQxB,EAAU2B,EAAY,KAAMH,EAAO,KACnGnhB,GAAQ2f,KACXA,EAAW4B,GAAS,YAAaJ,IAEnC,MAAM7H,EAAQ,CACZ7f,CAAC+nB,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaP,EACbzI,UAAW+G,EACXkC,WAAYP,EACZQ,SAAWhM,GAAUoL,GAAgB,CAACpL,KAAUqL,GAASC,EAAUC,EAAY1B,IAEjF,OAAO,IAAIoC,MAAMzI,EAAO,CACtB0I,eAAc,CAACjzB,EAAQuwB,YACdvwB,EAAOuwB,UACPvwB,EAAOkzB,aACPd,EAAO,GAAG7B,IACV,GAET4C,IAAG,CAACnzB,EAAQuwB,IACH6C,GAAQpzB,EAAQuwB,GACrB,IA0LR,SAA8BA,EAAM8B,EAAUD,EAAQiB,GACpD,IAAI5wB,EACJ,IAAK,MAAM6wB,KAAUjB,EAEnB,GADA5vB,EAAQ+vB,GAASe,GAAQD,EAAQ/C,GAAO6B,GACpCnhB,GAAQxO,GACV,OAAO+wB,GAAiBjD,EAAM9tB,GAC1BgxB,GAAkBrB,EAAQiB,EAAO9C,EAAM9tB,GACvCA,EAjMIixB,CAAqBnD,EAAM8B,EAAUD,EAAQpyB,KAEvD2zB,yBAAwB,CAAC3zB,EAAQuwB,IACxBqD,QAAQD,yBAAyB3zB,EAAO4yB,QAAQ,GAAIrC,GAE7DsD,eAAc,IACLD,QAAQC,eAAezB,EAAO,IAEvC5qB,IAAG,CAACxH,EAAQuwB,IACHuD,GAAqB9zB,GAAQ+zB,SAASxD,GAE/CyD,QAAQh0B,GACC8zB,GAAqB9zB,GAE9B8mB,IAAG,CAAC9mB,EAAQuwB,EAAM9tB,MACAzC,EAAOi0B,WAAaj0B,EAAOi0B,SAAW1B,MAC9ChC,GAAQ9tB,SACTzC,EAAOuwB,UACPvwB,EAAOkzB,OACP,KAIb,SAASgB,GAAeb,EAAOpnB,EAASkoB,EAAUC,GAChD,MAAM7J,EAAQ,CACZoI,YAAY,EACZ0B,OAAQhB,EACRiB,SAAUroB,EACVsoB,UAAWJ,EACXK,OAAQ,IAAIh1B,IACZ0nB,aAAcA,GAAamM,EAAOe,GAClCK,WAAa7sB,GAAQssB,GAAeb,EAAOzrB,EAAKusB,EAAUC,GAC1DrB,SAAWhM,GAAUmN,GAAeb,EAAMN,SAAShM,GAAQ9a,EAASkoB,EAAUC,IAEhF,OAAO,IAAIpB,MAAMzI,EAAO,CACtB0I,eAAc,CAACjzB,EAAQuwB,YACdvwB,EAAOuwB,UACP8C,EAAM9C,IACN,GAET4C,IAAG,CAACnzB,EAAQuwB,EAAMmE,IACTtB,GAAQpzB,EAAQuwB,GACrB,IA8CR,SAA6BvwB,EAAQuwB,EAAMmE,GACzC,MAAML,OAACA,EAAMC,SAAEA,EAAQC,UAAEA,EAAWrN,aAAcN,GAAe5mB,EACjE,IAAIyC,EAAQ4xB,EAAO9D,GACfrf,GAAWzO,IAAUmkB,EAAY+N,aAAapE,KAChD9tB,EAUJ,SAA4B8tB,EAAM9tB,EAAOzC,EAAQ00B,GAC/C,MAAML,OAACA,EAAMC,SAAEA,EAAQC,UAAEA,EAASC,OAAEA,GAAUx0B,EAC9C,GAAIw0B,EAAOhtB,IAAI+oB,GACb,MAAM,IAAIvqB,MAAM,uBAAyByG,MAAMC,KAAK8nB,GAAQ9uB,KAAK,MAAQ,KAAO6qB,GAElFiE,EAAO/vB,IAAI8rB,GACX9tB,EAAQA,EAAM6xB,EAAUC,GAAaG,GACrCF,EAAO50B,OAAO2wB,GACVjiB,GAAS7L,KACXA,EAAQgxB,GAAkBY,EAAOzB,QAASyB,EAAQ9D,EAAM9tB,IAE1D,OAAOA,EArBGmyB,CAAmBrE,EAAM9tB,EAAOzC,EAAQ00B,IAE9CvmB,GAAQ1L,IAAUA,EAAM6B,SAC1B7B,EAoBJ,SAAuB8tB,EAAM9tB,EAAOzC,EAAQ60B,GAC1C,MAAMR,OAACA,EAAMC,SAAEA,EAAQC,UAAEA,EAAWrN,aAAcN,GAAe5mB,EACjE,GAAIiR,GAAQqjB,EAAStnB,QAAU6nB,EAAYtE,GACzC9tB,EAAQA,EAAM6xB,EAAStnB,MAAQvK,EAAM6B,aAChC,GAAIgK,GAAS7L,EAAM,IAAK,CAC7B,MAAMqyB,EAAMryB,EACN2vB,EAASiC,EAAOzB,QAAQttB,QAAOyO,GAAKA,IAAM+gB,IAChDryB,EAAQ,GACR,IAAK,MAAMsyB,KAAQD,EAAK,CACtB,MAAME,EAAWvB,GAAkBrB,EAAQiC,EAAQ9D,EAAMwE,GACzDtyB,EAAM2D,KAAK8tB,GAAec,EAAUV,EAAUC,GAAaA,EAAUhE,GAAO3J,KAGhF,OAAOnkB,EAjCGwyB,CAAc1E,EAAM9tB,EAAOzC,EAAQ4mB,EAAYiO,cAErDrB,GAAiBjD,EAAM9tB,KACzBA,EAAQyxB,GAAezxB,EAAO6xB,EAAUC,GAAaA,EAAUhE,GAAO3J,IAExE,OAAOnkB,EA1DKyyB,CAAoBl1B,EAAQuwB,EAAMmE,KAE5Cf,yBAAwB,CAAC3zB,EAAQuwB,IACxBvwB,EAAOknB,aAAaiO,QACvBvB,QAAQpsB,IAAI6rB,EAAO9C,GAAQ,CAAC9G,YAAY,EAAM2L,cAAc,QAAQjO,EACpEyM,QAAQD,yBAAyBN,EAAO9C,GAE9CsD,eAAc,IACLD,QAAQC,eAAeR,GAEhC7rB,IAAG,CAACxH,EAAQuwB,IACHqD,QAAQpsB,IAAI6rB,EAAO9C,GAE5ByD,QAAO,IACEJ,QAAQI,QAAQX,GAEzBvM,IAAG,CAAC9mB,EAAQuwB,EAAM9tB,KAChB4wB,EAAM9C,GAAQ9tB,SACPzC,EAAOuwB,IACP,KAIb,SAASrJ,GAAamM,EAAOpM,EAAW,CAACoO,YAAY,EAAMC,WAAW,IACpE,MAAM5L,YAACA,EAAczC,EAASoO,WAAUzL,WAAEA,EAAa3C,EAASqO,UAASC,SAAEA,EAAWtO,EAASkO,SAAW9B,EAC1G,MAAO,CACL8B,QAASI,EACTF,WAAY3L,EACZ4L,UAAW1L,EACX+K,aAAczjB,GAAWwY,GAAeA,EAAc,IAAMA,EAC5DmL,YAAa3jB,GAAW0Y,GAAcA,EAAa,IAAMA,GAG7D,MAAM2J,GAAU,CAACD,EAAQjyB,IAASiyB,EAASA,EAASxiB,GAAYzP,GAAQA,EAClEmyB,GAAmB,CAACjD,EAAM9tB,IAAU6L,GAAS7L,IAAmB,aAAT8tB,EAC7D,SAAS6C,GAAQpzB,EAAQuwB,EAAMxpB,GAC7B,IAAItE,EAAQzC,EAAOuwB,GACnB,OAAItf,GAAQxO,KAGZA,EAAQsE,IACJkK,GAAQxO,KACVzC,EAAOuwB,GAAQ9tB,IAJRA,EAkDX,SAAS+yB,GAAgB5E,EAAUL,EAAM9tB,GACvC,OAAOyO,GAAW0f,GAAYA,EAASL,EAAM9tB,GAASmuB,EAExD,MAAM6E,GAAW,CAACzyB,EAAK0yB,KAAmB,IAAR1yB,EAAe0yB,EAC9B,iBAAR1yB,EAAmB4N,GAAiB8kB,EAAQ1yB,QAAOmkB,EAC9D,SAASwO,GAAU7O,EAAK8O,EAAc5yB,EAAK6yB,GACzC,IAAK,MAAMH,KAAUE,EAAc,CACjC,MAAM7O,EAAQ0O,GAASzyB,EAAK0yB,GAC5B,GAAI3O,EAAO,CACTD,EAAIriB,IAAIsiB,GACR,MAAM6J,EAAW4E,GAAgBzO,EAAM8C,UAAW7mB,EAAK+jB,GACvD,GAAI9V,GAAQ2f,IAAaA,IAAa5tB,GAAO4tB,IAAaiF,EACxD,OAAOjF,OAEJ,IAAc,IAAV7J,GAAmB9V,GAAQ4kB,IAAmB7yB,IAAQ6yB,EAC/D,OAAO,KAGX,OAAO,EAET,SAASpC,GAAkBmC,EAAcZ,EAAUzE,EAAM9tB,GACvD,MAAM6vB,EAAa0C,EAASnC,YACtBjC,EAAW4E,GAAgBR,EAASnL,UAAW0G,EAAM9tB,GACrDqzB,EAAY,IAAIF,KAAiBtD,GACjCxL,EAAM,IAAItnB,IAChBsnB,EAAIriB,IAAIhC,GACR,IAAIO,EAAM+yB,GAAiBjP,EAAKgP,EAAWvF,EAAMK,GAAYL,GAC7D,OAAY,OAARvtB,MAGAiO,GAAQ2f,IAAaA,IAAaL,IACpCvtB,EAAM+yB,GAAiBjP,EAAKgP,EAAWlF,EAAU5tB,GACrC,OAARA,KAICmvB,GAAgB1lB,MAAMC,KAAKoa,GAAM,CAAC,IAAKwL,EAAY1B,GACxD,IAQJ,SAAsBoE,EAAUzE,EAAM9tB,GACpC,MAAMizB,EAASV,EAASlC,aAClBvC,KAAQmF,IACZA,EAAOnF,GAAQ,IAEjB,MAAMvwB,EAAS01B,EAAOnF,GACtB,GAAIpiB,GAAQnO,IAAWsO,GAAS7L,GAC9B,OAAOA,EAET,OAAOzC,EAjBCg2B,CAAahB,EAAUzE,EAAM9tB,MAEvC,SAASszB,GAAiBjP,EAAKgP,EAAW9yB,EAAK4tB,GAC7C,KAAO5tB,GACLA,EAAM2yB,GAAU7O,EAAKgP,EAAW9yB,EAAK4tB,GAEvC,OAAO5tB,EAwBT,SAASwvB,GAASxvB,EAAKovB,GACrB,IAAK,MAAMrL,KAASqL,EAAQ,CAC1B,IAAKrL,EACH,SAEF,MAAMtkB,EAAQskB,EAAM/jB,GACpB,GAAIiO,GAAQxO,GACV,OAAOA,GAIb,SAASqxB,GAAqB9zB,GAC5B,IAAIqN,EAAOrN,EAAOkzB,MAIlB,OAHK7lB,IACHA,EAAOrN,EAAOkzB,MAIlB,SAAkCd,GAChC,MAAMtL,EAAM,IAAItnB,IAChB,IAAK,MAAMunB,KAASqL,EAClB,IAAK,MAAMpvB,KAAO3E,OAAOgP,KAAK0Z,GAAOzhB,QAAOyK,IAAMA,EAAE4Z,WAAW,OAC7D7C,EAAIriB,IAAIzB,GAGZ,OAAOyJ,MAAMC,KAAKoa,GAXMmP,CAAyBj2B,EAAO4yB,UAEjDvlB,EAYT,MAAM6oB,GAAU1nB,OAAO0nB,SAAW,MAC5BC,GAAW,CAACC,EAAQ/xB,IAAMA,EAAI+xB,EAAO9xB,SAAW8xB,EAAO/xB,GAAGgyB,MAAQD,EAAO/xB,GACzEiyB,GAAgBlO,GAA4B,MAAdA,EAAoB,IAAM,IAC9D,SAASmO,GAAYC,EAAYC,EAAaC,EAAYzyB,GACxD,MAAMkB,EAAWqxB,EAAWH,KAAOI,EAAcD,EAC3CG,EAAUF,EACVpxB,EAAOqxB,EAAWL,KAAOI,EAAcC,EACvCE,EAAMtjB,GAAsBqjB,EAASxxB,GACrC0xB,EAAMvjB,GAAsBjO,EAAMsxB,GACxC,IAAIG,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GACvBC,EAAMrkB,MAAMqkB,GAAO,EAAIA,EACvBC,EAAMtkB,MAAMskB,GAAO,EAAIA,EACvB,MAAMC,EAAK/yB,EAAI6yB,EACTG,EAAKhzB,EAAI8yB,EACf,MAAO,CACL5xB,SAAU,CACRlH,EAAG04B,EAAQ14B,EAAI+4B,GAAM3xB,EAAKpH,EAAIkH,EAASlH,GACvCyU,EAAGikB,EAAQjkB,EAAIskB,GAAM3xB,EAAKqN,EAAIvN,EAASuN,IAEzCrN,KAAM,CACJpH,EAAG04B,EAAQ14B,EAAIg5B,GAAM5xB,EAAKpH,EAAIkH,EAASlH,GACvCyU,EAAGikB,EAAQjkB,EAAIukB,GAAM5xB,EAAKqN,EAAIvN,EAASuN,KAuD7C,SAASwkB,GAAoBd,EAAQhO,EAAY,KAC/C,MAAM+O,EAAYb,GAAalO,GACzBgP,EAAYhB,EAAO9xB,OACnB+yB,EAAS5qB,MAAM2qB,GAAW5rB,KAAK,GAC/B8rB,EAAK7qB,MAAM2qB,GACjB,IAAI/yB,EAAGkzB,EAAaC,EAChBC,EAAatB,GAASC,EAAQ,GAClC,IAAK/xB,EAAI,EAAGA,EAAI+yB,IAAa/yB,EAI3B,GAHAkzB,EAAcC,EACdA,EAAeC,EACfA,EAAatB,GAASC,EAAQ/xB,EAAI,GAC7BmzB,EAAL,CAGA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAWrP,GAAaoP,EAAapP,GACxDiP,EAAOhzB,GAAoB,IAAfqzB,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,EAElGJ,EAAGjzB,GAAMkzB,EACJE,EACA5lB,GAAKwlB,EAAOhzB,EAAI,MAAQwN,GAAKwlB,EAAOhzB,IAAO,GAC3CgzB,EAAOhzB,EAAI,GAAKgzB,EAAOhzB,IAAM,EAFhBgzB,EAAOhzB,EAAI,GADNgzB,EAAOhzB,IArElC,SAAwB+xB,EAAQiB,EAAQC,GACtC,MAAMF,EAAYhB,EAAO9xB,OACzB,IAAIqzB,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAatB,GAASC,EAAQ,GAClC,IAAK,IAAI/xB,EAAI,EAAGA,EAAI+yB,EAAY,IAAK/yB,EACnCmzB,EAAeC,EACfA,EAAatB,GAASC,EAAQ/xB,EAAI,GAC7BmzB,GAAiBC,IAGlBvlB,GAAamlB,EAAOhzB,GAAI,EAAG6xB,IAC7BoB,EAAGjzB,GAAKizB,EAAGjzB,EAAI,GAAK,GAGtBszB,EAASL,EAAGjzB,GAAKgzB,EAAOhzB,GACxBuzB,EAAQN,EAAGjzB,EAAI,GAAKgzB,EAAOhzB,GAC3ByzB,EAAmB/tB,KAAKqI,IAAIulB,EAAQ,GAAK5tB,KAAKqI,IAAIwlB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAI9tB,KAAK0J,KAAKqkB,GACrBR,EAAGjzB,GAAKszB,EAASE,EAAOR,EAAOhzB,GAC/BizB,EAAGjzB,EAAI,GAAKuzB,EAAQC,EAAOR,EAAOhzB,MAoDpC0zB,CAAe3B,EAAQiB,EAAQC,GAjDjC,SAAyBlB,EAAQkB,EAAIlP,EAAY,KAC/C,MAAM+O,EAAYb,GAAalO,GACzBgP,EAAYhB,EAAO9xB,OACzB,IAAI0zB,EAAOT,EAAaC,EACpBC,EAAatB,GAASC,EAAQ,GAClC,IAAK,IAAI/xB,EAAI,EAAGA,EAAI+yB,IAAa/yB,EAAG,CAIlC,GAHAkzB,EAAcC,EACdA,EAAeC,EACfA,EAAatB,GAASC,EAAQ/xB,EAAI,IAC7BmzB,EACH,SAEF,MAAMS,EAAST,EAAapP,GACtB8P,EAASV,EAAaL,GACxBI,IACFS,GAASC,EAASV,EAAYnP,IAAc,EAC5CoP,EAAa,MAAMpP,KAAe6P,EAASD,EAC3CR,EAAa,MAAML,KAAee,EAASF,EAAQV,EAAGjzB,IAEpDozB,IACFO,GAASP,EAAWrP,GAAa6P,GAAU,EAC3CT,EAAa,MAAMpP,KAAe6P,EAASD,EAC3CR,EAAa,MAAML,KAAee,EAASF,EAAQV,EAAGjzB,KA4B1D8zB,CAAgB/B,EAAQkB,EAAIlP,GAE9B,SAASgQ,GAAgBC,EAAItlB,EAAKC,GAChC,OAAOjJ,KAAKiJ,IAAIjJ,KAAKgJ,IAAIslB,EAAIrlB,GAAMD,GAuBrC,SAASulB,GAA2BlC,EAAQp0B,EAAS6qB,EAAMpiB,EAAM2d,GAC/D,IAAI/jB,EAAGmL,EAAMod,EAAO2L,EAIpB,GAHIv2B,EAAQw2B,WACVpC,EAASA,EAAO9wB,QAAQ+yB,IAAQA,EAAGhC,QAEE,aAAnCr0B,EAAQy2B,uBACVvB,GAAoBd,EAAQhO,OACvB,CACL,IAAIsQ,EAAOjuB,EAAO2rB,EAAOA,EAAO9xB,OAAS,GAAK8xB,EAAO,GACrD,IAAK/xB,EAAI,EAAGmL,EAAO4mB,EAAO9xB,OAAQD,EAAImL,IAAQnL,EAC5CuoB,EAAQwJ,EAAO/xB,GACfk0B,EAAgBhC,GACdmC,EACA9L,EACAwJ,EAAOrsB,KAAKgJ,IAAI1O,EAAI,EAAGmL,GAAQ/E,EAAO,EAAI,IAAM+E,GAChDxN,EAAQ22B,SAEV/L,EAAMe,KAAO4K,EAAcpzB,SAASlH,EACpC2uB,EAAMiB,KAAO0K,EAAcpzB,SAASuN,EACpCka,EAAMgB,KAAO2K,EAAclzB,KAAKpH,EAChC2uB,EAAMkB,KAAOyK,EAAclzB,KAAKqN,EAChCgmB,EAAO9L,EAGP5qB,EAAQ42B,iBA7Cd,SAAyBxC,EAAQvJ,GAC/B,IAAIxoB,EAAGmL,EAAMod,EAAOiM,EAAQC,EACxBC,EAAapM,GAAeyJ,EAAO,GAAIvJ,GAC3C,IAAKxoB,EAAI,EAAGmL,EAAO4mB,EAAO9xB,OAAQD,EAAImL,IAAQnL,EAC5Cy0B,EAAaD,EACbA,EAASE,EACTA,EAAa10B,EAAImL,EAAO,GAAKmd,GAAeyJ,EAAO/xB,EAAI,GAAIwoB,GACtDgM,IAGLjM,EAAQwJ,EAAO/xB,GACXy0B,IACFlM,EAAMe,KAAOyK,GAAgBxL,EAAMe,KAAMd,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMiB,KAAOuK,GAAgBxL,EAAMiB,KAAMhB,EAAKI,IAAKJ,EAAKK,SAEtD6L,IACFnM,EAAMgB,KAAOwK,GAAgBxL,EAAMgB,KAAMf,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMkB,KAAOsK,GAAgBxL,EAAMkB,KAAMjB,EAAKI,IAAKJ,EAAKK,UA6B1D0L,CAAgBxC,EAAQvJ,GAI5B,SAASmM,KACP,MAAyB,oBAAXh6B,QAA8C,oBAAboB,SAEjD,SAAS64B,GAAeC,GACtB,IAAIxD,EAASwD,EAAQ/3B,WAIrB,OAHIu0B,GAAgC,wBAAtBA,EAAOtnB,aACnBsnB,EAASA,EAAOl1B,MAEXk1B,EAET,SAASyD,GAAcC,EAAYn5B,EAAMo5B,GACvC,IAAIC,EASJ,MAR0B,iBAAfF,GACTE,EAAgB/U,SAAS6U,EAAY,KACJ,IAA7BA,EAAW5zB,QAAQ,OACrB8zB,EAAgBA,EAAgB,IAAMr5B,EAAKkB,WAAWk4B,KAGxDC,EAAgBF,EAEXE,EAET,MAAMC,GAAoB54B,GAAY3B,OAAOu6B,iBAAiB54B,EAAS,MAIvE,MAAM64B,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmBC,EAAQ94B,EAAO+4B,GACzC,MAAMC,EAAS,GACfD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAIt1B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMwM,EAAM2oB,GAAUn1B,GACtBu1B,EAAO/oB,GAAO7B,WAAW0qB,EAAO94B,EAAQ,IAAMiQ,EAAM8oB,KAAY,EAIlE,OAFAC,EAAOxP,MAAQwP,EAAO7M,KAAO6M,EAAO5M,MACpC4M,EAAOrO,OAASqO,EAAO3M,IAAM2M,EAAO1M,OAC7B0M,EAqBT,SAASC,GAAoBC,EAAKtS,GAChC,MAAM2D,OAACA,EAAMH,wBAAEA,GAA2BxD,EACpC5mB,EAAQ24B,GAAiBpO,GACzB4O,EAAgC,eAApBn5B,EAAMo5B,UAClBC,EAAWR,GAAmB74B,EAAO,WACrCs5B,EAAUT,GAAmB74B,EAAO,SAAU,UAC9C3C,EAACA,EAACyU,EAAEA,EAACynB,IAAEA,GAxBf,SAA2BL,EAAK3O,GAC9B,MAAM9iB,EAAIyxB,EAAIM,QAAUN,EAClBO,EAAUhyB,EAAEgyB,QACZxqB,EAASwqB,GAAWA,EAAQ/1B,OAAS+1B,EAAQ,GAAKhyB,GAClDiyB,QAACA,EAAOC,QAAEA,GAAW1qB,EAC3B,IACI5R,EAAGyU,EADHynB,GAAM,EAEV,GARmB,EAACl8B,EAAGyU,EAAG1S,KAAY/B,EAAI,GAAKyU,EAAI,MAAQ1S,IAAWA,EAAOw6B,YAQzEC,CAAaH,EAASC,EAASlyB,EAAErI,QACnC/B,EAAIq8B,EACJ5nB,EAAI6nB,MACC,CACL,MAAM/N,EAAOrB,EAAOuP,wBACpBz8B,EAAI4R,EAAO8qB,QAAUnO,EAAKO,KAC1Bra,EAAI7C,EAAO+qB,QAAUpO,EAAKS,IAC1BkN,GAAM,EAER,MAAO,CAACl8B,EAAAA,EAAGyU,EAAAA,EAAGynB,IAAAA,GAQMU,CAAkBf,EAAK3O,GACrCM,EAAUwO,EAASlN,MAAQoN,GAAOD,EAAQnN,MAC1CrB,EAAUuO,EAAShN,KAAOkN,GAAOD,EAAQjN,KAC/C,IAAI7C,MAACA,EAAKmB,OAAEA,GAAU/D,EAKtB,OAJIuS,IACF3P,GAAS6P,EAAS7P,MAAQ8P,EAAQ9P,MAClCmB,GAAU0O,EAAS1O,OAAS2O,EAAQ3O,QAE/B,CACLttB,EAAG8L,KAAKkI,OAAOhU,EAAIwtB,GAAWrB,EAAQe,EAAOf,MAAQY,GACrDtY,EAAG3I,KAAKkI,OAAOS,EAAIgZ,GAAWH,EAASJ,EAAOI,OAASP,IA4B3D,MAAM8P,GAASnjB,GAAK5N,KAAKkI,MAAU,GAAJ0F,GAAU,GACzC,SAASojB,GAAe5P,EAAQ6P,EAASC,EAAUC,GACjD,MAAMt6B,EAAQ24B,GAAiBpO,GACzBgQ,EAAU1B,GAAmB74B,EAAO,UACpCiuB,EAAWsK,GAAcv4B,EAAMiuB,SAAU1D,EAAQ,gBAAkB7Z,GACnE8pB,EAAYjC,GAAcv4B,EAAMw6B,UAAWjQ,EAAQ,iBAAmB7Z,GACtE+pB,EA/BR,SAA0BlQ,EAAQf,EAAOmB,GACvC,IAAIsD,EAAUuM,EACd,QAAcjU,IAAViD,QAAkCjD,IAAXoE,EAAsB,CAC/C,MAAM+P,EAAYrC,GAAe9N,GACjC,GAAKmQ,EAGE,CACL,MAAM9O,EAAO8O,EAAUZ,wBACjBa,EAAiBhC,GAAiB+B,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5DnR,EAAQoC,EAAKpC,MAAQqR,EAAiBrR,MAAQoR,EAAgBpR,MAC9DmB,EAASiB,EAAKjB,OAASkQ,EAAiBlQ,OAASiQ,EAAgBjQ,OACjEsD,EAAWsK,GAAcoC,EAAe1M,SAAUyM,EAAW,eAC7DF,EAAYjC,GAAcoC,EAAeH,UAAWE,EAAW,qBAV/DlR,EAAQe,EAAOuQ,YACfnQ,EAASJ,EAAOwQ,aAYpB,MAAO,CACLvR,MAAAA,EACAmB,OAAAA,EACAsD,SAAUA,GAAYvd,GACtB8pB,UAAWA,GAAa9pB,IASJsqB,CAAiBzQ,EAAQ6P,EAASC,GACxD,IAAI7Q,MAACA,EAAKmB,OAAEA,GAAU8P,EACtB,GAAwB,gBAApBz6B,EAAMo5B,UAA6B,CACrC,MAAME,EAAUT,GAAmB74B,EAAO,SAAU,SAC9Cq5B,EAAWR,GAAmB74B,EAAO,WAC3CwpB,GAAS6P,EAAS7P,MAAQ8P,EAAQ9P,MAClCmB,GAAU0O,EAAS1O,OAAS2O,EAAQ3O,OAStC,OAPAnB,EAAQrgB,KAAKiJ,IAAI,EAAGoX,EAAQ+Q,EAAQ/Q,OACpCmB,EAASxhB,KAAKiJ,IAAI,EAAGkoB,EAAcnxB,KAAKsI,MAAM+X,EAAQ8Q,GAAe3P,EAAS4P,EAAQ5P,QACtFnB,EAAQ0Q,GAAO/wB,KAAKgJ,IAAIqX,EAAOyE,EAAUwM,EAAcxM,WACvDtD,EAASuP,GAAO/wB,KAAKgJ,IAAIwY,EAAQ6P,EAAWC,EAAcD,YACtDhR,IAAUmB,IACZA,EAASuP,GAAO1Q,EAAQ,IAEnB,CACLA,MAAAA,EACAmB,OAAAA,GAGJ,SAASsQ,GAAYrU,EAAOsU,EAAYC,GACtC,MAAMC,EAAaF,GAAc,EAC3BG,EAAelyB,KAAKsI,MAAMmV,EAAM+D,OAASyQ,GACzCE,EAAcnyB,KAAKsI,MAAMmV,EAAM4C,MAAQ4R,GAC7CxU,EAAM+D,OAAS0Q,EAAeD,EAC9BxU,EAAM4C,MAAQ8R,EAAcF,EAC5B,MAAM7Q,EAAS3D,EAAM2D,OAKrB,OAJIA,EAAOvqB,QAAUm7B,IAAgB5Q,EAAOvqB,MAAM2qB,SAAWJ,EAAOvqB,MAAMwpB,SACxEe,EAAOvqB,MAAM2qB,OAAS,GAAG/D,EAAM+D,WAC/BJ,EAAOvqB,MAAMwpB,MAAQ,GAAG5C,EAAM4C,YAE5B5C,EAAMwD,0BAA4BgR,GAC/B7Q,EAAOI,SAAW0Q,GAClB9Q,EAAOf,QAAU8R,KACtB1U,EAAMwD,wBAA0BgR,EAChC7Q,EAAOI,OAAS0Q,EAChB9Q,EAAOf,MAAQ8R,EACf1U,EAAM5f,IAAIu0B,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,GAIX,MAAMI,GAAgC,WACpC,IAAIC,GAAmB,EACvB,IACE,MAAMr6B,EAAU,CACds6B,cAEE,OADAD,GAAmB,GACZ,IAGXr9B,OAAOiD,iBAAiB,OAAQ,KAAMD,GACtChD,OAAOkD,oBAAoB,OAAQ,KAAMF,GACzC,MAAOqG,IAET,OAAOg0B,KAET,SAASE,GAAa57B,EAASmS,GAC7B,MAAMrQ,EA9IR,SAAkB+5B,EAAI1pB,GACpB,OAAOymB,GAAiBiD,GAAIC,iBAAiB3pB,GA6I/B4pB,CAAS/7B,EAASmS,GAC1Bod,EAAUztB,GAASA,EAAM0tB,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK/I,EAGjC,SAASwV,GAAa1jB,EAAIC,EAAIjV,EAAGqkB,GAC/B,MAAO,CACLrqB,EAAGgb,EAAGhb,EAAIgG,GAAKiV,EAAGjb,EAAIgb,EAAGhb,GACzByU,EAAGuG,EAAGvG,EAAIzO,GAAKiV,EAAGxG,EAAIuG,EAAGvG,IAG7B,SAASkqB,GAAsB3jB,EAAIC,EAAIjV,EAAGqkB,GACxC,MAAO,CACLrqB,EAAGgb,EAAGhb,EAAIgG,GAAKiV,EAAGjb,EAAIgb,EAAGhb,GACzByU,EAAY,WAAT4V,EAAoBrkB,EAAI,GAAMgV,EAAGvG,EAAIwG,EAAGxG,EAChC,UAAT4V,EAAmBrkB,EAAI,EAAIgV,EAAGvG,EAAIwG,EAAGxG,EACrCzO,EAAI,EAAIiV,EAAGxG,EAAIuG,EAAGvG,GAGxB,SAASmqB,GAAqB5jB,EAAIC,EAAIjV,EAAGqkB,GACvC,MAAMwU,EAAM,CAAC7+B,EAAGgb,EAAG2U,KAAMlb,EAAGuG,EAAG6U,MACzBiP,EAAM,CAAC9+B,EAAGib,EAAGyU,KAAMjb,EAAGwG,EAAG2U,MACzBhvB,EAAI89B,GAAa1jB,EAAI6jB,EAAK74B,GAC1BnF,EAAI69B,GAAaG,EAAKC,EAAK94B,GAC3BtE,EAAIg9B,GAAaI,EAAK7jB,EAAIjV,GAC1BkF,EAAIwzB,GAAa99B,EAAGC,EAAGmF,GACvBoE,EAAIs0B,GAAa79B,EAAGa,EAAGsE,GAC7B,OAAO04B,GAAaxzB,EAAGd,EAAGpE,GAG5B,MAAM+4B,GAAY,IAAI9wB,IAWtB,SAAS+wB,GAAaC,EAAKC,EAAQn7B,GACjC,OAXF,SAAyBm7B,EAAQn7B,GAC/BA,EAAUA,GAAW,GACrB,MAAMo7B,EAAWD,EAASE,KAAKC,UAAUt7B,GACzC,IAAIu7B,EAAYP,GAAU7J,IAAIiK,GAK9B,OAJKG,IACHA,EAAY,IAAIC,KAAKC,aAAaN,EAAQn7B,GAC1Cg7B,GAAUlW,IAAIsW,EAAUG,IAEnBA,EAGAG,CAAgBP,EAAQn7B,GAAS27B,OAAOT,GA2CjD,SAASU,GAAcC,EAAKC,EAAO1T,GACjC,OAAOyT,EAzCqB,SAASC,EAAO1T,GAC5C,MAAO,CACLnsB,EAAEA,GACO6/B,EAAQA,EAAQ1T,EAAQnsB,EAEjCyM,SAAS+N,GACP2R,EAAQ3R,GAEV8V,UAAUvgB,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtC+vB,MAAK,CAAC9/B,EAAGwE,IACAxE,EAAIwE,EAEbu7B,WAAU,CAAC//B,EAAGggC,IACLhgC,EAAIggC,GAuBFC,CAAsBJ,EAAO1T,GAlBnC,CACLnsB,EAAEA,GACOA,EAETyM,SAAS+N,KAET8V,UAAUvgB,GACDA,EAET+vB,MAAK,CAAC9/B,EAAGwE,IACAxE,EAAIwE,EAEbu7B,WAAU,CAAC//B,EAAGkgC,IACLlgC,GA0Bb,SAASmgC,GAAWtrB,GAClB,MAAiB,UAAbA,EACK,CACLurB,QAASzqB,GACT0qB,QAAS5qB,GACT6qB,UAAW5qB,IAGR,CACL0qB,QAAS,CAAC7rB,EAAGuB,EAAG1L,IAAMmK,GAAKzI,KAAKgJ,IAAIgB,EAAG1L,IAAMmK,GAAKzI,KAAKiJ,IAAI3K,EAAG0L,GAC9DuqB,QAAS,CAACz/B,EAAGC,IAAMD,EAAIC,EACvBy/B,UAAWtgC,GAAKA,GAGpB,SAASugC,IAAiBv0B,MAACA,EAAKC,IAAEA,EAAGu0B,MAAEA,EAAKh0B,KAAEA,EAAI7J,MAAEA,IAClD,MAAO,CACLqJ,MAAOA,EAAQw0B,EACfv0B,IAAKA,EAAMu0B,EACXh0B,KAAMA,IAASP,EAAMD,EAAQ,GAAKw0B,GAAU,EAC5C79B,MAAAA,GA2BJ,SAAS89B,GAAcC,EAASvI,EAAQwI,GACtC,IAAKA,EACH,MAAO,CAACD,GAEV,MAAM7rB,SAACA,EAAU7I,MAAO40B,EAAY30B,IAAK40B,GAAYF,EAC/CH,EAAQrI,EAAO9xB,QACfg6B,QAACA,EAAOD,QAAEA,EAAOE,UAAEA,GAAaH,GAAWtrB,IAC3C7I,MAACA,EAAKC,IAAEA,EAAGO,KAAEA,EAAI7J,MAAEA,GA/B3B,SAAoB+9B,EAASvI,EAAQwI,GACnC,MAAM9rB,SAACA,EAAU7I,MAAO40B,EAAY30B,IAAK40B,GAAYF,GAC/CP,QAACA,EAAOE,UAAEA,GAAaH,GAAWtrB,GAClC2rB,EAAQrI,EAAO9xB,OACrB,IACID,EAAGmL,GADHvF,MAACA,EAAKC,IAAEA,EAAGO,KAAEA,GAAQk0B,EAEzB,GAAIl0B,EAAM,CAGR,IAFAR,GAASw0B,EACTv0B,GAAOu0B,EACFp6B,EAAI,EAAGmL,EAAOivB,EAAOp6B,EAAImL,GACvB6uB,EAAQE,EAAUnI,EAAOnsB,EAAQw0B,GAAO3rB,IAAY+rB,EAAYC,KADjCz6B,EAIpC4F,IACAC,IAEFD,GAASw0B,EACTv0B,GAAOu0B,EAKT,OAHIv0B,EAAMD,IACRC,GAAOu0B,GAEF,CAACx0B,MAAAA,EAAOC,IAAAA,EAAKO,KAAAA,EAAM7J,MAAO+9B,EAAQ/9B,OASPm+B,CAAWJ,EAASvI,EAAQwI,GACxDhF,EAAS,GACf,IAEIn3B,EAAOmqB,EAAOoS,EAFdC,GAAS,EACTC,EAAW,KAEf,MAEMC,EAAc,IAAMF,GAFEZ,EAAQQ,EAAYG,EAAWv8B,IAA6C,IAAnC67B,EAAQO,EAAYG,GAGnFI,EAAa,KAAOH,GAF6B,IAA7BX,EAAQQ,EAAUr8B,IAAgB47B,EAAQS,EAAUE,EAAWv8B,GAGzF,IAAK,IAAI4B,EAAI4F,EAAOyuB,EAAOzuB,EAAO5F,GAAK6F,IAAO7F,EAC5CuoB,EAAQwJ,EAAO/xB,EAAIo6B,GACf7R,EAAMyJ,OAGV5zB,EAAQ87B,EAAU3R,EAAM9Z,IACpBrQ,IAAUu8B,IAGdC,EAASZ,EAAQ57B,EAAOo8B,EAAYC,GACnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BZ,EAAQ77B,EAAOo8B,GAAoBx6B,EAAIq0B,GAEnC,OAAbwG,GAAqBE,MACvBxF,EAAOxzB,KAAKo4B,GAAiB,CAACv0B,MAAOi1B,EAAUh1B,IAAK7F,EAAGoG,KAAAA,EAAMg0B,MAAAA,EAAO79B,MAAAA,KACpEs+B,EAAW,MAEbxG,EAAOr0B,EACP26B,EAAYv8B,IAKd,OAHiB,OAAby8B,GACFtF,EAAOxzB,KAAKo4B,GAAiB,CAACv0B,MAAOi1B,EAAUh1B,IAAAA,EAAKO,KAAAA,EAAMg0B,MAAAA,EAAO79B,MAAAA,KAE5Dg5B,EA6ET,SAASyF,GAAcjR,EAAMkR,EAAUlJ,EAAQmJ,GAC7C,OAAKA,GAAmBA,EAAe9K,YAAe2B,EAKxD,SAAyBhI,EAAMkR,EAAUlJ,EAAQmJ,GAC/C,MAAMC,EAAYC,GAAUrR,EAAKpsB,SAC3By8B,EAAQrI,EAAO9xB,OACfs1B,EAAS,GACf,IAAI3vB,EAAQq1B,EAAS,GAAGr1B,MACpB5F,EAAI4F,EACR,IAAK,MAAM00B,KAAWW,EAAU,CAC9B,IAEI1+B,EAFA8+B,EAAYF,EACZ9G,EAAOtC,EAAOnsB,EAAQw0B,GAE1B,IAAKp6B,EAAI4F,EAAQ,EAAG5F,GAAKs6B,EAAQz0B,IAAK7F,IAAK,CACzC,MAAMg0B,EAAKjC,EAAO/xB,EAAIo6B,GACtB79B,EAAQ6+B,GAAUF,EAAe9K,WAAW,CAC1CluB,KAAM,UACNo5B,GAAIjH,EACJzf,GAAIof,EACJuH,aAAcv7B,EAAI,GAAKo6B,EACvBoB,YAAax7B,EAAIo6B,EACjB9uB,aAAcye,EAAK0R,iBAEjBC,GAAan/B,EAAO8+B,KACtB9F,EAAOxzB,KAAK,CAAC6D,MAAOA,EAAOC,IAAK7F,EAAI,EAAGoG,KAAMk0B,EAAQl0B,KAAM7J,MAAO8+B,IAClEA,EAAY9+B,EACZqJ,EAAQ5F,EAAI,GAEdq0B,EAAOL,EACPqH,EAAY9+B,EAEVqJ,EAAQ5F,EAAI,IACdu1B,EAAOxzB,KAAK,CAAC6D,MAAAA,EAAOC,IAAK7F,EAAI,EAAGoG,KAAMk0B,EAAQl0B,KAAM7J,MAAAA,IACpDqJ,EAAQ5F,EAAI,GAGhB,OAAOu1B,EAnCAoG,CAAgB5R,EAAMkR,EAAUlJ,EAAQmJ,GAFtCD,EAuCX,SAASG,GAAUz9B,GACjB,MAAO,CACLolB,gBAAiBplB,EAAQolB,gBACzB6Y,eAAgBj+B,EAAQi+B,eACxBC,WAAYl+B,EAAQk+B,WACpBC,iBAAkBn+B,EAAQm+B,iBAC1BC,gBAAiBp+B,EAAQo+B,gBACzB3T,YAAazqB,EAAQyqB,YACrBpF,YAAarlB,EAAQqlB,aAGzB,SAAS0Y,GAAan/B,EAAO8+B,GAC3B,OAAOA,GAAarC,KAAKC,UAAU18B,KAAWy8B,KAAKC,UAAUoC;;;;;;OCtxE/D,IAAIW,GAAW,IAzIf,MACE31B,cACEpI,KAAKg+B,SAAW,KAChBh+B,KAAKi+B,QAAU,IAAIr0B,IACnB5J,KAAKk+B,UAAW,EAChBl+B,KAAKm+B,eAAYtZ,EAEnBzc,QAAQ8c,EAAOkZ,EAAOC,EAAMp6B,GAC1B,MAAMD,EAAYo6B,EAAM1O,UAAUzrB,GAC5Bq6B,EAAWF,EAAMh9B,SACvB4C,EAAU7H,SAAQN,GAAMA,EAAG,CACzBqpB,MAAAA,EACAqZ,QAASH,EAAMG,QACfD,SAAAA,EACAE,YAAa/2B,KAAKgJ,IAAI4tB,EAAOD,EAAMz2B,MAAO22B,OAG9Cl2B,WACE,MAAMkb,EAAKtjB,KACPsjB,EAAG0a,WAGP1a,EAAG4a,UAAW,EACd5a,EAAG0a,SAAWhzB,GAAiBjL,KAAKrD,QAAQ,KAC1C4mB,EAAGmb,UACHnb,EAAG0a,SAAW,KACV1a,EAAG4a,UACL5a,EAAGob,eAITt2B,QAAQi2B,EAAOxhC,KAAKF,OAClB,MAAM2mB,EAAKtjB,KACX,IAAI2+B,EAAY,EAChBrb,EAAG2a,QAAQ9hC,SAAQ,CAACiiC,EAAOlZ,KACzB,IAAKkZ,EAAMQ,UAAYR,EAAMxO,MAAM5tB,OACjC,OAEF,MAAM4tB,EAAQwO,EAAMxO,MACpB,IAEI6C,EAFA1wB,EAAI6tB,EAAM5tB,OAAS,EACnB68B,GAAO,EAEX,KAAO98B,GAAK,IAAKA,EACf0wB,EAAO7C,EAAM7tB,GACT0wB,EAAKqM,SACHrM,EAAKsM,OAASX,EAAMh9B,WACtBg9B,EAAMh9B,SAAWqxB,EAAKsM,QAExBtM,EAAKzqB,KAAKq2B,GACVQ,GAAO,IAEPjP,EAAM7tB,GAAK6tB,EAAMA,EAAM5tB,OAAS,GAChC4tB,EAAM5qB,OAGN65B,IACF3Z,EAAM2Z,OACNvb,EAAG0b,QAAQ9Z,EAAOkZ,EAAOC,EAAM,aAE5BzO,EAAM5tB,SACTo8B,EAAMQ,SAAU,EAChBtb,EAAG0b,QAAQ9Z,EAAOkZ,EAAOC,EAAM,YAC/BD,EAAMG,SAAU,GAElBI,GAAa/O,EAAM5tB,UAErBshB,EAAG6a,UAAYE,EACG,IAAdM,IACFrb,EAAG4a,UAAW,GAGlB91B,UAAU8c,GACR,MAAM+Z,EAASj/B,KAAKi+B,QACpB,IAAIG,EAAQa,EAAOpO,IAAI3L,GAavB,OAZKkZ,IACHA,EAAQ,CACNQ,SAAS,EACTL,SAAS,EACT3O,MAAO,GACPF,UAAW,CACTwP,SAAU,GACVC,SAAU,KAGdF,EAAOza,IAAIU,EAAOkZ,IAEbA,EAETh2B,OAAO8c,EAAO1lB,EAAOzC,GACnBiD,KAAKo/B,UAAUla,GAAOwK,UAAUlwB,GAAOsE,KAAK/G,GAE9CqL,IAAI8c,EAAO0K,GACJA,GAAUA,EAAM5tB,QAGrBhC,KAAKo/B,UAAUla,GAAO0K,MAAM9rB,QAAQ8rB,GAEtCxnB,IAAI8c,GACF,OAAOllB,KAAKo/B,UAAUla,GAAO0K,MAAM5tB,OAAS,EAE9CoG,MAAM8c,GACJ,MAAMkZ,EAAQp+B,KAAKi+B,QAAQpN,IAAI3L,GAC1BkZ,IAGLA,EAAMQ,SAAU,EAChBR,EAAMz2B,MAAQ9K,KAAKF,MACnByhC,EAAMh9B,SAAWg9B,EAAMxO,MAAMyP,QAAO,CAACC,EAAKC,IAAQ93B,KAAKiJ,IAAI4uB,EAAKC,EAAIC,YAAY,GAChFx/B,KAAK0+B,YAEPt2B,QAAQ8c,GACN,IAAKllB,KAAKk+B,SACR,OAAO,EAET,MAAME,EAAQp+B,KAAKi+B,QAAQpN,IAAI3L,GAC/B,SAAKkZ,GAAUA,EAAMQ,SAAYR,EAAMxO,MAAM5tB,QAK/CoG,KAAK8c,GACH,MAAMkZ,EAAQp+B,KAAKi+B,QAAQpN,IAAI3L,GAC/B,IAAKkZ,IAAUA,EAAMxO,MAAM5tB,OACzB,OAEF,MAAM4tB,EAAQwO,EAAMxO,MACpB,IAAI7tB,EAAI6tB,EAAM5tB,OAAS,EACvB,KAAOD,GAAK,IAAKA,EACf6tB,EAAM7tB,GAAG09B,SAEXrB,EAAMxO,MAAQ,GACd5vB,KAAKg/B,QAAQ9Z,EAAOkZ,EAAOvhC,KAAKF,MAAO,YAEzCyL,OAAO8c,GACL,OAAOllB,KAAKi+B,QAAQ3gC,OAAO4nB,KAK/B,MAAM/C,GAAc,cACdud,GAAgB,CACpBC,QAAO,CAACv1B,EAAMw1B,EAAIC,IACTA,EAAS,GAAMD,EAAKx1B,EAE7BhC,MAAMgC,EAAMw1B,EAAIC,GACd,MAAMC,EAAK1c,GAAMhZ,GAAQ+X,IACnBoB,EAAKuc,EAAG5c,OAASE,GAAMwc,GAAMzd,IACnC,OAAOoB,GAAMA,EAAGL,MACZK,EAAGwc,IAAID,EAAID,GAAQzqB,YACnBwqB,GAENI,OAAM,CAAC51B,EAAMw1B,EAAIC,IACRz1B,GAAQw1B,EAAKx1B,GAAQy1B,GAGhC,MAAMI,GACJ73B,YAAY83B,EAAKxiC,EAAQuwB,EAAM2R,GAC7B,MAAMO,EAAeziC,EAAOuwB,GAC5B2R,EAAKn7B,GAAQ,CAACy7B,EAAIN,GAAIA,EAAIO,EAAcD,EAAI91B,OAC5C,MAAMA,EAAO3F,GAAQ,CAACy7B,EAAI91B,KAAM+1B,EAAcP,IAC9C5/B,KAAK8+B,SAAU,EACf9+B,KAAKogC,IAAMF,EAAIrkC,IAAM6jC,GAAcQ,EAAIj8B,aAAemG,GACtDpK,KAAKqgC,QAAUluB,GAAQ+tB,EAAIn4B,SAAWoK,GAAQC,OAC9CpS,KAAKsgC,OAAS74B,KAAKsI,MAAMlT,KAAKF,OAASujC,EAAI7+B,OAAS,IACpDrB,KAAKw/B,UAAYx/B,KAAK++B,OAASt3B,KAAKsI,MAAMmwB,EAAI9+B,UAC9CpB,KAAKugC,QAAUL,EAAI/3B,KACnBnI,KAAKwgC,QAAU9iC,EACfsC,KAAKygC,MAAQxS,EACbjuB,KAAK0gC,MAAQt2B,EACbpK,KAAK2gC,IAAMf,EACX5/B,KAAK4gC,eAAY/b,EAEnBzc,SACE,OAAOpI,KAAK8+B,QAEd12B,OAAO83B,EAAKN,EAAIvB,GACd,MAAM/a,EAAKtjB,KACX,GAAIsjB,EAAGwb,QAAS,CACdxb,EAAG0b,SAAQ,GACX,MAAMmB,EAAe7c,EAAGkd,QAAQld,EAAGmd,OAC7BI,EAAUxC,EAAO/a,EAAGgd,OACpBQ,EAASxd,EAAGkc,UAAYqB,EAC9Bvd,EAAGgd,OAASjC,EACZ/a,EAAGkc,UAAY/3B,KAAKsI,MAAMtI,KAAKiJ,IAAIowB,EAAQZ,EAAI9+B,WAC/CkiB,EAAGyb,QAAU8B,EACbvd,EAAGid,QAAUL,EAAI/3B,KACjBmb,EAAGqd,IAAMl8B,GAAQ,CAACy7B,EAAIN,GAAIA,EAAIO,EAAcD,EAAI91B,OAChDkZ,EAAGod,MAAQj8B,GAAQ,CAACy7B,EAAI91B,KAAM+1B,EAAcP,KAGhDx3B,SACE,MAAMkb,EAAKtjB,KACPsjB,EAAGwb,UACLxb,EAAGtb,KAAKnL,KAAKF,OACb2mB,EAAGwb,SAAU,EACbxb,EAAG0b,SAAQ,IAGf52B,KAAKi2B,GACH,MAAM/a,EAAKtjB,KACL6gC,EAAUxC,EAAO/a,EAAGgd,OACpBl/B,EAAWkiB,EAAGkc,UACdvR,EAAO3K,EAAGmd,MACVr2B,EAAOkZ,EAAGod,MACVv4B,EAAOmb,EAAGid,MACVX,EAAKtc,EAAGqd,IACd,IAAId,EAEJ,GADAvc,EAAGwb,QAAU10B,IAASw1B,IAAOz3B,GAAS04B,EAAUz/B,IAC3CkiB,EAAGwb,QAGN,OAFAxb,EAAGkd,QAAQvS,GAAQ2R,OACnBtc,EAAG0b,SAAQ,GAGT6B,EAAU,EACZvd,EAAGkd,QAAQvS,GAAQ7jB,GAGrBy1B,EAAUgB,EAAUz/B,EAAY,EAChCy+B,EAAS13B,GAAQ03B,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASvc,EAAG+c,QAAQ54B,KAAKgJ,IAAI,EAAGhJ,KAAKiJ,IAAI,EAAGmvB,KAC5Cvc,EAAGkd,QAAQvS,GAAQ3K,EAAG8c,IAAIh2B,EAAMw1B,EAAIC,IAEtCz3B,OACE,MAAM24B,EAAW/gC,KAAK4gC,YAAc5gC,KAAK4gC,UAAY,IACrD,OAAO,IAAIp8B,SAAQ,CAACw8B,EAAKC,KACvBF,EAASj9B,KAAK,CAACk9B,IAAAA,EAAKC,IAAAA,OAGxB74B,QAAQ84B,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BH,EAAW/gC,KAAK4gC,WAAa,GACnC,IAAK,IAAI7+B,EAAI,EAAGA,EAAIg/B,EAAS/+B,OAAQD,IACnCg/B,EAASh/B,GAAGo/B,MAOlBxc,GAASH,IAAI,YAAa,CACxBnjB,WAAOwjB,EACPzjB,SAAU,IACV2G,OAAQ,eACRlM,QAAIgpB,EACJza,UAAMya,EACN1c,UAAM0c,EACN+a,QAAI/a,EACJ5gB,UAAM4gB,IAER,MAAMuc,GAAmBrlC,OAAOgP,KAAK4Z,GAAShiB,WAC9CgiB,GAASgC,SAAS,YAAa,CAC7BY,WAAW,EACXD,YAAY,EACZF,YAAcroB,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3E4lB,GAASH,IAAI,aAAc,CACzB6c,OAAQ,CACNp9B,KAAM,QACNq9B,WApBW,CAAC,QAAS,cAAe,oBAsBtCC,QAAS,CACPt9B,KAAM,SACNq9B,WAzBY,CAAC,IAAK,IAAK,cAAe,SAAU,cA4BpD3c,GAASgC,SAAS,aAAc,CAC9BY,UAAW,cAEb5C,GAASH,IAAI,cAAe,CAC1BtjB,OAAQ,CACNyB,UAAW,CACTvB,SAAU,MAGdogC,OAAQ,CACN7+B,UAAW,CACTvB,SAAU,IAGdqgC,KAAM,CACJC,WAAY,CACVL,OAAQ,CACNj3B,KAAM,eAERu3B,QAAS,CACP19B,KAAM,UACN7C,SAAU,KAIhBwgC,KAAM,CACJF,WAAY,CACVL,OAAQ,CACNzB,GAAI,eAEN+B,QAAS,CACP19B,KAAM,UACN8D,OAAQ,SACRlM,GAAIwZ,GAAS,EAAJA,OAKjB,MAAMwsB,GACJz5B,YAAY8c,EAAOhe,GACjBlH,KAAK8hC,OAAS5c,EACdllB,KAAK+hC,YAAc,IAAIn4B,IACvB5J,KAAKgiC,UAAU96B,GAEjBkB,UAAUlB,GACR,IAAK8E,GAAS9E,GACZ,OAEF,MAAM+6B,EAAgBjiC,KAAK+hC,YAC3BhmC,OAAOmmC,oBAAoBh7B,GAAQ/K,SAAQuE,IACzC,MAAMw/B,EAAMh5B,EAAOxG,GACnB,IAAKsL,GAASk0B,GACZ,OAEF,MAAMgB,EAAW,GACjB,IAAK,MAAMiB,KAAUf,GACnBF,EAASiB,GAAUjC,EAAIiC,IAExBt2B,GAAQq0B,EAAIoB,aAAepB,EAAIoB,YAAc,CAAC5gC,IAAMvE,SAAS8xB,IACxDA,IAASvtB,GAAQuhC,EAAc/8B,IAAI+oB,IACrCgU,EAAczd,IAAIyJ,EAAMiT,SAKhC94B,gBAAgB1K,EAAQgnB,GACtB,MAAM0d,EAAa1d,EAAOhlB,QACpBA,EAwEV,SAA8BhC,EAAQ0kC,GACpC,IAAKA,EACH,OAEF,IAAI1iC,EAAUhC,EAAOgC,QACrB,IAAKA,EAEH,YADAhC,EAAOgC,QAAU0iC,GAGf1iC,EAAQ2iC,UACV3kC,EAAOgC,QAAUA,EAAU3D,OAAO2mB,OAAO,GAAIhjB,EAAS,CAAC2iC,SAAS,EAAOC,YAAa,MAEtF,OAAO5iC,EApFW6iC,CAAqB7kC,EAAQ0kC,GAC7C,IAAK1iC,EACH,MAAO,GAET,MAAMgiC,EAAa1hC,KAAKwiC,kBAAkB9iC,EAAS0iC,GAOnD,OANIA,EAAWC,SAwDnB,SAAkBX,EAAYJ,GAC5B,MAAM1C,EAAU,GACV7zB,EAAOhP,OAAOgP,KAAKu2B,GACzB,IAAK,IAAIv/B,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAAK,CACpC,MAAMkB,EAAOy+B,EAAW32B,EAAKhJ,IACzBkB,GAAQA,EAAK/B,UACf09B,EAAQ96B,KAAKb,EAAKw/B,QAGtB,OAAOj+B,QAAQk+B,IAAI9D,GAhEf+D,CAASjlC,EAAOgC,QAAQ4iC,YAAaF,GAAY/5B,MAAK,KACpD3K,EAAOgC,QAAU0iC,KAChB,SAGEV,EAETt5B,kBAAkB1K,EAAQgnB,GACxB,MAAMud,EAAgBjiC,KAAK+hC,YACrBL,EAAa,GACb9C,EAAUlhC,EAAO4kC,cAAgB5kC,EAAO4kC,YAAc,IACtDh5B,EAAQvN,OAAOgP,KAAK2Z,GACpB2Z,EAAOxhC,KAAKF,MAClB,IAAIoF,EACJ,IAAKA,EAAIuH,EAAMtH,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACtC,MAAMksB,EAAO3kB,EAAMvH,GACnB,GAAuB,MAAnBksB,EAAKxf,OAAO,GACd,SAEF,GAAa,YAATwf,EAAoB,CACtByT,EAAW59B,QAAQ9D,KAAK4iC,gBAAgBllC,EAAQgnB,IAChD,SAEF,MAAMvkB,EAAQukB,EAAOuJ,GACrB,IAAItrB,EAAYi8B,EAAQ3Q,GACxB,MAAMiS,EAAM+B,EAAcpR,IAAI5C,GAC9B,GAAItrB,EAAW,CACb,GAAIu9B,GAAOv9B,EAAUzB,SAAU,CAC7ByB,EAAUoC,OAAOm7B,EAAK//B,EAAOk+B,GAC7B,SAEA17B,EAAU88B,SAGTS,GAAQA,EAAI9+B,UAIjBw9B,EAAQ3Q,GAAQtrB,EAAY,IAAIs9B,GAAUC,EAAKxiC,EAAQuwB,EAAM9tB,GAC7DuhC,EAAW59B,KAAKnB,IAJdjF,EAAOuwB,GAAQ9tB,EAMnB,OAAOuhC,EAETt5B,OAAO1K,EAAQgnB,GACb,GAA8B,IAA1B1kB,KAAK+hC,YAAYvkC,KAEnB,YADAzB,OAAO2mB,OAAOhlB,EAAQgnB,GAGxB,MAAMgd,EAAa1hC,KAAKwiC,kBAAkB9kC,EAAQgnB,GAClD,OAAIgd,EAAW1/B,QACb+7B,GAAS57B,IAAInC,KAAK8hC,OAAQJ,IACnB,QAFT,GAgCJ,SAASmB,GAAUrc,EAAOsc,GACxB,MAAMpX,EAAOlF,GAASA,EAAM9mB,SAAW,GACjCmN,EAAU6e,EAAK7e,QACf4D,OAAmBoU,IAAb6G,EAAKjb,IAAoBqyB,EAAkB,EACjDpyB,OAAmBmU,IAAb6G,EAAKhb,IAAoBoyB,EAAkB,EACvD,MAAO,CACLn7B,MAAOkF,EAAU6D,EAAMD,EACvB7I,IAAKiF,EAAU4D,EAAMC,GAkCzB,SAASqyB,GAAwB7d,EAAO8d,GACtC,MAAMj4B,EAAO,GACPk4B,EAAW/d,EAAMge,uBAAuBF,GAC9C,IAAIjhC,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO+1B,EAASjhC,OAAQD,EAAImL,IAAQnL,EAC9CgJ,EAAKjH,KAAKm/B,EAASlhC,GAAG2I,OAExB,OAAOK,EAET,SAASo4B,GAAWC,EAAOjjC,EAAOkjC,EAAS3jC,GACzC,MAAMqL,EAAOq4B,EAAMr4B,KACbu4B,EAA8B,WAAjB5jC,EAAQsmB,KAC3B,IAAIjkB,EAAGmL,EAAMG,EAAck2B,EAC3B,GAAc,OAAVpjC,EAAJ,CAGA,IAAK4B,EAAI,EAAGmL,EAAOnC,EAAK/I,OAAQD,EAAImL,IAAQnL,EAAG,CAE7C,GADAsL,GAAgBtC,EAAKhJ,GACjBsL,IAAiBg2B,EAAS,CAC5B,GAAI3jC,EAAQgjC,IACV,SAEF,MAEFa,EAAaH,EAAM1e,OAAOrX,GACtBpB,GAAes3B,KAAgBD,GAAyB,IAAVnjC,GAAeoP,GAAKpP,KAAWoP,GAAKg0B,MACpFpjC,GAASojC,GAGb,OAAOpjC,GAeT,SAASqjC,GAAUhd,EAAOid,GACxB,MAAMC,EAAUld,GAASA,EAAM9mB,QAAQgkC,QACvC,OAAOA,QAAwB7e,IAAZ6e,QAAwC7e,IAAf4e,EAAKL,MAYnD,SAASO,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,IAEzD,SAASE,GAAoBZ,EAAOa,EAAQC,GAC1C,IAAK,MAAMT,KAAQQ,EAAOE,wBAAwB,OAAOt3B,UAAW,CAClE,MAAM1M,EAAQijC,EAAMK,EAAK/4B,OACzB,GAAKw5B,GAAY/jC,EAAQ,IAAQ+jC,GAAY/jC,EAAQ,EACnD,OAAOsjC,EAAK/4B,MAGhB,OAAO,KAET,SAAS05B,GAAaC,EAAYC,GAChC,MAAMpf,MAACA,EAAOqf,YAAad,GAAQY,EAC7BT,EAAS1e,EAAMsf,UAAYtf,EAAMsf,QAAU,KAC3CC,OAACA,EAAMR,OAAEA,EAAQv5B,MAAO2C,GAAgBo2B,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfjkC,EA7BR,SAAqBmkC,EAAYC,EAAYrB,GAC3C,MAAO,GAAGoB,EAAWl5B,MAAMm5B,EAAWn5B,MAAM83B,EAAKL,OAASK,EAAKx/B,OA4BnD8gC,CAAYN,EAAQR,EAAQR,GAClCv2B,EAAOo3B,EAAOtiC,OACpB,IAAIohC,EACJ,IAAK,IAAIrhC,EAAI,EAAGA,EAAImL,IAAQnL,EAAG,CAC7B,MAAM0wB,EAAO6R,EAAOviC,IACbqG,CAACs8B,GAAQh6B,EAAOtC,CAACw8B,GAAQzkC,GAASsyB,EAEzC2Q,GADmB3Q,EAAK+R,UAAY/R,EAAK+R,QAAU,KAChCI,GAASjB,GAAiBC,EAAQljC,EAAKgK,GAC1D04B,EAAM/1B,GAAgBlN,EACtBijC,EAAM4B,KAAOhB,GAAoBZ,EAAOa,GAAQ,GAChDb,EAAM6B,QAAUjB,GAAoBZ,EAAOa,GAAQ,IAGvD,SAASiB,GAAgBhgB,EAAOyf,GAC9B,MAAMle,EAASvB,EAAMuB,OACrB,OAAO1qB,OAAOgP,KAAK0b,GAAQzjB,QAAOtC,GAAO+lB,EAAO/lB,GAAKikC,OAASA,IAAMQ,QA0BtE,SAASC,GAAY3B,EAAM7T,GACzB,MAAMviB,EAAeo2B,EAAKY,WAAW35B,MAC/Bi6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAGA/U,EAAQA,GAAS6T,EAAK4B,QACtB,IAAK,MAAMf,KAAU1U,EAAO,CAC1B,MAAMgU,EAASU,EAAOE,QACtB,IAAKZ,QAA2B/e,IAAjB+e,EAAOe,SAAsD9f,IAA/B+e,EAAOe,GAAMt3B,GACxD,cAEKu2B,EAAOe,GAAMt3B,KAGxB,MAAMi4B,GAAsBtf,GAAkB,UAATA,GAA6B,SAATA,EACnDuf,GAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASzpC,OAAO2mB,OAAO,GAAI8iB,GACjF,MAAME,GACJt9B,YAAY8c,EAAO7X,GACjBrN,KAAKklB,MAAQA,EACbllB,KAAK2lC,KAAOzgB,EAAM5f,IAClBtF,KAAK0K,MAAQ2C,EACbrN,KAAK4lC,gBAAkB,GACvB5lC,KAAKukC,YAAcvkC,KAAK6lC,UACxB7lC,KAAK8lC,MAAQ9lC,KAAKukC,YAAYtgC,KAC9BjE,KAAKN,aAAUmlB,EACf7kB,KAAK+lC,UAAW,EAChB/lC,KAAKgmC,WAAQnhB,EACb7kB,KAAKimC,iBAAcphB,EACnB7kB,KAAKkmC,oBAAiBrhB,EACtB7kB,KAAKmmC,gBAAathB,EAClB7kB,KAAKomC,gBAAavhB,EAClB7kB,KAAKqmC,qBAAsB,EAC3BrmC,KAAKsmC,cAAWzhB,EAChB7kB,KAAKumC,UAAY,GACjBvmC,KAAKwmC,aAEPp+B,aACE,MAAMkb,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YAChBjhB,EAAG0e,YACH1e,EAAGmjB,aACHhD,EAAKiD,SAAWlD,GAAUC,EAAKQ,OAAQR,GACvCngB,EAAGqjB,cAELv+B,YAAYiF,GACNrN,KAAK0K,QAAU2C,GACjB+3B,GAAYplC,KAAKukC,aAEnBvkC,KAAK0K,MAAQ2C,EAEfjF,aACE,MAAMkb,EAAKtjB,KACLklB,EAAQ5B,EAAG4B,MACXue,EAAOngB,EAAGihB,YACVqC,EAAUtjB,EAAGujB,aACbC,EAAW,CAACnC,EAAMhpC,EAAGyU,EAAG9J,IAAe,MAATq+B,EAAehpC,EAAa,MAATgpC,EAAer+B,EAAI8J,EACpE22B,EAAMtD,EAAKuD,QAAU16B,GAAes6B,EAAQI,QAAS9B,GAAgBhgB,EAAO,MAC5E+hB,EAAMxD,EAAKyD,QAAU56B,GAAes6B,EAAQM,QAAShC,GAAgBhgB,EAAO,MAC5EiiB,EAAM1D,EAAK2D,QAAU96B,GAAes6B,EAAQQ,QAASlC,GAAgBhgB,EAAO,MAC5EY,EAAY2d,EAAK3d,UACjBuhB,EAAM5D,EAAK6D,QAAUR,EAAShhB,EAAWihB,EAAKE,EAAKE,GACnDI,EAAM9D,EAAK+D,QAAUV,EAAShhB,EAAWmhB,EAAKF,EAAKI,GACzD1D,EAAKgE,OAASnkB,EAAGokB,cAAcX,GAC/BtD,EAAKkE,OAASrkB,EAAGokB,cAAcT,GAC/BxD,EAAKmE,OAAStkB,EAAGokB,cAAcP,GAC/B1D,EAAKgB,OAASnhB,EAAGokB,cAAcL,GAC/B5D,EAAKQ,OAAS3gB,EAAGokB,cAAcH,GAEjCn/B,aACE,OAAOpI,KAAKklB,MAAM9lB,KAAK4lB,SAAShlB,KAAK0K,OAEvCtC,UACE,OAAOpI,KAAKklB,MAAM2iB,eAAe7nC,KAAK0K,OAExCtC,cAAc0/B,GACZ,OAAO9nC,KAAKklB,MAAMuB,OAAOqhB,GAE3B1/B,eAAeoe,GACb,MAAMid,EAAOzjC,KAAKukC,YAClB,OAAO/d,IAAUid,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,OAEXr8B,QACEpI,KAAKy+B,QAAQ,SAEfr2B,WACE,MAAMq7B,EAAOzjC,KAAKukC,YACdvkC,KAAKgmC,OACP1W,GAAoBtvB,KAAKgmC,MAAOhmC,MAE9ByjC,EAAKiD,UACPtB,GAAY3B,GAGhBr7B,aACE,MAAMkb,EAAKtjB,KACL4mC,EAAUtjB,EAAGujB,aACbznC,EAAOwnC,EAAQxnC,OAASwnC,EAAQxnC,KAAO,IACvC4mC,EAAQ1iB,EAAG0iB,MACjB,GAAIh6B,GAAS5M,GACXkkB,EAAG0iB,MA7LT,SAAkC5mC,GAChC,MAAM2L,EAAOhP,OAAOgP,KAAK3L,GACnB2oC,EAAQ,IAAI59B,MAAMY,EAAK/I,QAC7B,IAAID,EAAGmL,EAAMxM,EACb,IAAKqB,EAAI,EAAGmL,EAAOnC,EAAK/I,OAAQD,EAAImL,IAAQnL,EAC1CrB,EAAMqK,EAAKhJ,GACXgmC,EAAMhmC,GAAK,CACTpG,EAAG+E,EACH0P,EAAGhR,EAAKsB,IAGZ,OAAOqnC,EAkLQC,CAAyB5oC,QAC/B,GAAI4mC,IAAU5mC,EAAM,CACzB,GAAI4mC,EAAO,CACT1W,GAAoB0W,EAAO1iB,GAC3B,MAAMmgB,EAAOngB,EAAGihB,YAChBa,GAAY3B,GACZA,EAAK4B,QAAU,GAEbjmC,GAAQrD,OAAOksC,aAAa7oC,KDyzBJmwB,ECxzBFjM,GDwzBL/S,ECxzBDnR,GDyzBdqwB,SACRlf,EAAMkf,SAASC,UAAU5rB,KAAKyrB,IAGhCxzB,OAAOmsC,eAAe33B,EAAO,WAAY,CACvCuiB,cAAc,EACd3L,YAAY,EACZhnB,MAAO,CACLuvB,UAAW,CAACH,MAGhBF,GAAYlzB,SAASuE,IACnB,MAAMygC,EAAS,UAAY3yB,GAAY9N,GACjCynC,EAAO53B,EAAM7P,GACnB3E,OAAOmsC,eAAe33B,EAAO7P,EAAK,CAChCoyB,cAAc,EACd3L,YAAY,EACZ/e,SAASiD,GACP,MAAM21B,EAAMmH,EAAK38B,MAAMxL,KAAMqL,GAM7B,OALAkF,EAAMkf,SAASC,UAAUvzB,SAASisC,IACF,mBAAnBA,EAAOjH,IAChBiH,EAAOjH,MAAW91B,MAGf21B,UC/0BT1d,EAAGijB,UAAY,GACfjjB,EAAG0iB,MAAQ5mC,EDqzBjB,IAA2BmR,EAAOgf,EClzBhCnnB,cACE,MAAMkb,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YAChBjhB,EAAG+kB,aACC/kB,EAAGglB,qBACL7E,EAAKmD,QAAU,IAAItjB,EAAGglB,oBAG1BlgC,sBAAsBmgC,GACpB,MAAMjlB,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVqC,EAAUtjB,EAAGujB,aACnB,IAAI2B,GAAe,EACnBllB,EAAG+kB,aACH,MAAMI,EAAahF,EAAKiD,SACxBjD,EAAKiD,SAAWlD,GAAUC,EAAKQ,OAAQR,GACnCA,EAAKL,QAAUwD,EAAQxD,QACzBoF,GAAe,EACfpD,GAAY3B,GACZA,EAAKL,MAAQwD,EAAQxD,OAEvB9f,EAAGolB,gBAAgBH,IACfC,GAAgBC,IAAehF,EAAKiD,WACtCtC,GAAa9gB,EAAImgB,EAAK4B,SAG1Bj9B,YACE,MAAMkb,EAAKtjB,KACLkH,EAASoc,EAAG4B,MAAMhe,OAClByhC,EAAYzhC,EAAO0hC,iBAAiBtlB,EAAGwiB,OACvChW,EAAS5oB,EAAO2hC,gBAAgBvlB,EAAGujB,aAAc8B,GAAW,GAClErlB,EAAG5jB,QAAUwH,EAAO4hC,eAAehZ,EAAQxM,EAAGwF,cAC9CxF,EAAGyiB,SAAWziB,EAAG5jB,QAAQ2mB,QAE3Bje,MAAMT,EAAOw0B,GACX,MAAM7Y,EAAKtjB,MACJukC,YAAad,EAAMuC,MAAO5mC,GAAQkkB,GACnCmhB,OAACA,EAAMiC,SAAEA,GAAYjD,EACrBiB,EAAQD,EAAOE,KACrB,IAEI5iC,EAAGw9B,EAAK+E,EAFRyE,EAAmB,IAAVphC,GAAew0B,IAAU/8B,EAAK4C,QAAgByhC,EAAKuF,QAC5D5S,EAAOzuB,EAAQ,GAAK87B,EAAK4B,QAAQ19B,EAAQ,GAE7C,IAAoB,IAAhB2b,EAAGyiB,SACLtC,EAAK4B,QAAUjmC,EACfqkC,EAAKuF,SAAU,EACf1E,EAASllC,MACJ,CAEHklC,EADEz4B,GAAQzM,EAAKuI,IACN2b,EAAG2lB,eAAexF,EAAMrkC,EAAMuI,EAAOw0B,GACrCnwB,GAAS5M,EAAKuI,IACd2b,EAAG4lB,gBAAgBzF,EAAMrkC,EAAMuI,EAAOw0B,GAEtC7Y,EAAG6lB,mBAAmB1F,EAAMrkC,EAAMuI,EAAOw0B,GAEpD,MAAMiN,EAA6B,IAAqB,OAAf7J,EAAImF,IAAoBtO,GAAQmJ,EAAImF,GAAStO,EAAKsO,GAC3F,IAAK3iC,EAAI,EAAGA,EAAIo6B,IAASp6B,EACvB0hC,EAAK4B,QAAQtjC,EAAI4F,GAAS43B,EAAM+E,EAAOviC,GACnCgnC,IACEK,MACFL,GAAS,GAEX3S,EAAOmJ,GAGXkE,EAAKuF,QAAUD,EAEbrC,GACFtC,GAAa9gB,EAAIghB,GAGrBl8B,mBAAmBq7B,EAAMrkC,EAAMuI,EAAOw0B,GACpC,MAAMsI,OAACA,EAAMR,OAAEA,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf0E,EAAS5E,EAAO6E,YAChBC,EAAc9E,IAAWR,EACzBK,EAAS,IAAIn6B,MAAMgyB,GACzB,IAAIp6B,EAAGmL,EAAMxC,EACb,IAAK3I,EAAI,EAAGmL,EAAOivB,EAAOp6B,EAAImL,IAAQnL,EACpC2I,EAAQ3I,EAAI4F,EACZ28B,EAAOviC,GAAK,CACVqG,CAACs8B,GAAQ6E,GAAe9E,EAAO+E,MAAMH,EAAO3+B,GAAQA,GACpDtC,CAACw8B,GAAQX,EAAOuF,MAAMpqC,EAAKsL,GAAQA,IAGvC,OAAO45B,EAETl8B,eAAeq7B,EAAMrkC,EAAMuI,EAAOw0B,GAChC,MAAMsL,OAACA,EAAME,OAAEA,GAAUlE,EACnBa,EAAS,IAAIn6B,MAAMgyB,GACzB,IAAIp6B,EAAGmL,EAAMxC,EAAO+nB,EACpB,IAAK1wB,EAAI,EAAGmL,EAAOivB,EAAOp6B,EAAImL,IAAQnL,EACpC2I,EAAQ3I,EAAI4F,EACZ8qB,EAAOrzB,EAAKsL,GACZ45B,EAAOviC,GAAK,CACVpG,EAAG8rC,EAAO+B,MAAM/W,EAAK,GAAI/nB,GACzB0F,EAAGu3B,EAAO6B,MAAM/W,EAAK,GAAI/nB,IAG7B,OAAO45B,EAETl8B,gBAAgBq7B,EAAMrkC,EAAMuI,EAAOw0B,GACjC,MAAMsL,OAACA,EAAME,OAAEA,GAAUlE,GACnBgG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1pC,KAAK+lC,SACxCzB,EAAS,IAAIn6B,MAAMgyB,GACzB,IAAIp6B,EAAGmL,EAAMxC,EAAO+nB,EACpB,IAAK1wB,EAAI,EAAGmL,EAAOivB,EAAOp6B,EAAImL,IAAQnL,EACpC2I,EAAQ3I,EAAI4F,EACZ8qB,EAAOrzB,EAAKsL,GACZ45B,EAAOviC,GAAK,CACVpG,EAAG8rC,EAAO+B,MAAMl7B,GAAiBmkB,EAAMgX,GAAW/+B,GAClD0F,EAAGu3B,EAAO6B,MAAMl7B,GAAiBmkB,EAAMiX,GAAWh/B,IAGtD,OAAO45B,EAETl8B,UAAUsC,GACR,OAAO1K,KAAKukC,YAAYc,QAAQ36B,GAElCtC,eAAesC,GACb,OAAO1K,KAAKukC,YAAYnlC,KAAKsL,GAE/BtC,WAAWoe,EAAO8d,EAAQte,GACxB,MAAMd,EAAQllB,KAAKklB,MACbue,EAAOzjC,KAAKukC,YACZpkC,EAAQmkC,EAAO9d,EAAMme,MAK3B,OAAOxB,GAJO,CACZp4B,KAAMg4B,GAAwB7d,GAAO,GACrCR,OAAQ4f,EAAOE,QAAQhe,EAAMme,OAENxkC,EAAOsjC,EAAK/4B,MAAO,CAACsb,KAAAA,IAE/C5d,sBAAsBqH,EAAO+W,EAAO8d,EAAQlB,GAC1C,MAAMuG,EAAcrF,EAAO9d,EAAMme,MACjC,IAAIxkC,EAAwB,OAAhBwpC,EAAuBC,IAAMD,EACzC,MAAMjlB,EAAS0e,GAASkB,EAAOE,QAAQhe,EAAMme,MACzCvB,GAAS1e,IACX0e,EAAM1e,OAASA,EACfjV,EAAMgB,IAAMhJ,KAAKgJ,IAAIhB,EAAMgB,IAAKtQ,GAChCsP,EAAMiB,IAAMjJ,KAAKiJ,IAAIjB,EAAMiB,IAAKvQ,GAChCA,EAAQgjC,GAAWC,EAAOuG,EAAa3pC,KAAKukC,YAAY75B,MAAO,CAACg4B,KAAK,KAEvEjzB,EAAMgB,IAAMhJ,KAAKgJ,IAAIhB,EAAMgB,IAAKtQ,GAChCsP,EAAMiB,IAAMjJ,KAAKiJ,IAAIjB,EAAMiB,IAAKvQ,GAElCiI,UAAUoe,EAAOqjB,GACf,MAAMvmB,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVc,EAAU5B,EAAK4B,QACf0D,EAAStF,EAAKuF,SAAWxiB,IAAUid,EAAKgB,OACxCv3B,EAAOm4B,EAAQrjC,OACf8nC,EAAaxmB,EAAGymB,eAAevjB,GAC/B4c,EAAQyG,GAAYpG,EAAKiD,UAAY,CAAC37B,KAAMg4B,GAAwBzf,EAAG4B,OAAO,GAAOR,OAAQ,MAC7FjV,EAAQ,CAACgB,IAAKvE,OAAO+C,kBAAmByB,IAAKxE,OAAO89B,oBACnDv5B,IAAKw5B,EAAUv5B,IAAKw5B,GAlV/B,SAAuB1jB,GACrB,MAAM/V,IAACA,EAAGC,IAAEA,EAAGy5B,WAAEA,EAAUC,WAAEA,GAAc5jB,EAAM6jB,gBACjD,MAAO,CACL55B,IAAK05B,EAAa15B,EAAMvE,OAAO89B,kBAC/Bt5B,IAAK05B,EAAa15B,EAAMxE,OAAO+C,mBA8UQo7B,CAAcP,GACrD,IAAI/nC,EAAG5B,EAAOmkC,EAAQf,EACtB,SAAS+G,IAIP,OAHAhG,EAASe,EAAQtjC,GACjB5B,EAAQmkC,EAAO9d,EAAMme,MACrBpB,EAAae,EAAOwF,EAAWnF,OACvB14B,GAAe9L,IAAU8pC,EAAW1G,GAAc2G,EAAW3G,EAEvE,IAAKxhC,EAAI,EAAGA,EAAImL,IACVo9B,MAGJhnB,EAAGinB,sBAAsB96B,EAAO+W,EAAO8d,EAAQlB,IAC3C2F,MALkBhnC,GASxB,GAAIgnC,EACF,IAAKhnC,EAAImL,EAAO,EAAGnL,GAAK,IAAKA,EAC3B,IAAIuoC,IAAJ,CAGAhnB,EAAGinB,sBAAsB96B,EAAO+W,EAAO8d,EAAQlB,GAC/C,MAGJ,OAAO3zB,EAETrH,mBAAmBoe,GACjB,MAAM8d,EAAStkC,KAAKukC,YAAYc,QAC1B3gB,EAAS,GACf,IAAI3iB,EAAGmL,EAAM/M,EACb,IAAK4B,EAAI,EAAGmL,EAAOo3B,EAAOtiC,OAAQD,EAAImL,IAAQnL,EAC5C5B,EAAQmkC,EAAOviC,GAAGykB,EAAMme,MACpB14B,GAAe9L,IACjBukB,EAAO5gB,KAAK3D,GAGhB,OAAOukB,EAETtc,iBACE,OAAO,EAETA,iBAAiBsC,GACf,MACM+4B,EADKzjC,KACKukC,YACVE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAJKtkC,KAIOwqC,UAAU9/B,GAC5B,MAAO,CACL+/B,MAAOhG,EAAS,GAAKA,EAAOiG,iBAAiBpG,EAAOG,EAAOE,OAAS,GACpExkC,MAAO8jC,EAAS,GAAKA,EAAOyG,iBAAiBpG,EAAOL,EAAOU,OAAS,IAGxEv8B,QAAQ4d,GACN,MAAM1C,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YAChBjhB,EAAG0e,YACH1e,EAAGsiB,gBAAkB,GACrBtiB,EAAGve,OAAOihB,GAAQ,WAClByd,EAAKkH,MAndT,SAAgBxqC,GACd,IAAIwB,EAAG2E,EAAG9J,EAAG+N,EASb,OARIyB,GAAS7L,IACXwB,EAAIxB,EAAMwqB,IACVrkB,EAAInG,EAAMuqB,MACVluB,EAAI2D,EAAMyqB,OACVrgB,EAAIpK,EAAMsqB,MAEV9oB,EAAI2E,EAAI9J,EAAI+N,EAAIpK,EAEX,CACLwqB,IAAKhpB,EACL+oB,MAAOpkB,EACPskB,OAAQpuB,EACRiuB,KAAMlgB,EACNqgC,UAAoB,IAAVzqC,GAocG0qC,CAAOv+B,GAAegX,EAAG5jB,QAAQorB,KAhelD,SAAqB2c,EAAQE,EAAQ7E,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMnnC,EAAIknC,GAAU4E,EAAQ3E,GACtB1yB,EAAIyyB,GAAU8E,EAAQ7E,GAC5B,MAAO,CACLnY,IAAKva,EAAExI,IACP8iB,MAAO/uB,EAAEiM,IACTgjB,OAAQxa,EAAEzI,MACV8iB,KAAM9uB,EAAEgM,OAsd4CmjC,CAAYrH,EAAKgE,OAAQhE,EAAKkE,OAAQrkB,EAAGynB,oBAE/F3iC,OAAO4d,IACP5d,OACE,MAAMkb,EAAKtjB,KACLsF,EAAMge,EAAGqiB,KACTzgB,EAAQ5B,EAAG4B,MACXue,EAAOngB,EAAGihB,YACVlf,EAAWoe,EAAKrkC,MAAQ,GACxBmrB,EAAOrF,EAAM8lB,UACb9pC,EAAS,GACTyG,EAAQ2b,EAAG6iB,YAAc,EACzBhK,EAAQ7Y,EAAG8iB,YAAe/gB,EAASrjB,OAAS2F,EAClD,IAAI5F,EAIJ,IAHI0hC,EAAKmD,SACPnD,EAAKmD,QAAQ/H,KAAKv5B,EAAKilB,EAAM5iB,EAAOw0B,GAEjCp6B,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,IAASp6B,EAAG,CACtC,MAAM1D,EAAUgnB,EAAStjB,GACrB1D,EAAQ4sC,SAGR5sC,EAAQ6C,OACVA,EAAO4C,KAAKzF,GAEZA,EAAQwgC,KAAKv5B,EAAKilB,IAGtB,IAAKxoB,EAAI,EAAGA,EAAIb,EAAOc,SAAUD,EAC/Bb,EAAOa,GAAG88B,KAAKv5B,EAAKilB,GAGxBniB,SAASsC,EAAOxJ,GACd,MAAM8kB,EAAO9kB,EAAS,SAAW,UACjC,YAAiB2jB,IAAVna,GAAuB1K,KAAKukC,YAAYqC,QAC3C5mC,KAAKkrC,6BAA6BllB,GAClChmB,KAAKmrC,0BAA0BzgC,GAAS,EAAGsb,GAEjD5d,WAAWsC,EAAOxJ,EAAQ8kB,GACxB,MAAM1C,EAAKtjB,KACL4mC,EAAUtjB,EAAGujB,aACnB,IAAIl9B,EACJ,GAAIe,GAAS,GAAKA,EAAQ4Y,EAAGihB,YAAYnlC,KAAK4C,OAAQ,CACpD,MAAM3D,EAAUilB,EAAGihB,YAAYnlC,KAAKsL,GACpCf,EAAUtL,EAAQioC,WACfjoC,EAAQioC,SApYjB,SAA2BlT,EAAQ1oB,EAAOrM,GACxC,OAAOtC,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GAAS,CAC1ClyB,QAAQ,EACRkqC,UAAW1gC,EACX45B,YAAQzf,EACRwmB,SAAKxmB,EACLxmB,QAAAA,EACAqM,MAAAA,EACAsb,KAAM,UACN/hB,KAAM,SA2XkBqnC,CAAkBhoB,EAAGwF,aAAcpe,EAAOrM,IAChEsL,EAAQ26B,OAAShhB,EAAGknB,UAAU9/B,GAC9Bf,EAAQ0hC,IAAMzE,EAAQxnC,KAAKsL,GAC3Bf,EAAQe,MAAQf,EAAQyhC,UAAY1gC,OAEpCf,EAAU2Z,EAAGgjB,WACVhjB,EAAGgjB,SAtZZ,SAA8BlT,EAAQ1oB,GACpC,OAAO3O,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GACjC,CACElyB,QAAQ,EACR0lC,aAAS/hB,EACTxX,aAAc3C,EACdA,MAAAA,EACAsb,KAAM,UACN/hB,KAAM,YA8YWsnC,CAAqBjoB,EAAG4B,MAAM4D,aAAcxF,EAAG5Y,QAChEf,EAAQi9B,QAAUA,EAClBj9B,EAAQe,MAAQf,EAAQ0D,aAAeiW,EAAG5Y,MAI5C,OAFAf,EAAQzI,SAAWA,EACnByI,EAAQqc,KAAOA,EACRrc,EAETvB,6BAA6B4d,GAC3B,OAAOhmB,KAAKwrC,uBAAuBxrC,KAAKsoC,mBAAmB38B,GAAIqa,GAEjE5d,0BAA0BsC,EAAOsb,GAC/B,OAAOhmB,KAAKwrC,uBAAuBxrC,KAAKyrC,gBAAgB9/B,GAAIqa,EAAMtb,GAEpEtC,uBAAuBsjC,EAAa1lB,EAAO,UAAWtb,GACpD,MAAM4Y,EAAKtjB,KACLkB,EAAkB,WAAT8kB,EACTiC,EAAQ3E,EAAGsiB,gBACX9K,EAAW4Q,EAAc,IAAM1lB,EAC/Bwf,EAASvd,EAAM6S,GACf6Q,EAAUroB,EAAG+iB,qBAAuB13B,GAAQjE,GAClD,GAAI86B,EACF,OAAOD,GAAiBC,EAAQmG,GAElC,MAAMzkC,EAASoc,EAAG4B,MAAMhe,OAClByhC,EAAYzhC,EAAO0kC,wBAAwBtoB,EAAGwiB,MAAO4F,GACrD3b,EAAW7uB,EAAS,CAAC,GAAGwqC,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtF5b,EAAS5oB,EAAO2hC,gBAAgBvlB,EAAGujB,aAAc8B,GACjDvwB,EAAQrc,OAAOgP,KAAK4Z,GAASU,SAASqmB,IAEtChnB,EAASxd,EAAO2kC,oBAAoB/b,EAAQ1X,GADlC,IAAMkL,EAAGwF,WAAWpe,EAAOxJ,IACuB6uB,GAKlE,OAJIrL,EAAO2d,UACT3d,EAAO2d,QAAUsJ,EACjB1jB,EAAM6S,GAAY/+B,OAAO+vC,OAAOvG,GAAiB7gB,EAAQinB,KAEpDjnB,EAETtc,mBAAmBsC,EAAOqhC,EAAY7qC,GACpC,MAAMoiB,EAAKtjB,KACLklB,EAAQ5B,EAAG4B,MACX+C,EAAQ3E,EAAGsiB,gBACX9K,EAAW,aAAaiR,IACxBvG,EAASvd,EAAM6S,GACrB,GAAI0K,EACF,OAAOA,EAET,IAAI9lC,EACJ,IAAgC,IAA5BwlB,EAAMxlB,QAAQiD,UAAqB,CACrC,MAAMuE,EAASoc,EAAG4B,MAAMhe,OAClByhC,EAAYzhC,EAAO8kC,0BAA0B1oB,EAAGwiB,MAAOiG,GACvDjc,EAAS5oB,EAAO2hC,gBAAgBvlB,EAAGujB,aAAc8B,GACvDjpC,EAAUwH,EAAO4hC,eAAehZ,EAAQxM,EAAGwF,WAAWpe,EAAOxJ,EAAQ6qC,IAEvE,MAAMrK,EAAa,IAAIG,GAAW3c,EAAOxlB,GAAWA,EAAQgiC,YAI5D,OAHIhiC,GAAWA,EAAQ2wB,aACrBpI,EAAM6S,GAAY/+B,OAAO+vC,OAAOpK,IAE3BA,EAETt5B,iBAAiB1I,GACf,GAAKA,EAAQ2iC,QAGb,OAAOriC,KAAKkmC,iBAAmBlmC,KAAKkmC,eAAiBnqC,OAAO2mB,OAAO,GAAIhjB,IAEzE0I,eAAe4d,EAAMimB,GACnB,OAAQA,GAAiB3G,GAAmBtf,IAAShmB,KAAKklB,MAAMgnB,oBAElE9jC,cAAc/J,EAASqM,EAAO42B,EAAYtb,GACpCsf,GAAmBtf,GACrBjqB,OAAO2mB,OAAOrkB,EAASijC,GAEvBthC,KAAKmsC,mBAAmBzhC,EAAOsb,GAAMjhB,OAAO1G,EAASijC,GAGzDl5B,oBAAoB6jC,EAAejmB,EAAMoc,GACnC6J,IAAkB3G,GAAmBtf,IACvChmB,KAAKmsC,wBAAmBtnB,EAAWmB,GAAMjhB,OAAOknC,EAAe7J,GAGnEh6B,UAAU/J,EAASqM,EAAOsb,EAAM9kB,GAC9B7C,EAAQ6C,OAASA,EACjB,MAAMxB,EAAUM,KAAKo6B,SAAS1vB,EAAOxJ,GACrClB,KAAKmsC,mBAAmBzhC,EAAOsb,EAAM9kB,GAAQ6D,OAAO1G,EAAS,CAC3DqB,SAAWwB,GAAUlB,KAAKosC,iBAAiB1sC,IAAaA,IAG5D0I,iBAAiB/J,EAASgP,EAAc3C,GACtC1K,KAAKqsC,UAAUhuC,EAASqM,EAAO,UAAU,GAE3CtC,cAAc/J,EAASgP,EAAc3C,GACnC1K,KAAKqsC,UAAUhuC,EAASqM,EAAO,UAAU,GAE3CtC,2BACE,MAAM/J,EAAU2B,KAAKukC,YAAYqC,QAC7BvoC,GACF2B,KAAKqsC,UAAUhuC,OAASwmB,EAAW,UAAU,GAGjDzc,wBACE,MAAM/J,EAAU2B,KAAKukC,YAAYqC,QAC7BvoC,GACF2B,KAAKqsC,UAAUhuC,OAASwmB,EAAW,UAAU,GAGjDzc,gBAAgBmgC,GACd,MAAMjlB,EAAKtjB,KACLZ,EAAOkkB,EAAG0iB,MACV3gB,EAAW/B,EAAGihB,YAAYnlC,KAChC,IAAK,MAAO+hC,EAAQmL,EAAMC,KAASjpB,EAAGijB,UACpCjjB,EAAG6d,GAAQmL,EAAMC,GAEnBjpB,EAAGijB,UAAY,GACf,MAAMiG,EAAUnnB,EAASrjB,OACnByqC,EAAUrtC,EAAK4C,OACfm6B,EAAQ10B,KAAKgJ,IAAIg8B,EAASD,GAC5BrQ,GACF7Y,EAAGkmB,MAAM,EAAGrN,GAEVsQ,EAAUD,EACZlpB,EAAGopB,gBAAgBF,EAASC,EAAUD,EAASjE,GACtCkE,EAAUD,GACnBlpB,EAAGqpB,gBAAgBF,EAASD,EAAUC,GAG1CrkC,gBAAgBT,EAAOw0B,EAAOoM,GAAmB,GAC/C,MAAMjlB,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVnlC,EAAOqkC,EAAKrkC,KACZwI,EAAMD,EAAQw0B,EACpB,IAAIp6B,EACJ,MAAM6qC,EAAQpa,IAEZ,IADAA,EAAIxwB,QAAUm6B,EACTp6B,EAAIywB,EAAIxwB,OAAS,EAAGD,GAAK6F,EAAK7F,IACjCywB,EAAIzwB,GAAKywB,EAAIzwB,EAAIo6B,IAIrB,IADAyQ,EAAKxtC,GACA2C,EAAI4F,EAAO5F,EAAI6F,IAAO7F,EACzB3C,EAAK2C,GAAK,IAAIuhB,EAAGmoB,gBAEfnoB,EAAGyiB,UACL6G,EAAKnJ,EAAK4B,SAEZ/hB,EAAGkmB,MAAM7hC,EAAOw0B,GACZoM,GACFjlB,EAAGupB,eAAeztC,EAAMuI,EAAOw0B,EAAO,SAG1C/zB,eAAe/J,EAASsJ,EAAOw0B,EAAOnW,IACtC5d,gBAAgBT,EAAOw0B,GACrB,MACMsH,EADKzjC,KACKukC,YAChB,GAFWvkC,KAEJ+lC,SAAU,CACf,MAAM+G,EAAUrJ,EAAK4B,QAAQ16B,OAAOhD,EAAOw0B,GACvCsH,EAAKiD,UACPtB,GAAY3B,EAAMqJ,GAGtBrJ,EAAKrkC,KAAKuL,OAAOhD,EAAOw0B,GAE1B/zB,MAAMiD,GACJ,GAAIrL,KAAK+lC,SACP/lC,KAAKumC,UAAUziC,KAAKuH,OACf,CACL,MAAO81B,EAAQmL,EAAMC,GAAQlhC,EAC7BrL,KAAKmhC,GAAQmL,EAAMC,IAGvBnkC,cACE,MAAM+zB,EAAQ4Q,UAAU/qC,OACxBhC,KAAKgtC,MAAM,CAAC,kBAAmBhtC,KAAK6mC,aAAaznC,KAAK4C,OAASm6B,EAAOA,IAExE/zB,aACEpI,KAAKgtC,MAAM,CAAC,kBAAmBhtC,KAAKukC,YAAYnlC,KAAK4C,OAAS,EAAG,IAEnEoG,eACEpI,KAAKgtC,MAAM,CAAC,kBAAmB,EAAG,IAEpC5kC,cAAcT,EAAOw0B,GACnBn8B,KAAKgtC,MAAM,CAAC,kBAAmBrlC,EAAOw0B,IACtCn8B,KAAKgtC,MAAM,CAAC,kBAAmBrlC,EAAOolC,UAAU/qC,OAAS,IAE3DoG,iBACEpI,KAAKgtC,MAAM,CAAC,kBAAmB,EAAGD,UAAU/qC,UAkBhD,SAASirC,GAAqBzmB,GAC5B,MAAM9B,EAZR,SAA2B8B,GACzB,IAAKA,EAAM0mB,OAAOC,KAAM,CACtB,MAAMC,EAAQ5mB,EAAM2d,wBAAwB,OAC5C,IAAIzf,EAAS,GACb,IAAK,IAAI3iB,EAAI,EAAGmL,EAAOkgC,EAAMprC,OAAQD,EAAImL,EAAMnL,IAC7C2iB,EAASA,EAAO2oB,OAAOD,EAAMrrC,GAAGsiC,WAAWiJ,mBAAmB9mB,IAEhEA,EAAM0mB,OAAOC,KAAOxd,GAAajL,EAAO6oB,MAAK,CAAChxC,EAAGC,IAAMD,EAAIC,KAE7D,OAAOgqB,EAAM0mB,OAAOC,KAGLK,CAAkBhnB,GACjC,IACIzkB,EAAGmL,EAAMugC,EAAMrX,EADf3lB,EAAM+V,EAAMknB,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,IAGlB9+B,GAAQynB,KACV3lB,EAAMhJ,KAAKgJ,IAAIA,EAAKhJ,KAAKC,IAAI+lC,EAAOrX,IAAS3lB,IAE/C2lB,EAAOqX,IAET,IAAK1rC,EAAI,EAAGmL,EAAOwX,EAAO1iB,OAAQD,EAAImL,IAAQnL,EAC5C0rC,EAAOjnB,EAAMonB,iBAAiBlpB,EAAO3iB,IACrC4rC,IAGF,IADAvX,OAAOvR,EACF9iB,EAAI,EAAGmL,EAAOsZ,EAAMqnB,MAAM7rC,OAAQD,EAAImL,IAAQnL,EACjD0rC,EAAOjnB,EAAMsnB,gBAAgB/rC,GAC7B4rC,IAEF,OAAOl9B,EA2DT,SAASs9B,GAAWC,EAAOvb,EAAMwR,EAAQliC,GAMvC,OALI8J,GAAQmiC,GAtBd,SAAuBA,EAAOvb,EAAMwR,EAAQliC,GAC1C,MAAMksC,EAAahK,EAAOuF,MAAMwE,EAAM,GAAIjsC,GACpCmsC,EAAWjK,EAAOuF,MAAMwE,EAAM,GAAIjsC,GAClC0O,EAAMhJ,KAAKgJ,IAAIw9B,EAAYC,GAC3Bx9B,EAAMjJ,KAAKiJ,IAAIu9B,EAAYC,GACjC,IAAIC,EAAW19B,EACX29B,EAAS19B,EACTjJ,KAAKC,IAAI+I,GAAOhJ,KAAKC,IAAIgJ,KAC3By9B,EAAWz9B,EACX09B,EAAS39B,GAEXgiB,EAAKwR,EAAOU,MAAQyJ,EACpB3b,EAAK4b,QAAU,CACbF,SAAAA,EACAC,OAAAA,EACAzmC,MAAOsmC,EACPrmC,IAAKsmC,EACLz9B,IAAAA,EACAC,IAAAA,GAKA49B,CAAcN,EAAOvb,EAAMwR,EAAQliC,GAEnC0wB,EAAKwR,EAAOU,MAAQV,EAAOuF,MAAMwE,EAAOjsC,GAEnC0wB,EAET,SAAS8b,GAAsB9K,EAAMrkC,EAAMuI,EAAOw0B,GAChD,MAAMsI,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdoF,EAAS5E,EAAO6E,YAChBC,EAAc9E,IAAWR,EACzBK,EAAS,GACf,IAAIviC,EAAGmL,EAAMulB,EAAMub,EACnB,IAAKjsC,EAAI4F,EAAOuF,EAAOvF,EAAQw0B,EAAOp6B,EAAImL,IAAQnL,EAChDisC,EAAQ5uC,EAAK2C,GACb0wB,EAAO,GACPA,EAAKgS,EAAOE,MAAQ4E,GAAe9E,EAAO+E,MAAMH,EAAOtnC,GAAIA,GAC3DuiC,EAAOxgC,KAAKiqC,GAAWC,EAAOvb,EAAMwR,EAAQliC,IAE9C,OAAOuiC,EAET,SAASkK,GAAWC,GAClB,OAAOA,QAA8B5pB,IAApB4pB,EAAON,eAA4CtpB,IAAlB4pB,EAAOL,OA4B3D,SAASM,GAAiBpN,EAAY5hC,EAAS0jC,EAAO14B,GACpD,IAAIikC,EAAOjvC,EAAQkvC,cACnB,MAAM5N,EAAM,GACZ,IAAK2N,EAEH,YADArN,EAAWsN,cAAgB5N,GAG7B,MAAMr5B,MAACA,EAAKC,IAAEA,EAAGiF,QAAEA,EAAO8d,IAAEA,EAAGC,OAAEA,GA3BnC,SAAqB0W,GACnB,IAAIz0B,EAASlF,EAAOC,EAAK+iB,EAAKC,EAiB9B,OAhBI0W,EAAWuN,YACbhiC,EAAUy0B,EAAW6G,KAAO7G,EAAW3lC,EACvCgM,EAAQ,OACRC,EAAM,UAENiF,EAAUy0B,EAAW6G,KAAO7G,EAAWlxB,EACvCzI,EAAQ,SACRC,EAAM,OAEJiF,GACF8d,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEJ,CAACjjB,MAAAA,EAAOC,IAAAA,EAAKiF,QAAAA,EAAS8d,IAAAA,EAAKC,OAAAA,GASSkkB,CAAYxN,GAC1C,WAATqN,GAAqBvL,IACvB9B,EAAWyN,oBAAqB,GAC3B3L,EAAM4B,MAAQ,KAAOt6B,EACxBikC,EAAOhkB,GACGyY,EAAM6B,SAAW,KAAOv6B,EAClCikC,EAAO/jB,GAEPoW,EAAIgO,GAAUpkB,EAAQjjB,EAAOC,EAAKiF,KAAY,EAC9C8hC,EAAOhkB,IAGXqW,EAAIgO,GAAUL,EAAMhnC,EAAOC,EAAKiF,KAAY,EAC5Cy0B,EAAWsN,cAAgB5N,EAE7B,SAASgO,GAAUL,EAAMpyC,EAAGC,EAAGqQ,GAS/B,IAAcoiC,EAAM7hC,EAAI8hC,EAFtB,OANIriC,GAQkBqiC,EAPC1yC,EACrBmyC,EAAOQ,GADPR,GAOUM,EAPEN,MAOIvhC,EAPE7Q,GAQC2yC,EAAKD,IAASC,EAAK9hC,EAAK6hC,EAPrBzyC,EAAGD,IAEzBoyC,EAAOQ,GAASR,EAAMpyC,EAAGC,GAEpBmyC,EAKT,SAASQ,GAAS95B,EAAG1N,EAAOC,GAC1B,MAAa,UAANyN,EAAgB1N,EAAc,QAAN0N,EAAczN,EAAMyN,EAvLrDqwB,GAAkB/gB,SAAW,GAC7B+gB,GAAkBp6B,UAAUg9B,mBAAqB,KACjD5C,GAAkBp6B,UAAUmgC,gBAAkB,KAuL9C,MAAM2D,WAAsB1J,GAC1Bt9B,mBAAmBq7B,EAAMrkC,EAAMuI,EAAOw0B,GACpC,OAAOoS,GAAsB9K,EAAMrkC,EAAMuI,EAAOw0B,GAElD/zB,eAAeq7B,EAAMrkC,EAAMuI,EAAOw0B,GAChC,OAAOoS,GAAsB9K,EAAMrkC,EAAMuI,EAAOw0B,GAElD/zB,gBAAgBq7B,EAAMrkC,EAAMuI,EAAOw0B,GACjC,MAAMsI,OAACA,EAAMR,OAAEA,GAAUR,GACnBgG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1pC,KAAK+lC,SACxCsJ,EAA2B,MAAhB5K,EAAOE,KAAe8E,EAAWC,EAC5C4F,EAA2B,MAAhBrL,EAAOU,KAAe8E,EAAWC,EAC5CpF,EAAS,GACf,IAAIviC,EAAGmL,EAAMulB,EAAM5nB,EACnB,IAAK9I,EAAI4F,EAAOuF,EAAOvF,EAAQw0B,EAAOp6B,EAAImL,IAAQnL,EAChD8I,EAAMzL,EAAK2C,GACX0wB,EAAO,GACPA,EAAKgS,EAAOE,MAAQF,EAAO+E,MAAMl7B,GAAiBzD,EAAKwkC,GAAWttC,GAClEuiC,EAAOxgC,KAAKiqC,GAAWz/B,GAAiBzD,EAAKykC,GAAW7c,EAAMwR,EAAQliC,IAExE,OAAOuiC,EAETl8B,sBAAsBqH,EAAO+W,EAAO8d,EAAQlB,GAC1CmM,MAAMhF,sBAAsB96B,EAAO+W,EAAO8d,EAAQlB,GAClD,MAAMqL,EAASnK,EAAO+J,QAClBI,GAAUjoB,IAAUxmB,KAAKukC,YAAYN,SACvCx0B,EAAMgB,IAAMhJ,KAAKgJ,IAAIhB,EAAMgB,IAAKg+B,EAAOh+B,KACvChB,EAAMiB,IAAMjJ,KAAKiJ,IAAIjB,EAAMiB,IAAK+9B,EAAO/9B,MAG3CtI,iBACE,OAAO,EAETA,iBAAiBsC,GACf,MACM+4B,EADKzjC,KACKukC,aACVE,OAACA,EAAMR,OAAEA,GAAUR,EACnBa,EAHKtkC,KAGOwqC,UAAU9/B,GACtB+jC,EAASnK,EAAO+J,QAChBluC,EAAQquC,GAAWC,GACrB,IAAMA,EAAO9mC,MAAQ,KAAO8mC,EAAO7mC,IAAM,IACzC,GAAKq8B,EAAOyG,iBAAiBpG,EAAOL,EAAOU,OAC/C,MAAO,CACL8F,MAAO,GAAKhG,EAAOiG,iBAAiBpG,EAAOG,EAAOE,OAClDxkC,MAAAA,GAGJiI,aACE,MAAMkb,EAAKtjB,KACXsjB,EAAG+iB,qBAAsB,EACzBkJ,MAAM/I,aACOljB,EAAGihB,YACXnB,MAAQ9f,EAAGujB,aAAazD,MAE/Bh7B,OAAO4d,GACL,MACMyd,EADKzjC,KACKukC,YADLvkC,KAER6sC,eAAepJ,EAAKrkC,KAAM,EAAGqkC,EAAKrkC,KAAK4C,OAAQgkB,GAEpD5d,eAAeonC,EAAM7nC,EAAOw0B,EAAOnW,GACjC,MAAM1C,EAAKtjB,KACLyvC,EAAiB,UAATzpB,GACRtb,MAACA,EAAO65B,aAAaN,OAACA,IAAW3gB,EACjC6kB,EAAOlE,EAAOyL,eACdb,EAAa5K,EAAO0L,eACpBC,EAAQtsB,EAAGusB,YACXC,EAAYxsB,EAAG6nB,0BAA0BxjC,EAAOqe,GAChDimB,EAAgB3oB,EAAG8oB,iBAAiB0D,GACpCC,EAAiBzsB,EAAGysB,eAAe/pB,EAAMimB,GAC/C3oB,EAAG0sB,oBAAoB/D,EAAejmB,EAAM8pB,GAC5C,IAAK,IAAI/tC,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,EAAOp6B,IAAK,CAC1C,MAAMuiC,EAAShhB,EAAGknB,UAAUzoC,GACtBkuC,EAAUR,GAAS7jC,GAAc04B,EAAOL,EAAOU,OAAS,CAACwD,KAAAA,EAAM5pC,KAAM4pC,GAAQ7kB,EAAG4sB,yBAAyBnuC,GACzGouC,EAAU7sB,EAAG8sB,yBAAyBruC,EAAG6tC,GACzCxM,GAASkB,EAAOE,SAAW,IAAIP,EAAOU,MACtCrD,EAAa,CACjBuN,WAAAA,EACA1G,KAAM8H,EAAQ9H,KACd4G,oBAAqB3L,GAASoL,GAAWlK,EAAO+J,UAAa3jC,IAAU04B,EAAM4B,MAAQt6B,IAAU04B,EAAM6B,QACrGtpC,EAAGkzC,EAAaoB,EAAQ1xC,KAAO4xC,EAAQE,OACvCjgC,EAAGy+B,EAAasB,EAAQE,OAASJ,EAAQ1xC,KACzC0qB,OAAQ4lB,EAAasB,EAAQ3yC,KAAOiK,KAAKC,IAAIuoC,EAAQzyC,MACrDsqB,MAAO+mB,EAAapnC,KAAKC,IAAIuoC,EAAQzyC,MAAQ2yC,EAAQ3yC,MAEnDuyC,IACFzO,EAAW5hC,QAAUusC,GAAiB3oB,EAAG6nB,0BAA0BppC,EAAGytC,EAAKztC,GAAGb,OAAS,SAAW8kB,IAEpG0oB,GAAiBpN,EAAYA,EAAW5hC,SAAW8vC,EAAKztC,GAAGrC,QAAS0jC,EAAO14B,GAC3E4Y,EAAGgtB,cAAcd,EAAKztC,GAAIA,EAAGu/B,EAAYtb,IAG7C5d,WAAWmoC,EAAMnF,GACf,MAEM3G,EAFKzkC,KACKukC,YACIE,OACdxB,EAAWwB,EAAON,wBAHbnkC,KAGwC8lC,OAC7CpC,EAAUe,EAAO/kC,QAAQgkC,QACzBx2B,EAAO+1B,EAASjhC,OAChB4hC,EAAS,GACf,IAAI7hC,EAAG0wB,EACP,IAAK1wB,EAAI,EAAGA,EAAImL,IAAQnL,EAEtB,GADA0wB,EAAOwQ,EAASlhC,GACX0wB,EAAK4R,WAAW3kC,QAAQ8wC,QAA7B,CAGA,QAAyB,IAAdpF,EAA2B,CACpC,MAAMznB,EAAM8O,EAAK4R,WAAWmG,UAAUY,GACpC3Y,EAAK4R,WAAWE,YAAYN,OAAOU,MAErC,GAAI/4B,GAAc+X,IAAQxT,MAAMwT,GAC9B,SAOJ,KAJgB,IAAZ+f,IAAqD,IAAhCE,EAAO1gC,QAAQuvB,EAAK2Q,aAClCve,IAAZ6e,QAAwC7e,IAAf4N,EAAK2Q,QAC3BQ,EAAO9/B,KAAK2uB,EAAK2Q,OAEf3Q,EAAK/nB,QAAU6lC,EACjB,MAMJ,OAHK3M,EAAO5hC,QACV4hC,EAAO9/B,UAAK+gB,GAEP+e,EAETx7B,eAAesC,GACb,OAAO1K,KAAKywC,gBAAW5rB,EAAWna,GAAO1I,OAE3CoG,eAAeiF,EAActO,EAAMqsC,GACjC,MAAMxH,EAAS5jC,KAAKywC,WAAWpjC,EAAc+9B,GACvC1gC,OAAkBma,IAAT9lB,EACX6kC,EAAO1gC,QAAQnE,IACd,EACL,OAAmB,IAAX2L,EACJk5B,EAAO5hC,OAAS,EAChB0I,EAENtC,YACE,MAAMkb,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QACV+jC,EAAOngB,EAAGihB,YACVE,EAAShB,EAAKgB,OACdiM,EAAS,GACf,IAAI3uC,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAOu2B,EAAKrkC,KAAK4C,OAAQD,EAAImL,IAAQnL,EAC/C2uC,EAAO5sC,KAAK2gC,EAAOmJ,iBAAiBtqB,EAAGknB,UAAUzoC,GAAG0iC,EAAOE,MAAO5iC,IAEpE,MAAM4uC,EAAejlB,EAAKilB,aAE1B,MAAO,CACLlgC,IAFUkgC,GAAgB1D,GAAqBxI,GAG/CiM,OAAAA,EACA/oC,MAAO88B,EAAOmM,YACdhpC,IAAK68B,EAAOoM,UACZC,WAAYxtB,EAAGytB,iBACfvqB,MAAOie,EACP+L,QAAS9kB,EAAK8kB,QACdluB,MAAOquB,EAAe,EAAIjlB,EAAKslB,mBAAqBtlB,EAAKulB,eAG7D7oC,yBAAyBsC,GACvB,MAAM4Y,EAAKtjB,MACJukC,aAAaN,OAACA,EAAMyC,SAAEA,GAAWhnC,SAAUyoC,KAAM+I,EAASC,aAAEA,IAAiB7tB,EAC9E8tB,EAAaF,GAAa,EAC1B5M,EAAShhB,EAAGknB,UAAU9/B,GACtB+jC,EAASnK,EAAO+J,QAChBgD,EAAW7C,GAAWC,GAC5B,IAGIlwC,EAAMf,EAHN2C,EAAQmkC,EAAOL,EAAOU,MACtBh9B,EAAQ,EACR3F,EAAS0kC,EAAWpjB,EAAG6f,WAAWc,EAAQK,EAAQoC,GAAYvmC,EAE9D6B,IAAW7B,IACbwH,EAAQ3F,EAAS7B,EACjB6B,EAAS7B,GAEPkxC,IACFlxC,EAAQsuC,EAAON,SACfnsC,EAASysC,EAAOL,OAASK,EAAON,SAClB,IAAVhuC,GAAeoP,GAAKpP,KAAWoP,GAAKk/B,EAAOL,UAC7CzmC,EAAQ,GAEVA,GAASxH,GAEX,MAAM8tC,EAAcriC,GAAcslC,IAAeG,EAAuB1pC,EAAZupC,EAC5D,IAAI/I,EAAOlE,EAAO2J,iBAAiBK,GAcnC,GAZE1vC,EADE+kB,EAAG4B,MAAMosB,kBAAkB5mC,GACtBu5B,EAAO2J,iBAAiBjmC,EAAQ3F,GAEhCmmC,EAET3qC,EAAOe,EAAO4pC,EACV1gC,KAAKC,IAAIlK,GAAQ2zC,IACnB3zC,EAhQN,SAAiBA,EAAMymC,EAAQmN,GAC7B,OAAa,IAAT5zC,EACK+R,GAAK/R,IAENymC,EAAO0L,eAAiB,GAAK,IAAM1L,EAAOxzB,KAAO2gC,EAAa,GAAK,GA4PhEG,CAAQ/zC,EAAMymC,EAAQmN,GAAcD,EACvChxC,IAAUixC,IACZjJ,GAAQ3qC,EAAO,GAEjBe,EAAO4pC,EAAO3qC,GAEZ2qC,IAASlE,EAAO2J,iBAAiBwD,GAAa,CAChD,MAAMI,EAAWjiC,GAAK/R,GAAQymC,EAAOwN,qBAAqBL,GAAc,EACxEjJ,GAAQqJ,EACRh0C,GAAQg0C,EAEV,MAAO,CACLh0C,KAAAA,EACA2qC,KAAAA,EACA5pC,KAAAA,EACA8xC,OAAQ9xC,EAAOf,EAAO,GAG1B4K,yBAAyBsC,EAAOklC,GAC9B,MAAMtsB,EAAKtjB,KACLwmB,EAAQopB,EAAMppB,MACd9mB,EAAU4jB,EAAG5jB,QACbgyC,EAAWhyC,EAAQgyC,SACnBC,EAAkBrlC,GAAe5M,EAAQiyC,gBAAiBC,EAAAA,GAChE,IAAIvB,EAAQ7yC,EACZ,GAAIoyC,EAAMY,QAAS,CACjB,MAAMM,EAAaY,EAAWpuB,EAAGytB,eAAermC,GAASklC,EAAMkB,WACzDrhC,EAAiC,SAAzB/P,EAAQixC,aA9V5B,SAAmCjmC,EAAOklC,EAAOlwC,EAASoxC,GACxD,MAAMJ,EAASd,EAAMc,OACfjD,EAAOiD,EAAOhmC,GACpB,IAAI0rB,EAAO1rB,EAAQ,EAAIgmC,EAAOhmC,EAAQ,GAAK,KACvC3H,EAAO2H,EAAQgmC,EAAO1uC,OAAS,EAAI0uC,EAAOhmC,EAAQ,GAAK,KAC3D,MAAMmnC,EAAUnyC,EAAQsxC,mBACX,OAAT5a,IACFA,EAAOqX,GAAiB,OAAT1qC,EAAgB6sC,EAAMhoC,IAAMgoC,EAAMjoC,MAAQ5E,EAAO0qC,IAErD,OAAT1qC,IACFA,EAAO0qC,EAAOA,EAAOrX,GAEvB,MAAMzuB,EAAQ8lC,GAAQA,EAAOhmC,KAAKgJ,IAAI2lB,EAAMrzB,IAAS,EAAI8uC,EAEzD,MAAO,CACLC,MAFWrqC,KAAKC,IAAI3E,EAAOqzB,GAAQ,EAAIyb,EAEzBf,EACdxuB,MAAO5iB,EAAQuxC,cACftpC,MAAAA,GA8UMoqC,CAA0BrnC,EAAOklC,EAAOlwC,EAASoxC,GA/W3D,SAAkCpmC,EAAOklC,EAAOlwC,EAASoxC,GACvD,MAAMkB,EAAYtyC,EAAQixC,aAC1B,IAAInzC,EAAM8kB,EAQV,OAPI1W,GAAcomC,IAChBx0C,EAAOoyC,EAAMn/B,IAAM/Q,EAAQsxC,mBAC3B1uB,EAAQ5iB,EAAQuxC,gBAEhBzzC,EAAOw0C,EAAYlB,EACnBxuB,EAAQ,GAEH,CACLwvB,MAAOt0C,EAAOszC,EACdxuB,MAAAA,EACA3a,MAAOioC,EAAMc,OAAOhmC,GAAUlN,EAAO,GAmW/By0C,CAAyBvnC,EAAOklC,EAAOlwC,EAASoxC,GAC9CoB,EAAa5uB,EAAG6uB,eAAe7uB,EAAG5Y,MAAO4Y,EAAGihB,YAAYnB,MAAOsO,EAAWhnC,OAAQma,GACxFwrB,EAAS5gC,EAAM9H,MAAS8H,EAAMqiC,MAAQI,EAAeziC,EAAMqiC,MAAQ,EACnEt0C,EAAOiK,KAAKgJ,IAAIkhC,EAAiBliC,EAAMqiC,MAAQriC,EAAM6S,YAErD+tB,EAAS7pB,EAAMonB,iBAAiBtqB,EAAGknB,UAAU9/B,GAAO8b,EAAMme,MAAOj6B,GACjElN,EAAOiK,KAAKgJ,IAAIkhC,EAAiB/B,EAAMn/B,IAAMm/B,EAAMttB,OAErD,MAAO,CACL6lB,KAAMkI,EAAS7yC,EAAO,EACtBe,KAAM8xC,EAAS7yC,EAAO,EACtB6yC,OAAAA,EACA7yC,KAAAA,GAGJ4K,OACE,MAAMkb,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVN,EAASR,EAAKQ,OACdmO,EAAQ3O,EAAKrkC,KACb8N,EAAOklC,EAAMpwC,OACnB,IAAID,EAAI,EACR,KAAOA,EAAImL,IAAQnL,EACoB,OAAjCuhB,EAAGknB,UAAUzoC,GAAGkiC,EAAOU,OACzByN,EAAMrwC,GAAG88B,KAAKvb,EAAGqiB,OAKzByJ,GAAczjC,GAAK,MACnByjC,GAAczqB,SAAW,CACvB2jB,oBAAoB,EACpBmD,gBAAiB,MACjBuF,mBAAoB,GACpBC,cAAe,GACfT,SAAS,EACT9O,WAAY,CACVH,QAAS,CACPt9B,KAAM,SACNq9B,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9C8N,GAAc/qB,UAAY,CACxBoC,OAAQ,CACN4rB,QAAS,CACPpuC,KAAM,WACNquC,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPvuC,KAAM,SACNwuC,aAAa,KAKnB,MAAMC,WAAyBhN,GAC7Bt9B,aACEpI,KAAKqmC,qBAAsB,EAC3BkJ,MAAM/I,aAERp+B,gBAAgBq7B,EAAMrkC,EAAMuI,EAAOw0B,GACjC,MAAMsL,OAACA,EAAME,OAAEA,GAAUlE,GACnBgG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1pC,KAAK+lC,SACxCzB,EAAS,GACf,IAAIviC,EAAGmL,EAAMulB,EACb,IAAK1wB,EAAI4F,EAAOuF,EAAOvF,EAAQw0B,EAAOp6B,EAAImL,IAAQnL,EAChD0wB,EAAOrzB,EAAK2C,GACZuiC,EAAOxgC,KAAK,CACVnI,EAAG8rC,EAAO+B,MAAMl7B,GAAiBmkB,EAAMgX,GAAW1nC,GAClDqO,EAAGu3B,EAAO6B,MAAMl7B,GAAiBmkB,EAAMiX,GAAW3nC,GAClDssC,QAAS5b,GAAQA,EAAKnsB,IAAMmsB,EAAKnsB,IAGrC,OAAOg+B,EAETl8B,iBACE,MAAMhJ,KAACA,EAAIimC,QAAEA,GAAWrlC,KAAKukC,YAC7B,IAAI7zB,EAAM,EACV,IAAK,IAAI3O,EAAI3C,EAAK4C,OAAS,EAAGD,GAAK,IAAKA,EACtC2O,EAAMjJ,KAAKiJ,IAAIA,EAAKtR,EAAK2C,GAAGvE,OAAS,EAAG6nC,EAAQtjC,GAAGssC,SAErD,OAAO39B,EAAM,GAAKA,EAEpBtI,iBAAiBsC,GACf,MACM+4B,EADKzjC,KACKukC,aACVkD,OAACA,EAAME,OAAEA,GAAUlE,EACnBa,EAHKtkC,KAGOwqC,UAAU9/B,GACtB/O,EAAI8rC,EAAOiD,iBAAiBpG,EAAO3oC,GACnCyU,EAAIu3B,EAAO+C,iBAAiBpG,EAAOl0B,GACnC9J,EAAIg+B,EAAO+J,QACjB,MAAO,CACL5D,MAAOhH,EAAKgH,MACZtqC,MAAO,IAAMxE,EAAI,KAAOyU,GAAK9J,EAAI,KAAOA,EAAI,IAAM,KAGtD8B,OAAO4d,GACL,MACM8N,EADK9zB,KACOukC,YAAYnlC,KADnBY,KAER6sC,eAAe/Y,EAAQ,EAAGA,EAAO9xB,OAAQgkB,GAE9C5d,eAAe0rB,EAAQnsB,EAAOw0B,EAAOnW,GACnC,MAAM1C,EAAKtjB,KACLyvC,EAAiB,UAATzpB,GACRye,OAACA,EAAMR,OAAEA,GAAU3gB,EAAGihB,YACtBuL,EAAYxsB,EAAG6nB,0BAA0BxjC,EAAOqe,GAChDimB,EAAgB3oB,EAAG8oB,iBAAiB0D,GACpCC,EAAiBzsB,EAAGysB,eAAe/pB,EAAMimB,GACzCvH,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACrB,IAAK,IAAI5iC,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,EAAOp6B,IAAK,CAC1C,MAAMuoB,EAAQwJ,EAAO/xB,GACfuiC,GAAUmL,GAASnsB,EAAGknB,UAAUzoC,GAChCu/B,EAAa,GACb3L,EAAS2L,EAAWoD,GAAS+K,EAAQhL,EAAOkO,mBAAmB,IAAOlO,EAAOmJ,iBAAiBtJ,EAAOI,IACrG9O,EAAS0L,EAAWsD,GAAS6K,EAAQxL,EAAOyL,eAAiBzL,EAAO2J,iBAAiBtJ,EAAOM,IAClGtD,EAAWvN,KAAO5jB,MAAMwlB,IAAWxlB,MAAMylB,GACrCma,IACFzO,EAAW5hC,QAAU4jB,EAAG6nB,0BAA0BppC,EAAGuoB,EAAMppB,OAAS,SAAW8kB,GAC3EypB,IACFnO,EAAW5hC,QAAQ8pB,OAAS,IAGhClG,EAAGgtB,cAAchmB,EAAOvoB,EAAGu/B,EAAYtb,GAEzC1C,EAAG0sB,oBAAoB/D,EAAejmB,EAAM8pB,GAE9C1nC,0BAA0BsC,EAAOsb,GAC/B,MAAMse,EAAStkC,KAAKwqC,UAAU9/B,GAC9B,IAAIga,EAAS6qB,MAAMpE,0BAA0BzgC,EAAOsb,GAChDtB,EAAO2d,UACT3d,EAAS3oB,OAAO2mB,OAAO,GAAIgC,EAAQ,CAAC2d,SAAS,KAE/C,MAAM7Y,EAAS9E,EAAO8E,OAKtB,MAJa,WAATxD,IACFtB,EAAO8E,OAAS,GAElB9E,EAAO8E,QAAUld,GAAeg4B,GAAUA,EAAO+J,QAAS7kB,GACnD9E,GAGXguB,GAAiB/mC,GAAK,SACtB+mC,GAAiB/tB,SAAW,CAC1B2jB,oBAAoB,EACpBmD,gBAAiB,QACjB/J,WAAY,CACVH,QAAS,CACPt9B,KAAM,SACNq9B,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5CoR,GAAiBruB,UAAY,CAC3BoC,OAAQ,CACN9qB,EAAG,CACDsI,KAAM,UAERmM,EAAG,CACDnM,KAAM,WAGVqiB,QAAS,CACPssB,QAAS,CACP5uC,UAAW,CACT6uC,MAAK,IACI,OAgCjB,MAAMC,WAA2BpN,GAC/Bt9B,YAAY8c,EAAO7X,GACjBkiC,MAAMrqB,EAAO7X,GACbrN,KAAKqmC,qBAAsB,EAC3BrmC,KAAK+yC,iBAAcluB,EACnB7kB,KAAKgzC,iBAAcnuB,EACnB7kB,KAAKg4B,aAAUnT,EACf7kB,KAAKi4B,aAAUpT,EAEjBzc,cACAA,MAAMT,EAAOw0B,GACX,MAAM/8B,EAAOY,KAAK6mC,aAAaznC,KACzBqkC,EAAOzjC,KAAKukC,YAClB,IAAIxiC,EAAGmL,EACP,IAAKnL,EAAI4F,EAAOuF,EAAOvF,EAAQw0B,EAAOp6B,EAAImL,IAAQnL,EAChD0hC,EAAK4B,QAAQtjC,IAAM3C,EAAK2C,GAG5BqG,eACE,OAAOuI,GAAU3Q,KAAKN,QAAQ6pB,SAAW,IAE3CnhB,oBACE,OAAOuI,GAAU3Q,KAAKN,QAAQuzC,eAEhC7qC,sBACE,IAAIqI,EAAM3B,GACN4B,GAAO5B,GACX,MAAMwU,EAAKtjB,KACX,IAAK,IAAI+B,EAAI,EAAGA,EAAIuhB,EAAG4B,MAAM9lB,KAAK4lB,SAAShjB,SAAUD,EACnD,GAAIuhB,EAAG4B,MAAMguB,iBAAiBnxC,GAAI,CAChC,MAAMsiC,EAAa/gB,EAAG4B,MAAM2iB,eAAe9lC,GAAGsiC,WACxC9a,EAAW8a,EAAW8O,eACtBF,EAAgB5O,EAAW+O,oBACjC3iC,EAAMhJ,KAAKgJ,IAAIA,EAAK8Y,GACpB7Y,EAAMjJ,KAAKiJ,IAAIA,EAAK6Y,EAAW0pB,GAGnC,MAAO,CACL1pB,SAAU9Y,EACVwiC,cAAeviC,EAAMD,GAGzBrI,OAAO4d,GACL,MAAM1C,EAAKtjB,KACLklB,EAAQ5B,EAAG4B,OACX8lB,UAACA,GAAa9lB,EACdue,EAAOngB,EAAGihB,YACV8O,EAAO5P,EAAKrkC,KACZk0C,EAAUhwB,EAAGiwB,oBAAsBjwB,EAAGkwB,aAAaH,GAAQ/vB,EAAG5jB,QAAQ4zC,QACtEG,EAAUhsC,KAAKiJ,KAAKjJ,KAAKgJ,IAAIu6B,EAAUljB,MAAOkjB,EAAU/hB,QAAUqqB,GAAW,EAAG,GAChFI,EAASjsC,KAAKgJ,KDrsDFtQ,ECqsDmBmjB,EAAG5jB,QAAQg0C,ODrsDvBlnC,ECqsD+BinC,EDpsDzC,iBAAVtzC,GAAsBA,EAAMsM,SAAS,KAC1CC,WAAWvM,GAAS,IAClBA,EAAQqM,GCksDwD,GDrsDjD,IAACrM,EAAOqM,ECssDzB,MAAMmnC,EAAcrwB,EAAGswB,eAAetwB,EAAG5Y,QACnCuoC,cAACA,EAAa1pB,SAAEA,GAAYjG,EAAGuwB,uBAC/BC,OAACA,EAAMC,OAAEA,EAAM/b,QAAEA,EAAOC,QAAEA,GA9EpC,SAA2B1O,EAAU0pB,EAAeS,GAClD,IAAII,EAAS,EACTC,EAAS,EACT/b,EAAU,EACVC,EAAU,EACd,GAAIgb,EAAgBnkC,GAAK,CACvB,MAAMklC,EAAazqB,EACb0qB,EAAWD,EAAaf,EACxBiB,EAASzsC,KAAKyL,IAAI8gC,GAClBG,EAAS1sC,KAAKwK,IAAI+hC,GAClBI,EAAO3sC,KAAKyL,IAAI+gC,GAChBI,EAAO5sC,KAAKwK,IAAIgiC,GAChBK,EAAU,CAAC/iC,EAAOhV,EAAGC,IAAM8U,GAAcC,EAAOyiC,EAAYC,GAAU,GAAQ,EAAIxsC,KAAKiJ,IAAInU,EAAGA,EAAIm3C,EAAQl3C,EAAGA,EAAIk3C,GACjHa,EAAU,CAAChjC,EAAOhV,EAAGC,IAAM8U,GAAcC,EAAOyiC,EAAYC,GAAU,IAAS,EAAIxsC,KAAKgJ,IAAIlU,EAAGA,EAAIm3C,EAAQl3C,EAAGA,EAAIk3C,GAClHc,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQnlC,GAASglC,EAAQE,GAChCK,EAAOH,EAAQ1lC,GAAIqlC,EAAQE,GAC3BO,EAAOJ,EAAQ1lC,GAAKM,GAASglC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzB3c,IAAYwc,EAAOE,GAAQ,EAC3Bzc,IAAYwc,EAAOE,GAAQ,EAE7B,MAAO,CAACb,OAAAA,EAAQC,OAAAA,EAAQ/b,QAAAA,EAASC,QAAAA,GAuDY2c,CAAkBrrB,EAAU0pB,EAAeS,GAChFnnB,GAAYye,EAAUljB,MAAQwrB,GAAWQ,EACzChb,GAAakS,EAAU/hB,OAASqqB,GAAWS,EAC3Cc,EAAYptC,KAAKiJ,IAAIjJ,KAAKgJ,IAAI8b,EAAUuM,GAAa,EAAG,GACxDka,EAAczmC,GAAY+W,EAAG5jB,QAAQ8pB,OAAQqrB,GAE7CC,GAAgB9B,EADFvrC,KAAKiJ,IAAIsiC,EAAcU,EAAQ,IACApwB,EAAGyxB,gCACtDzxB,EAAG0U,QAAUA,EAAUgb,EACvB1vB,EAAG2U,QAAUA,EAAU+a,EACvBvP,EAAKuR,MAAQ1xB,EAAG2xB,iBAChB3xB,EAAG0vB,YAAcA,EAAc8B,EAAexxB,EAAG4xB,qBAAqB5xB,EAAG5Y,OACzE4Y,EAAGyvB,YAActrC,KAAKiJ,IAAI4S,EAAG0vB,YAAc8B,EAAenB,EAAa,GACvErwB,EAAGupB,eAAewG,EAAM,EAAGA,EAAKrxC,OAAQgkB,GAE1C5d,eAAerG,EAAG0tC,GAChB,MAAMnsB,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QACV+jC,EAAOngB,EAAGihB,YACV0O,EAAgB3vB,EAAG8vB,oBACzB,OAAK3D,GAAS/jB,EAAK/oB,UAAUwyC,gBAAmBn1C,KAAKklB,MAAMosB,kBAAkBvvC,IAA0B,OAApB0hC,EAAK4B,QAAQtjC,IAAe0hC,EAAKrkC,KAAK2C,GAAGkpC,OACnH,EAEF3nB,EAAG8xB,uBAAuB3R,EAAK4B,QAAQtjC,GAAKkxC,EAAgBnkC,IAErE1G,eAAeirC,EAAM1rC,EAAOw0B,EAAOnW,GACjC,MAAM1C,EAAKtjB,KACLyvC,EAAiB,UAATzpB,EACRd,EAAQ5B,EAAG4B,MACX8lB,EAAY9lB,EAAM8lB,UAElBqK,EADOnwB,EAAMxlB,QACQiD,UACrB2yC,GAAWtK,EAAUvgB,KAAOugB,EAAUtgB,OAAS,EAC/C6qB,GAAWvK,EAAUrgB,IAAMqgB,EAAUpgB,QAAU,EAC/C4qB,EAAe/F,GAAS4F,EAAcG,aACtCzC,EAAcyC,EAAe,EAAIlyB,EAAGyvB,YACpCC,EAAcwC,EAAe,EAAIlyB,EAAG0vB,YACpClD,EAAYxsB,EAAG6nB,0BAA0BxjC,EAAOqe,GAChDimB,EAAgB3oB,EAAG8oB,iBAAiB0D,GACpCC,EAAiBzsB,EAAGysB,eAAe/pB,EAAMimB,GAC/C,IACIlqC,EADAiyC,EAAa1wB,EAAG6vB,eAEpB,IAAKpxC,EAAI,EAAGA,EAAI4F,IAAS5F,EACvBiyC,GAAc1wB,EAAGmyB,eAAe1zC,EAAG0tC,GAErC,IAAK1tC,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,IAASp6B,EAAG,CACtC,MAAMkxC,EAAgB3vB,EAAGmyB,eAAe1zC,EAAG0tC,GACrC5lB,EAAMwpB,EAAKtxC,GACXu/B,EAAa,CACjB3lC,EAAG25C,EAAUhyB,EAAG0U,QAChB5nB,EAAGmlC,EAAUjyB,EAAG2U,QAChB+b,WAAAA,EACAC,SAAUD,EAAaf,EACvBA,cAAAA,EACAD,YAAAA,EACAD,YAAAA,GAEEhD,IACFzO,EAAW5hC,QAAUusC,GAAiB3oB,EAAG6nB,0BAA0BppC,EAAG8nB,EAAI3oB,OAAS,SAAW8kB,IAEhGguB,GAAcf,EACd3vB,EAAGgtB,cAAczmB,EAAK9nB,EAAGu/B,EAAYtb,GAEvC1C,EAAG0sB,oBAAoB/D,EAAejmB,EAAM8pB,GAE9C1nC,iBACE,MAAMq7B,EAAOzjC,KAAKukC,YACZmR,EAAWjS,EAAKrkC,KACtB,IACI2C,EADAizC,EAAQ,EAEZ,IAAKjzC,EAAI,EAAGA,EAAI2zC,EAAS1zC,OAAQD,IAAK,CACpC,MAAM5B,EAAQsjC,EAAK4B,QAAQtjC,GACb,OAAV5B,GAAmBgQ,MAAMhQ,KAAUH,KAAKklB,MAAMosB,kBAAkBvvC,IAAO2zC,EAAS3zC,GAAGkpC,SACrF+J,GAASvtC,KAAKC,IAAIvH,IAGtB,OAAO60C,EAET5sC,uBAAuBjI,GACrB,MAAM60C,EAAQh1C,KAAKukC,YAAYyQ,MAC/B,OAAIA,EAAQ,IAAM7kC,MAAMhQ,GACf2O,IAAOrH,KAAKC,IAAIvH,GAAS60C,GAE3B,EAET5sC,iBAAiBsC,GACf,MACM+4B,EADKzjC,KACKukC,YACVrf,EAFKllB,KAEMklB,MACXmkB,EAASnkB,EAAM9lB,KAAKiqC,QAAU,GAC9BlpC,EAAQw6B,GAAa8I,EAAK4B,QAAQ36B,GAAQwa,EAAMxlB,QAAQm7B,QAC9D,MAAO,CACL4P,MAAOpB,EAAO3+B,IAAU,GACxBvK,MAAAA,GAGJiI,kBAAkBirC,GAChB,MAAM/vB,EAAKtjB,KACX,IAAI0Q,EAAM,EACV,MAAMwU,EAAQ5B,EAAG4B,MACjB,IAAInjB,EAAGmL,EAAMu2B,EAAMY,EAAY3kC,EAC/B,IAAK2zC,EACH,IAAKtxC,EAAI,EAAGmL,EAAOgY,EAAM9lB,KAAK4lB,SAAShjB,OAAQD,EAAImL,IAAQnL,EACzD,GAAImjB,EAAMguB,iBAAiBnxC,GAAI,CAC7B0hC,EAAOve,EAAM2iB,eAAe9lC,GAC5BsxC,EAAO5P,EAAKrkC,KACZilC,EAAaZ,EAAKY,WACdA,IAAe/gB,GACjB+gB,EAAWrC,YAEb,MAIN,IAAKqR,EACH,OAAO,EAET,IAAKtxC,EAAI,EAAGmL,EAAOmmC,EAAKrxC,OAAQD,EAAImL,IAAQnL,EAC1CrC,EAAU2kC,EAAW8G,0BAA0BppC,GACnB,UAAxBrC,EAAQi2C,cACVjlC,EAAMjJ,KAAKiJ,IAAIA,EAAKhR,EAAQyqB,aAAe,EAAGzqB,EAAQk2C,kBAAoB,IAG9E,OAAOllC,EAETtI,aAAairC,GACX,IAAI3iC,EAAM,EACV,IAAK,IAAI3O,EAAI,EAAGmL,EAAOmmC,EAAKrxC,OAAQD,EAAImL,IAAQnL,EAAG,CACjD,MAAMrC,EAAUM,KAAKmrC,0BAA0BppC,GAC/C2O,EAAMjJ,KAAKiJ,IAAIA,EAAKhR,EAAQ4yC,QAAU,EAAG5yC,EAAQm2C,aAAe,GAElE,OAAOnlC,EAETtI,qBAAqBiF,GACnB,IAAIyoC,EAAmB,EACvB,IAAK,IAAI/zC,EAAI,EAAGA,EAAIsL,IAAgBtL,EAC9B/B,KAAKklB,MAAMguB,iBAAiBnxC,KAC9B+zC,GAAoB91C,KAAK4zC,eAAe7xC,IAG5C,OAAO+zC,EAET1tC,eAAeiF,GACb,OAAO5F,KAAKiJ,IAAIpE,GAAetM,KAAKklB,MAAM9lB,KAAK4lB,SAAS3X,GAAcgW,OAAQ,GAAI,GAEpFjb,gCACE,OAAOpI,KAAKk1C,qBAAqBl1C,KAAKklB,MAAM9lB,KAAK4lB,SAAShjB,SAAW,GAGzE8wC,GAAmBnnC,GAAK,WACxBmnC,GAAmBnuB,SAAW,CAC5B2jB,oBAAoB,EACpBmD,gBAAiB,MACjB9oC,UAAW,CACTwyC,eAAe,EACfK,cAAc,GAEhB9T,WAAY,CACVH,QAAS,CACPt9B,KAAM,SACNq9B,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7HoS,OAAQ,MACRnqB,SAAU,EACV0pB,cAAe,IACfzpB,OAAQ,OACR8pB,QAAS,EACTxtB,UAAW,KAEbgtB,GAAmBxuB,YAAc,CAC/B8C,YAAcroB,GAAkB,YAATA,EACvBuoB,WAAavoB,GAAkB,YAATA,GAExB+zC,GAAmBzuB,UAAY,CAC7BuU,YAAa,EACbtS,QAAS,CACPyvB,OAAQ,CACN1M,OAAQ,CACNjhC,eAAe8c,GACb,MAAM9lB,EAAO8lB,EAAM9lB,KACnB,GAAIA,EAAKiqC,OAAOrnC,QAAU5C,EAAK4lB,SAAShjB,OAAQ,CAC9C,MAAOqnC,QAAQ/f,WAACA,IAAepE,EAAM6wB,OAAOr2C,QAC5C,OAAON,EAAKiqC,OAAOvgC,KAAI,CAAC2hC,EAAO1oC,KAC7B,MACMzD,EADO4mB,EAAM2iB,eAAe,GACfxD,WAAWjK,SAASr4B,GACvC,MAAO,CACL5C,KAAMsrC,EACNze,UAAW1tB,EAAMwmB,gBACjBsH,YAAa9tB,EAAMymB,YACnBsH,UAAW/tB,EAAM6rB,YACjBb,WAAYA,EACZ2hB,QAAS/lB,EAAMosB,kBAAkBvvC,GACjC2I,MAAO3I,MAIb,MAAO,KAGXqG,QAAQrC,EAAGiwC,EAAYD,GACrBA,EAAO7wB,MAAM+wB,qBAAqBD,EAAWtrC,OAC7CqrC,EAAO7wB,MAAMngB,WAGjB6tC,QAAS,CACP5uC,UAAW,CACT6uC,MAAK,IACI,GAETzqC,MAAM8tC,GACJ,IAAIC,EAAYD,EAAYzL,MAC5B,MAAMtqC,EAAQ,KAAO+1C,EAAYE,eAOjC,OANIvqC,GAAQsqC,IACVA,EAAYA,EAAUjyC,QACtBiyC,EAAU,IAAMh2C,GAEhBg2C,GAAah2C,EAERg2C,OAOjB,MAAME,WAAuB3Q,GAC3Bt9B,aACEpI,KAAKqmC,qBAAsB,EAC3BkJ,MAAM/I,aAERp+B,OAAO4d,GACL,MAAM1C,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,aACTqC,QAAS9a,EAAM1sB,KAAM00B,EAAS,GAAEwiB,SAAEA,GAAY7S,EAC/C8S,EAAqBjzB,EAAG4B,MAAMgnB,oBACpC,IAAIvkC,MAACA,EAAKw0B,MAAEA,GA0FhB,SAAyCsH,EAAM3P,EAAQyiB,GACrD,MAAMC,EAAa1iB,EAAO9xB,OAC1B,IAAI2F,EAAQ,EACRw0B,EAAQqa,EACZ,GAAI/S,EAAKuF,QAAS,CAChB,MAAMvE,OAACA,EAAMY,QAAEA,GAAW5B,EACpBkB,EAAOF,EAAOE,MACdl0B,IAACA,EAAGC,IAAEA,EAAGy5B,WAAEA,EAAUC,WAAEA,GAAc3F,EAAO4F,gBAC9CF,IACFxiC,EAAQmK,GAAYrK,KAAKgJ,IACvB0e,GAAakW,EAASZ,EAAOE,KAAMl0B,GAAKye,GACxCqnB,EAAqBC,EAAarnB,GAAa2E,EAAQ6Q,EAAMF,EAAOmJ,iBAAiBn9B,IAAMye,IAC7F,EAAGsnB,EAAa,IAGhBra,EADEiO,EACMt4B,GAAYrK,KAAKiJ,IACvBye,GAAakW,EAASZ,EAAOE,KAAMj0B,GAAKue,GAAK,EAC7CsnB,EAAqB,EAAIpnB,GAAa2E,EAAQ6Q,EAAMF,EAAOmJ,iBAAiBl9B,IAAMue,GAAK,GACzFtnB,EAAO6uC,GAAc7uC,EAEb6uC,EAAa7uC,EAGzB,MAAO,CAACA,MAAAA,EAAOw0B,MAAAA,GAjHQsa,CAAgChT,EAAM3P,EAAQyiB,GACnEjzB,EAAG6iB,WAAax+B,EAChB2b,EAAG8iB,WAAajK,EAiHpB,SAA4BsH,GAC1B,MAAMgE,OAACA,EAAME,OAAEA,EAAM+O,aAAEA,GAAgBjT,EACjCkT,EAAY,CAChBC,KAAMnP,EAAOh3B,IACbomC,KAAMpP,EAAO/2B,IACbomC,KAAMnP,EAAOl3B,IACbsmC,KAAMpP,EAAOj3B,KAEf,IAAKgmC,EAEH,OADAjT,EAAKiT,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASnP,EAAOh3B,KAC1CimC,EAAaG,OAASpP,EAAO/2B,KAC7BgmC,EAAaI,OAASnP,EAAOl3B,KAC7BimC,EAAaK,OAASpP,EAAOj3B,IAEhC,OADA3U,OAAO2mB,OAAOg0B,EAAcC,GACrBK,EAjIDC,CAAmBxT,KACrB97B,EAAQ,EACRw0B,EAAQrI,EAAO9xB,QAEjB8pB,EAAK0R,cAAgBla,EAAG5Y,MACxBohB,EAAKorB,aAAeZ,EAASY,WAC7BprB,EAAKgI,OAASA,EACd,MAAMp0B,EAAU4jB,EAAG4nB,6BAA6BllB,GAC3C1C,EAAG5jB,QAAQgnB,WACdhnB,EAAQyqB,YAAc,GAExBzqB,EAAQ28B,QAAU/Y,EAAG5jB,QAAQ28B,QAC7B/Y,EAAGgtB,cAAcxkB,OAAMjH,EAAW,CAChCsyB,UAAWZ,EACX72C,QAAAA,GACCsmB,GACH1C,EAAGupB,eAAe/Y,EAAQnsB,EAAOw0B,EAAOnW,GAE1C5d,eAAe0rB,EAAQnsB,EAAOw0B,EAAOnW,GACnC,MAAM1C,EAAKtjB,KACLyvC,EAAiB,UAATzpB,GACRye,OAACA,EAAMR,OAAEA,EAAMyC,SAAEA,GAAYpjB,EAAGihB,YAChCuL,EAAYxsB,EAAG6nB,0BAA0BxjC,EAAOqe,GAChDimB,EAAgB3oB,EAAG8oB,iBAAiB0D,GACpCC,EAAiBzsB,EAAGysB,eAAe/pB,EAAMimB,GACzCvH,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfzO,EAAW5S,EAAG5jB,QAAQw2B,SACtBkhB,EAAennC,GAASimB,GAAYA,EAAWhqB,OAAO+C,kBACtDooC,EAAe/zB,EAAG4B,MAAMgnB,qBAAuBuD,GAAkB,SAATzpB,EAC9D,IAAIsxB,EAAa3vC,EAAQ,GAAK2b,EAAGknB,UAAU7iC,EAAQ,GACnD,IAAK,IAAI5F,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,IAASp6B,EAAG,CAC1C,MAAMuoB,EAAQwJ,EAAO/xB,GACfuiC,EAAShhB,EAAGknB,UAAUzoC,GACtBu/B,EAAa+V,EAAe/sB,EAAQ,GACpCitB,EAAW3rC,GAAc04B,EAAOM,IAChCjP,EAAS2L,EAAWoD,GAASD,EAAOmJ,iBAAiBtJ,EAAOI,GAAQ3iC,GACpE6zB,EAAS0L,EAAWsD,GAAS6K,GAAS8H,EAAWtT,EAAOyL,eAAiBzL,EAAO2J,iBAAiBlH,EAAWpjB,EAAG6f,WAAWc,EAAQK,EAAQoC,GAAYpC,EAAOM,GAAQ7iC,GAC3Ku/B,EAAWvN,KAAO5jB,MAAMwlB,IAAWxlB,MAAMylB,IAAW2hB,EACpDjW,EAAWkW,KAAOz1C,EAAI,GAAMuiC,EAAOI,GAAS4S,EAAW5S,GAAU0S,EACjE9V,EAAWgD,OAASA,EAChByL,IACFzO,EAAW5hC,QAAUusC,GAAiB3oB,EAAG6nB,0BAA0BppC,EAAGuoB,EAAMppB,OAAS,SAAW8kB,IAE7FqxB,GACH/zB,EAAGgtB,cAAchmB,EAAOvoB,EAAGu/B,EAAYtb,GAEzCsxB,EAAahT,EAEfhhB,EAAG0sB,oBAAoB/D,EAAejmB,EAAM8pB,GAE9C1nC,iBACE,MAAMkb,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVqC,EAAUnD,EAAKmD,QACf6Q,EAAS7Q,EAAQlnC,SAAWknC,EAAQlnC,QAAQyqB,aAAe,EAC3D/qB,EAAOqkC,EAAKrkC,MAAQ,GAC1B,IAAKA,EAAK4C,OACR,OAAOy1C,EAET,MAAMvjB,EAAa90B,EAAK,GAAG5B,KAAK8lB,EAAG6nB,0BAA0B,IACvDuM,EAAYt4C,EAAKA,EAAK4C,OAAS,GAAGxE,KAAK8lB,EAAG6nB,0BAA0B/rC,EAAK4C,OAAS,IACxF,OAAOyF,KAAKiJ,IAAI+mC,EAAQvjB,EAAYwjB,GAAa,EAEnDtvC,OACE,MAAMq7B,EAAOzjC,KAAKukC,YAClBd,EAAKmD,QAAQ+Q,oBAAoB33C,KAAKklB,MAAM8lB,UAAWvH,EAAKgB,OAAOE,MACnE4K,MAAM1Q,QAGVwX,GAAe1qC,GAAK,OACpB0qC,GAAe1xB,SAAW,CACxB2jB,mBAAoB,OACpBmD,gBAAiB,QACjB/kB,UAAU,EACVwP,UAAU,GAEZmgB,GAAehyB,UAAY,CACzBoC,OAAQ,CACN4rB,QAAS,CACPpuC,KAAM,YAERuuC,QAAS,CACPvuC,KAAM,YAiDZ,MAAM2zC,WAA4BlS,GAChCt9B,YAAY8c,EAAO7X,GACjBkiC,MAAMrqB,EAAO7X,GACbrN,KAAK+yC,iBAAcluB,EACnB7kB,KAAKgzC,iBAAcnuB,EAErBzc,iBAAiBsC,GACf,MACM+4B,EADKzjC,KACKukC,YACVrf,EAFKllB,KAEMklB,MACXmkB,EAASnkB,EAAM9lB,KAAKiqC,QAAU,GAC9BlpC,EAAQw6B,GAAa8I,EAAK4B,QAAQ36B,GAAOpE,EAAG4e,EAAMxlB,QAAQm7B,QAChE,MAAO,CACL4P,MAAOpB,EAAO3+B,IAAU,GACxBvK,MAAAA,GAGJiI,OAAO4d,GACL,MAAMqtB,EAAOrzC,KAAKukC,YAAYnlC,KAC9BY,KAAK63C,gBACL73C,KAAK6sC,eAAewG,EAAM,EAAGA,EAAKrxC,OAAQgkB,GAE5C5d,gBACE,MAAMkb,EAAKtjB,KACLklB,EAAQ5B,EAAG4B,MACX8lB,EAAY9lB,EAAM8lB,UAClBtf,EAAOxG,EAAMxlB,QACbo4C,EAAUrwC,KAAKgJ,IAAIu6B,EAAUtgB,MAAQsgB,EAAUvgB,KAAMugB,EAAUpgB,OAASogB,EAAUrgB,KAClFqoB,EAAcvrC,KAAKiJ,IAAIonC,EAAU,EAAG,GAEpChD,GAAgB9B,EADFvrC,KAAKiJ,IAAIgb,EAAKqsB,iBAAoB/E,EAAc,IAAQtnB,EAAqB,iBAAI,EAAG,IACrDxG,EAAM8yB,yBACzD10B,EAAG0vB,YAAcA,EAAe8B,EAAexxB,EAAG5Y,MAClD4Y,EAAGyvB,YAAczvB,EAAG0vB,YAAc8B,EAEpC1sC,eAAeirC,EAAM1rC,EAAOw0B,EAAOnW,GACjC,MAAM1C,EAAKtjB,KACLyvC,EAAiB,UAATzpB,EACRd,EAAQ5B,EAAG4B,MACX0hB,EAAUtjB,EAAGujB,aAEbwO,EADOnwB,EAAMxlB,QACQiD,UACrB6jB,EAAQlD,EAAGihB,YAAYqD,OACvB0N,EAAU9uB,EAAMyxB,QAChB1C,EAAU/uB,EAAM0xB,QAChBC,EAAoB3xB,EAAM4xB,cAAc,GAAK,GAAMvpC,GACzD,IACI9M,EADAwP,EAAQ4mC,EAEZ,MAAME,EAAe,IAAM/0B,EAAGg1B,uBAC9B,IAAKv2C,EAAI,EAAGA,EAAI4F,IAAS5F,EACvBwP,GAAS+R,EAAGi1B,cAAcx2C,EAAGikB,EAAMqyB,GAErC,IAAKt2C,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,EAAOp6B,IAAK,CACtC,MAAM8nB,EAAMwpB,EAAKtxC,GACjB,IAAIiyC,EAAaziC,EACb0iC,EAAW1iC,EAAQ+R,EAAGi1B,cAAcx2C,EAAGikB,EAAMqyB,GAC7CrF,EAAc9tB,EAAMosB,kBAAkBvvC,GAAKykB,EAAMgyB,8BAA8B5R,EAAQxnC,KAAK2C,IAAM,EACtGwP,EAAQ0iC,EACJxE,IACE4F,EAAcG,eAChBxC,EAAc,GAEZqC,EAAcF,gBAChBnB,EAAaC,EAAWkE,IAG5B,MAAM7W,EAAa,CACjB3lC,EAAG25C,EACHllC,EAAGmlC,EACHxC,YAAa,EACbC,YAAAA,EACAgB,WAAAA,EACAC,SAAAA,EACAv0C,QAAS4jB,EAAG6nB,0BAA0BppC,EAAG8nB,EAAI3oB,OAAS,SAAW8kB,IAEnE1C,EAAGgtB,cAAczmB,EAAK9nB,EAAGu/B,EAAYtb,IAGzC5d,uBACE,MAAMw+B,EAAU5mC,KAAK6mC,aACfpD,EAAOzjC,KAAKukC,YAClB,IAAIpI,EAAQ,EAMZ,OALAsH,EAAKrkC,KAAKjD,SAAQ,CAACkC,EAASqM,MACrByF,MAAMy2B,EAAQxnC,KAAKsL,KAAW1K,KAAKklB,MAAMosB,kBAAkB5mC,IAC9DyxB,OAGGA,EAET/zB,cAAcsC,EAAOsb,EAAMqyB,GACzB,OAAOr4C,KAAKklB,MAAMosB,kBAAkB5mC,GAChCiG,GAAU3Q,KAAKmrC,0BAA0BzgC,EAAOsb,GAAMzU,OAAS8mC,GAC/D,GAGRT,GAAoBjsC,GAAK,YACzBisC,GAAoBjzB,SAAW,CAC7B8mB,gBAAiB,MACjB9oC,UAAW,CACTwyC,eAAe,EACfK,cAAc,GAEhB9T,WAAY,CACVH,QAAS,CACPt9B,KAAM,SACNq9B,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpExb,UAAW,IACXkuB,WAAY,GAEd4D,GAAoBvzB,UAAY,CAC9BuU,YAAa,EACbtS,QAAS,CACPyvB,OAAQ,CACN1M,OAAQ,CACNjhC,eAAe8c,GACb,MAAM9lB,EAAO8lB,EAAM9lB,KACnB,GAAIA,EAAKiqC,OAAOrnC,QAAU5C,EAAK4lB,SAAShjB,OAAQ,CAC9C,MAAOqnC,QAAQ/f,WAACA,IAAepE,EAAM6wB,OAAOr2C,QAC5C,OAAON,EAAKiqC,OAAOvgC,KAAI,CAAC2hC,EAAO1oC,KAC7B,MACMzD,EADO4mB,EAAM2iB,eAAe,GACfxD,WAAWjK,SAASr4B,GACvC,MAAO,CACL5C,KAAMsrC,EACNze,UAAW1tB,EAAMwmB,gBACjBsH,YAAa9tB,EAAMymB,YACnBsH,UAAW/tB,EAAM6rB,YACjBb,WAAYA,EACZ2hB,QAAS/lB,EAAMosB,kBAAkBvvC,GACjC2I,MAAO3I,MAIb,MAAO,KAGXqG,QAAQrC,EAAGiwC,EAAYD,GACrBA,EAAO7wB,MAAM+wB,qBAAqBD,EAAWtrC,OAC7CqrC,EAAO7wB,MAAMngB,WAGjB6tC,QAAS,CACP5uC,UAAW,CACT6uC,MAAK,IACI,GAETpI,MAAM9gC,GACGA,EAAQub,MAAM9lB,KAAKiqC,OAAO1/B,EAAQyhC,WAAa,KAAOzhC,EAAQysC,kBAK7E3vB,OAAQ,CACNngB,EAAG,CACDrC,KAAM,eACNw0C,WAAY,CACVC,SAAS,GAEXjG,aAAa,EACbF,KAAM,CACJoG,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEX1E,WAAY,KAKlB,MAAM6E,WAAsB/F,IAE5B+F,GAAcltC,GAAK,MACnBktC,GAAcl0B,SAAW,CACvB+uB,OAAQ,EACRnqB,SAAU,EACV0pB,cAAe,IACfzpB,OAAQ,QAGV,MAAMsvB,WAAwBpT,GAC5Bt9B,iBAAiBsC,GACf,MACMu5B,EADKjkC,KACOukC,YAAYN,OACxBK,EAFKtkC,KAEOwqC,UAAU9/B,GAC5B,MAAO,CACL+/B,MAAOxG,EAAOqF,YAAY5+B,GAC1BvK,MAAO,GAAK8jC,EAAOyG,iBAAiBpG,EAAOL,EAAOU,QAGtDv8B,OAAO4d,GACL,MAAM1C,EAAKtjB,KACLyjC,EAAOngB,EAAGihB,YACVzY,EAAO2X,EAAKmD,QACZ9S,EAAS2P,EAAKrkC,MAAQ,GACtBiqC,EAAS5F,EAAKgB,OAAO6E,YAE3B,GADAxd,EAAKgI,OAASA,EACD,WAAT9N,EAAmB,CACrB,MAAMtmB,EAAU4jB,EAAG4nB,6BAA6BllB,GAC3C1C,EAAG5jB,QAAQgnB,WACdhnB,EAAQyqB,YAAc,GAExB,MAAMmX,EAAa,CACjBf,OAAO,EACPwY,UAAW1P,EAAOrnC,SAAW8xB,EAAO9xB,OACpCtC,QAAAA,GAEF4jB,EAAGgtB,cAAcxkB,OAAMjH,EAAWyc,EAAYtb,GAEhD1C,EAAGupB,eAAe/Y,EAAQ,EAAGA,EAAO9xB,OAAQgkB,GAE9C5d,eAAe0rB,EAAQnsB,EAAOw0B,EAAOnW,GACnC,MAAM1C,EAAKtjB,KACL4mC,EAAUtjB,EAAGujB,aACbrgB,EAAQlD,EAAGihB,YAAYqD,OACvB6H,EAAiB,UAATzpB,EACd,IAAK,IAAIjkB,EAAI4F,EAAO5F,EAAI4F,EAAQw0B,EAAOp6B,IAAK,CAC1C,MAAMuoB,EAAQwJ,EAAO/xB,GACfrC,EAAU4jB,EAAG6nB,0BAA0BppC,EAAGuoB,EAAMppB,OAAS,SAAW8kB,GACpEgzB,EAAgBxyB,EAAMyyB,yBAAyBl3C,EAAG6kC,EAAQxnC,KAAK2C,IAC/DpG,EAAI8zC,EAAQjpB,EAAMyxB,QAAUe,EAAcr9C,EAC1CyU,EAAIq/B,EAAQjpB,EAAM0xB,QAAUc,EAAc5oC,EAC1CkxB,EAAa,CACjB3lC,EAAAA,EACAyU,EAAAA,EACAmB,MAAOynC,EAAcznC,MACrBwiB,KAAM5jB,MAAMxU,IAAMwU,MAAMC,GACxB1Q,QAAAA,GAEF4jB,EAAGgtB,cAAchmB,EAAOvoB,EAAGu/B,EAAYtb,KAI7C8yB,GAAgBntC,GAAK,QACrBmtC,GAAgBn0B,SAAW,CACzB2jB,mBAAoB,OACpBmD,gBAAiB,QACjB3lB,UAAW,IACXY,UAAU,EACVrB,SAAU,CACRyG,KAAM,CACJ5iB,KAAM,WAIZ4vC,GAAgBz0B,UAAY,CAC1BuU,YAAa,EACbnS,OAAQ,CACNngB,EAAG,CACDrC,KAAM,kBAKZ,MAAMi1C,WAA0B7C,IA6ChC,SAAS8C,KACP,MAAM,IAAIz1C,MAAM,mFA5ClBw1C,GAAkBvtC,GAAK,UACvButC,GAAkBv0B,SAAW,CAC3B+B,UAAU,EACVxd,MAAM,GAERgwC,GAAkB70B,UAAY,CAC5B0B,YAAa,CACXC,KAAM,SAERM,QAAS,CACPssB,QAAS,CACP5uC,UAAW,CACT6uC,MAAK,IACI,GAETpI,MAAMhY,GACG,IAAMA,EAAKgY,MAAQ,KAAOhY,EAAK2jB,eAAiB,OAK/D3vB,OAAQ,CACN9qB,EAAG,CACDsI,KAAM,UAERmM,EAAG,CACDnM,KAAM,YAoBZ,MAAMm1C,GACJhxC,YAAY1I,GACVM,KAAKN,QAAUA,GAAW,GAE5B0I,UACE,OAAO+wC,KAET/wC,MAAMjI,EAAOk7B,GACX,OAAO8d,KAET/wC,OAAOixC,EAAWhe,GAChB,OAAO8d,KAET/wC,IAAIixC,EAAWC,EAAQC,GACrB,OAAOJ,KAET/wC,KAAK7L,EAAGC,EAAG+8C,GACT,OAAOJ,KAET/wC,QAAQixC,EAAWE,EAAMC,GACvB,OAAOL,KAET/wC,MAAMixC,EAAWE,GACf,OAAOJ,MAGXC,GAAY3oB,SAAW,SAASgpB,GAC9B19C,OAAO2mB,OAAO02B,GAAY9tC,UAAWmuC,IAEvC,IAAIC,GAAW,CACbC,MAAOP,IAGT,SAAS7hB,GAAoBxxB,EAAGmf,GAC9B,MAAI,WAAYnf,EACP,CACLpK,EAAGoK,EAAEpK,EACLyU,EAAGrK,EAAEqK,GAGFwpC,GAAsB7zC,EAAGmf,GAelC,SAAS20B,GAAaC,EAASnV,EAAMxkC,EAAO8lB,GAC1C,MAAMoe,WAACA,EAAUjlC,KAAEA,EAAI4pC,QAAEA,GAAW8Q,EAC9BrV,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAQqE,GAAW5pC,EAAK4C,OAAQ,CAC5D,MAAM+3C,EAAetV,EAAOuV,eAAiB5qB,GAAgBD,GAC7D,IAAKlJ,EACH,OAAO8zB,EAAa36C,EAAMulC,EAAMxkC,GAC3B,GAAIkkC,EAAW6B,eAAgB,CACpC,MAAMhM,EAAK96B,EAAK,GACVqQ,EAA+B,mBAAhByqB,EAAG+f,UAA2B/f,EAAG+f,SAAStV,GAC/D,GAAIl1B,EAAO,CACT,MAAM9H,EAAQoyC,EAAa36C,EAAMulC,EAAMxkC,EAAQsP,GACzC7H,EAAMmyC,EAAa36C,EAAMulC,EAAMxkC,EAAQsP,GAC7C,MAAO,CAACyf,GAAIvnB,EAAMunB,GAAID,GAAIrnB,EAAIqnB,MAIpC,MAAO,CAACC,GAAI,EAAGD,GAAI7vB,EAAK4C,OAAS,GAEnC,SAASk4C,GAAuBh1B,EAAOyf,EAAMwV,EAAU16C,EAASwmB,GAC9D,MAAMgd,EAAW/d,EAAMk1B,+BACjBj6C,EAAQg6C,EAASxV,GACvB,IAAK,IAAI5iC,EAAI,EAAGmL,EAAO+1B,EAASjhC,OAAQD,EAAImL,IAAQnL,EAAG,CACrD,MAAM2I,MAACA,EAAKtL,KAAEA,GAAQ6jC,EAASlhC,IACzBmtB,GAACA,EAAED,GAAEA,GAAM4qB,GAAa5W,EAASlhC,GAAI4iC,EAAMxkC,EAAO8lB,GACxD,IAAK,IAAIpE,EAAIqN,EAAIrN,GAAKoN,IAAMpN,EAAG,CAC7B,MAAMxjB,EAAUe,EAAKyiB,GAChBxjB,EAAQ01B,MACXt0B,EAAQpB,EAASqM,EAAOmX,KAchC,SAASw4B,GAAkBn1B,EAAOi1B,EAAUxV,EAAM2V,GAChD,MAAM1qB,EAAQ,GACd,IAAKvF,GAAe8vB,EAAUj1B,EAAM8lB,UAAW9lB,EAAMq1B,aACnD,OAAO3qB,EAQT,OADAsqB,GAAuBh1B,EAAOyf,EAAMwV,GALb,SAAS97C,EAASgP,EAAc3C,GACjDrM,EAAQm8C,QAAQL,EAASx+C,EAAGw+C,EAAS/pC,EAAGkqC,IAC1C1qB,EAAM9rB,KAAK,CAACzF,QAAAA,EAASgP,aAAAA,EAAc3C,MAAAA,OAGuB,GACvDklB,EAET,SAAS6qB,GAAgBv1B,EAAOi1B,EAAUxV,EAAM1e,EAAWq0B,GACzD,MAAMI,EAvBR,SAAkC/V,GAChC,MAAMgW,GAA8B,IAAvBhW,EAAKzhC,QAAQ,KACpB03C,GAA8B,IAAvBjW,EAAKzhC,QAAQ,KAC1B,OAAO,SAAS+N,EAAKC,GACnB,MAAM2pC,EAASF,EAAOlzC,KAAKC,IAAIuJ,EAAItV,EAAIuV,EAAIvV,GAAK,EAC1Cm/C,EAASF,EAAOnzC,KAAKC,IAAIuJ,EAAIb,EAAIc,EAAId,GAAK,EAChD,OAAO3I,KAAK0J,KAAK1J,KAAKqI,IAAI+qC,EAAQ,GAAKpzC,KAAKqI,IAAIgrC,EAAQ,KAiBnCC,CAAyBpW,GAChD,IAAIqW,EAAc9uC,OAAO+C,kBACrB2gB,EAAQ,GACZ,IAAKvF,GAAe8vB,EAAUj1B,EAAM8lB,UAAW9lB,EAAMq1B,aACnD,OAAO3qB,EAmBT,OADAsqB,GAAuBh1B,EAAOyf,EAAMwV,GAhBb,SAAS97C,EAASgP,EAAc3C,GACrD,GAAIub,IAAc5nB,EAAQm8C,QAAQL,EAASx+C,EAAGw+C,EAAS/pC,EAAGkqC,GACxD,OAEF,MAAMjK,EAAShyC,EAAQ48C,eAAeX,GACtC,IAAKjwB,GAAegmB,EAAQnrB,EAAM8lB,UAAW9lB,EAAMq1B,eAAiBl8C,EAAQm8C,QAAQL,EAASx+C,EAAGw+C,EAAS/pC,EAAGkqC,GAC1G,OAEF,MAAMY,EAAWR,EAAeP,EAAU9J,GACtC6K,EAAWF,GACbprB,EAAQ,CAAC,CAACvxB,QAAAA,EAASgP,aAAAA,EAAc3C,MAAAA,IACjCswC,EAAcE,GACLA,IAAaF,GACtBprB,EAAM9rB,KAAK,CAACzF,QAAAA,EAASgP,aAAAA,EAAc3C,MAAAA,OAIhCklB,EAET,SAASurB,GAAaj2B,EAAOnf,EAAGrG,EAAS46C,GACvC,MAAMH,EAAW5iB,GAAoBxxB,EAAGmf,GAClC0K,EAAQ,GACR+U,EAAOjlC,EAAQilC,KACfyW,EAAuB,MAATzW,EAAe,WAAa,WAChD,IAAI0W,GAAiB,EASrB,OA5GF,SAAiCn2B,EAAOzlB,GACtC,MAAMwjC,EAAW/d,EAAMk1B,+BACvB,IAAI1vC,EAAOtL,EAAMf,EACjB,IAAK,IAAI0D,EAAI,EAAGmL,EAAO+1B,EAASjhC,OAAQD,EAAImL,IAAQnL,EAAG,GACnD2I,MAAAA,EAAOtL,KAAAA,GAAQ6jC,EAASlhC,IAC1B,IAAK,IAAI8f,EAAI,EAAGuG,EAAOhpB,EAAK4C,OAAQ6f,EAAIuG,IAAQvG,EAC9CxjB,EAAUe,EAAKyiB,GACVxjB,EAAQ01B,MACXt0B,EAAQpB,EAASqM,EAAOmX,IA4F9By5B,CAAwBp2B,GAAO,CAAC7mB,EAASgP,EAAc3C,KACjDrM,EAAQ+8C,GAAajB,EAASxV,GAAO2V,IACvC1qB,EAAM9rB,KAAK,CAACzF,QAAAA,EAASgP,aAAAA,EAAc3C,MAAAA,IAEjCrM,EAAQm8C,QAAQL,EAASx+C,EAAGw+C,EAAS/pC,EAAGkqC,KAC1Ce,GAAiB,MAGjB37C,EAAQumB,YAAco1B,EACjB,GAEFzrB,EAET,IAAI2rB,GAAc,CAChBC,MAAO,CACLpzC,MAAM8c,EAAOnf,EAAGrG,EAAS46C,GACvB,MAAMH,EAAW5iB,GAAoBxxB,EAAGmf,GAClCyf,EAAOjlC,EAAQilC,MAAQ,IACvB/U,EAAQlwB,EAAQumB,UAClBo0B,GAAkBn1B,EAAOi1B,EAAUxV,EAAM2V,GACzCG,GAAgBv1B,EAAOi1B,EAAUxV,GAAM,EAAO2V,GAC5Cj1B,EAAW,GACjB,OAAKuK,EAAM5tB,QAGXkjB,EAAMk1B,+BAA+Bj+C,SAASsnC,IAC5C,MAAM/4B,EAAQklB,EAAM,GAAGllB,MACjBrM,EAAUolC,EAAKrkC,KAAKsL,GACtBrM,IAAYA,EAAQ01B,MACtB1O,EAASvhB,KAAK,CAACzF,QAAAA,EAASgP,aAAco2B,EAAK/4B,MAAOA,MAAAA,OAG/C2a,GATE,IAWXjd,QAAQ8c,EAAOnf,EAAGrG,EAAS46C,GACzB,MAAMH,EAAW5iB,GAAoBxxB,EAAGmf,GAClCyf,EAAOjlC,EAAQilC,MAAQ,KAC7B,IAAI/U,EAAQlwB,EAAQumB,UAChBo0B,GAAkBn1B,EAAOi1B,EAAUxV,EAAM2V,GAC3CG,GAAgBv1B,EAAOi1B,EAAUxV,GAAM,EAAO2V,GAChD,GAAI1qB,EAAM5tB,OAAS,EAAG,CACpB,MAAMqL,EAAeuiB,EAAM,GAAGviB,aACxBjO,EAAO8lB,EAAM2iB,eAAex6B,GAAcjO,KAChDwwB,EAAQ,GACR,IAAK,IAAI7tB,EAAI,EAAGA,EAAI3C,EAAK4C,SAAUD,EACjC6tB,EAAM9rB,KAAK,CAACzF,QAASe,EAAK2C,GAAIsL,aAAAA,EAAc3C,MAAO3I,IAGvD,OAAO6tB,GAETtF,MAAK,CAACpF,EAAOnf,EAAGrG,EAAS46C,IAGhBD,GAAkBn1B,EAFRqS,GAAoBxxB,EAAGmf,GAC3BxlB,EAAQilC,MAAQ,KACmB2V,GAElDmB,QAAO,CAACv2B,EAAOnf,EAAGrG,EAAS46C,IAGlBG,GAAgBv1B,EAFNqS,GAAoBxxB,EAAGmf,GAC3BxlB,EAAQilC,MAAQ,KACiBjlC,EAAQumB,UAAWq0B,GAEnE3+C,EAAC,CAACupB,EAAOnf,EAAGrG,EAAS46C,KACnB56C,EAAQilC,KAAO,IACRwW,GAAaj2B,EAAOnf,EAAGrG,EAAS46C,IAEzClqC,EAAC,CAAC8U,EAAOnf,EAAGrG,EAAS46C,KACnB56C,EAAQilC,KAAO,IACRwW,GAAaj2B,EAAOnf,EAAGrG,EAAS46C,MAK7C,MAAMoB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,GAAiBprC,EAAO4pC,GAC/B,OAAO5pC,EAAMvN,QAAOqS,GAAKA,EAAE9G,MAAQ4rC,IAErC,SAASyB,GAA4BrrC,EAAOo0B,GAC1C,OAAOp0B,EAAMvN,QAAOqS,IAA0C,IAArCqmC,GAAiBx4C,QAAQmS,EAAE9G,MAAe8G,EAAEwiB,IAAI8M,OAASA,IAEpF,SAASkX,GAAatrC,EAAO1D,GAC3B,OAAO0D,EAAMg9B,MAAK,CAAChxC,EAAGC,KACpB,MAAM2Q,EAAKN,EAAUrQ,EAAID,EACnB6Q,EAAKP,EAAUtQ,EAAIC,EACzB,OAAO2Q,EAAGkW,SAAWjW,EAAGiW,OACtBlW,EAAGzC,MAAQ0C,EAAG1C,MACdyC,EAAGkW,OAASjW,EAAGiW,UAkCrB,SAASy4B,GAAcC,EAAS/0C,GAC9B,MAAM48B,EAdR,SAAqBmY,GACnB,MAAMnY,EAAS,GACf,IAAK,MAAMoY,KAAQD,EAAS,CAC1B,MAAM3Y,MAACA,EAAK70B,IAAEA,EAAG0tC,YAAEA,GAAeD,EAClC,IAAK5Y,IAAUsY,GAAiBjqB,SAASljB,GACvC,SAEF,MAAM2jB,EAAS0R,EAAOR,KAAWQ,EAAOR,GAAS,CAACjH,MAAO,EAAG+f,OAAQ,EAAG74B,OAAQ,EAAG7lB,KAAM,IACxF00B,EAAOiK,QACPjK,EAAO7O,QAAU44B,EAEnB,OAAOrY,EAGQuY,CAAYJ,IACrBK,aAACA,EAAYC,cAAEA,GAAiBr1C,EACtC,IAAIjF,EAAGmL,EAAMovC,EACb,IAAKv6C,EAAI,EAAGmL,EAAO6uC,EAAQ/5C,OAAQD,EAAImL,IAAQnL,EAAG,CAChDu6C,EAASP,EAAQh6C,GACjB,MAAMw6C,SAACA,GAAYD,EAAOzkB,IACpBuL,EAAQQ,EAAO0Y,EAAOlZ,OACtBvD,EAASuD,GAASkZ,EAAOL,YAAc7Y,EAAM/f,OAC/Ci5B,EAAOzN,YACTyN,EAAOx0B,MAAQ+X,EAASA,EAASuc,EAAeG,GAAYv1C,EAAOw1C,eACnEF,EAAOrzB,OAASozB,IAEhBC,EAAOx0B,MAAQs0B,EACfE,EAAOrzB,OAAS4W,EAASA,EAASwc,EAAgBE,GAAYv1C,EAAOy1C,iBAGzE,OAAO7Y,EAoBT,SAAS8Y,GAAeC,EAAY3R,EAAWzuC,EAAGC,GAChD,OAAOiL,KAAKiJ,IAAIisC,EAAWpgD,GAAIyuC,EAAUzuC,IAAMkL,KAAKiJ,IAAIisC,EAAWngD,GAAIwuC,EAAUxuC,IAEnF,SAASogD,GAAiBD,EAAYE,GACpCF,EAAWhyB,IAAMljB,KAAKiJ,IAAIisC,EAAWhyB,IAAKkyB,EAAWlyB,KACrDgyB,EAAWlyB,KAAOhjB,KAAKiJ,IAAIisC,EAAWlyB,KAAMoyB,EAAWpyB,MACvDkyB,EAAW/xB,OAASnjB,KAAKiJ,IAAIisC,EAAW/xB,OAAQiyB,EAAWjyB,QAC3D+xB,EAAWjyB,MAAQjjB,KAAKiJ,IAAIisC,EAAWjyB,MAAOmyB,EAAWnyB,OAE3D,SAASoyB,GAAW9R,EAAWhkC,EAAQs1C,EAAQ1Y,GAC7C,MAAMr1B,IAACA,EAAGspB,IAAEA,GAAOykB,EACbK,EAAa3R,EAAU2R,WAC7B,IAAK3wC,GAASuC,GAAM,CACd+tC,EAAO9+C,OACTwtC,EAAUz8B,IAAQ+tC,EAAO9+C,MAE3B,MAAM4lC,EAAQQ,EAAO0Y,EAAOlZ,QAAU,CAAC5lC,KAAM,EAAG2+B,MAAO,GACvDiH,EAAM5lC,KAAOiK,KAAKiJ,IAAI0yB,EAAM5lC,KAAM8+C,EAAOzN,WAAahX,EAAI5O,OAAS4O,EAAI/P,OACvEw0B,EAAO9+C,KAAO4lC,EAAM5lC,KAAO4lC,EAAMjH,MACjC6O,EAAUz8B,IAAQ+tC,EAAO9+C,KAEvBq6B,EAAIklB,YACNH,GAAiBD,EAAY9kB,EAAIklB,cAEnC,MAAMC,EAAWv1C,KAAKiJ,IAAI,EAAG1J,EAAOi2C,WAAaP,GAAeC,EAAY3R,EAAW,OAAQ,UACzFkS,EAAYz1C,KAAKiJ,IAAI,EAAG1J,EAAOm2C,YAAcT,GAAeC,EAAY3R,EAAW,MAAO,WAC1FoS,EAAeJ,IAAahS,EAAU70B,EACtCknC,EAAgBH,IAAclS,EAAUv1B,EAG9C,OAFAu1B,EAAU70B,EAAI6mC,EACdhS,EAAUv1B,EAAIynC,EACPZ,EAAOzN,WACV,CAACyO,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,GAcnC,SAASI,GAAW3O,EAAY7D,GAC9B,MAAM2R,EAAa3R,EAAU2R,WAC7B,SAASc,EAAmBvmB,GAC1B,MAAM1M,EAAS,CAACC,KAAM,EAAGE,IAAK,EAAGD,MAAO,EAAGE,OAAQ,GAInD,OAHAsM,EAAU/6B,SAASoS,IACjBic,EAAOjc,GAAO9G,KAAKiJ,IAAIs6B,EAAUz8B,GAAMouC,EAAWpuC,OAE7Cic,EAET,OACIizB,EADG5O,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,WAEjC,SAAS6O,GAASC,EAAO3S,EAAWhkC,EAAQ48B,GAC1C,MAAMga,EAAa,GACnB,IAAI77C,EAAGmL,EAAMovC,EAAQzkB,EAAKgmB,EAAO7G,EACjC,IAAKj1C,EAAI,EAAGmL,EAAOywC,EAAM37C,OAAQ67C,EAAQ,EAAG97C,EAAImL,IAAQnL,EAAG,CACzDu6C,EAASqB,EAAM57C,GACf81B,EAAMykB,EAAOzkB,IACbA,EAAI9yB,OACFu3C,EAAOx0B,OAASkjB,EAAU70B,EAC1BmmC,EAAOrzB,QAAU+hB,EAAUv1B,EAC3B+nC,GAAWlB,EAAOzN,WAAY7D,IAEhC,MAAMsS,KAACA,EAAIC,MAAEA,GAAST,GAAW9R,EAAWhkC,EAAQs1C,EAAQ1Y,GAC5Dia,GAASP,GAAQM,EAAW57C,OAC5Bg1C,EAAUA,GAAWuG,EAChB1lB,EAAI0kB,UACPqB,EAAW95C,KAAKw4C,GAGpB,OAAOuB,GAASH,GAASE,EAAY5S,EAAWhkC,EAAQ48B,IAAWoT,EAErE,SAAS8G,GAAWjmB,EAAKpN,EAAME,EAAK7C,EAAOmB,GACzC4O,EAAIlN,IAAMA,EACVkN,EAAIpN,KAAOA,EACXoN,EAAInN,MAAQD,EAAO3C,EACnB+P,EAAIjN,OAASD,EAAM1B,EACnB4O,EAAI/P,MAAQA,EACZ+P,EAAI5O,OAASA,EAEf,SAAS80B,GAAWJ,EAAO3S,EAAWhkC,EAAQ48B,GAC5C,MAAMoa,EAAch3C,EAAOi3C,QAC3B,IAAItiD,EAACA,EAACyU,EAAEA,GAAK46B,EACb,IAAK,MAAMsR,KAAUqB,EAAO,CAC1B,MAAM9lB,EAAMykB,EAAOzkB,IACbuL,EAAQQ,EAAO0Y,EAAOlZ,QAAU,CAACjH,MAAO,EAAG+f,OAAQ,EAAG74B,OAAQ,GAC9DA,EAAUi5B,EAAOL,YAAc7Y,EAAM/f,QAAW,EACtD,GAAIi5B,EAAOzN,WAAY,CACrB,MAAM/mB,EAAQkjB,EAAU70B,EAAIkN,EACtB4F,EAASma,EAAM5lC,MAAQq6B,EAAI5O,OAC7Bta,GAAQy0B,EAAMz7B,SAChByI,EAAIgzB,EAAMz7B,OAERkwB,EAAI0kB,SACNuB,GAAWjmB,EAAKmmB,EAAYvzB,KAAMra,EAAGpJ,EAAOi2C,WAAae,EAAYtzB,MAAQszB,EAAYvzB,KAAMxB,GAE/F60B,GAAWjmB,EAAKmT,EAAUvgB,KAAO2Y,EAAM8Y,OAAQ9rC,EAAG0X,EAAOmB,GAE3Dma,EAAMz7B,MAAQyI,EACdgzB,EAAM8Y,QAAUp0B,EAChB1X,EAAIynB,EAAIjN,WACH,CACL,MAAM3B,EAAS+hB,EAAUv1B,EAAI4N,EACvByE,EAAQsb,EAAM5lC,MAAQq6B,EAAI/P,MAC5BnZ,GAAQy0B,EAAMz7B,SAChBhM,EAAIynC,EAAMz7B,OAERkwB,EAAI0kB,SACNuB,GAAWjmB,EAAKl8B,EAAGqiD,EAAYrzB,IAAK7C,EAAO9gB,EAAOm2C,YAAca,EAAYpzB,OAASozB,EAAYrzB,KAEjGmzB,GAAWjmB,EAAKl8B,EAAGqvC,EAAUrgB,IAAMyY,EAAM8Y,OAAQp0B,EAAOmB,GAE1Dma,EAAMz7B,MAAQhM,EACdynC,EAAM8Y,QAAUjzB,EAChBttB,EAAIk8B,EAAInN,OAGZsgB,EAAUrvC,EAAIA,EACdqvC,EAAU56B,EAAIA,EAEhBuU,GAASH,IAAI,SAAU,CACrBy5B,QAAS,CACPtzB,IAAK,EACLD,MAAO,EACPE,OAAQ,EACRH,KAAM,KAGV,IAAIsxB,GAAU,CACZ3zC,OAAO8c,EAAOuN,GACPvN,EAAMy4B,QACTz4B,EAAMy4B,MAAQ,IAEhBlrB,EAAK8pB,SAAW9pB,EAAK8pB,WAAY,EACjC9pB,EAAK0nB,SAAW1nB,EAAK0nB,UAAY,MACjC1nB,EAAKpP,OAASoP,EAAKpP,QAAU,EAC7BoP,EAAKyrB,QAAUzrB,EAAKyrB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH/1C,KAAK4iC,GACHvY,EAAKoM,KAAKmM,OAIhB9lB,EAAMy4B,MAAM75C,KAAK2uB,IAEnBrqB,UAAU8c,EAAOk5B,GACf,MAAM1zC,EAAQwa,EAAMy4B,MAAQz4B,EAAMy4B,MAAMz6C,QAAQk7C,IAAe,GAChD,IAAX1zC,GACFwa,EAAMy4B,MAAMhzC,OAAOD,EAAO,IAG9BtC,UAAU8c,EAAOuN,EAAM/yB,GACrB+yB,EAAK8pB,SAAW78C,EAAQ68C,SACxB9pB,EAAK0nB,SAAWz6C,EAAQy6C,SACxB1nB,EAAKpP,OAAS3jB,EAAQ2jB,QAExBjb,OAAO8c,EAAO4C,EAAOmB,EAAQo1B,GAC3B,IAAKn5B,EACH,OAEF,MAAM+4B,EAAU7vB,GAAUlJ,EAAMxlB,QAAQ48C,OAAO2B,SACzCzB,EAAiB/0C,KAAKiJ,IAAIoX,EAAQm2B,EAAQn2B,MAAO,GACjD20B,EAAkBh1C,KAAKiJ,IAAIuY,EAASg1B,EAAQh1B,OAAQ,GACpD00B,EA7LV,SAA0BA,GACxB,MAAMW,EAnDR,SAAmBX,GACjB,MAAMW,EAAc,GACpB,IAAIv8C,EAAGmL,EAAM2qB,EAAKtpB,EAAK60B,EAAO6Y,EAC9B,IAAKl6C,EAAI,EAAGmL,GAAQywC,GAAS,IAAI37C,OAAQD,EAAImL,IAAQnL,EACnD81B,EAAM8lB,EAAM57C,KACVo4C,SAAU5rC,EAAK7O,SAAU0jC,MAAAA,EAAO6Y,YAAAA,EAAc,IAAMpkB,GACtDymB,EAAYx6C,KAAK,CACf4G,MAAO3I,EACP81B,IAAAA,EACAtpB,IAAAA,EACAsgC,WAAYhX,EAAI8X,eAChBtsB,OAAQwU,EAAIxU,OACZ+f,MAAOA,GAAU70B,EAAM60B,EACvB6Y,YAAAA,IAGJ,OAAOqC,EAmCaC,CAAUZ,GACxBpB,EAAWV,GAAayC,EAAYt7C,QAAOg5C,GAAQA,EAAKnkB,IAAI0kB,YAAW,GACvE9xB,EAAOoxB,GAAaF,GAAiB2C,EAAa,SAAS,GAC3D5zB,EAAQmxB,GAAaF,GAAiB2C,EAAa,UACnD3zB,EAAMkxB,GAAaF,GAAiB2C,EAAa,QAAQ,GACzD1zB,EAASixB,GAAaF,GAAiB2C,EAAa,WACpDE,EAAmB5C,GAA4B0C,EAAa,KAC5DG,EAAiB7C,GAA4B0C,EAAa,KAChE,MAAO,CACL/B,SAAAA,EACAmC,WAAYj0B,EAAK4iB,OAAO1iB,GACxBg0B,eAAgBj0B,EAAM2iB,OAAOoR,GAAgBpR,OAAOziB,GAAQyiB,OAAOmR,GACnExT,UAAW2Q,GAAiB2C,EAAa,aACzCM,SAAUn0B,EAAK4iB,OAAO3iB,GAAO2iB,OAAOoR,GACpC5P,WAAYlkB,EAAI0iB,OAAOziB,GAAQyiB,OAAOmR,IA8KxBK,CAAiB35B,EAAMy4B,OAC/BmB,EAAgBnB,EAAMiB,SACtBG,EAAkBpB,EAAM9O,WAC9BliC,GAAKuY,EAAMy4B,OAAO9lB,IACgB,mBAArBA,EAAImnB,cACbnnB,EAAImnB,kBAGR,MAAMC,EAA0BH,EAAczf,QAAO,CAAC2V,EAAOgH,IAC3DA,EAAKnkB,IAAIn4B,UAAwC,IAA7Bs8C,EAAKnkB,IAAIn4B,QAAQg5C,QAAoB1D,EAAQA,EAAQ,GAAG,IAAM,EAC9EhuC,EAASjL,OAAO+vC,OAAO,CAC3BmR,WAAYn1B,EACZq1B,YAAal0B,EACbg1B,QAAAA,EACAzB,eAAAA,EACAC,gBAAAA,EACAL,aAAcI,EAAiB,EAAIyC,EACnC5C,cAAeI,EAAkB,IAE7BE,EAAa5gD,OAAO2mB,OAAO,GAAIu7B,GACrCrB,GAAiBD,EAAYvuB,GAAUiwB,IACvC,MAAMrT,EAAYjvC,OAAO2mB,OAAO,CAC9Bi6B,WAAAA,EACAxmC,EAAGqmC,EACH/mC,EAAGgnC,EACH9gD,EAAGsiD,EAAQxzB,KACXra,EAAG6tC,EAAQtzB,KACVszB,GACGra,EAASkY,GAAcgD,EAAczR,OAAO0R,GAAkB/3C,GACpE02C,GAASC,EAAMpB,SAAUvR,EAAWhkC,EAAQ48B,GAC5C8Z,GAASoB,EAAe9T,EAAWhkC,EAAQ48B,GACvC8Z,GAASqB,EAAiB/T,EAAWhkC,EAAQ48B,IAC/C8Z,GAASoB,EAAe9T,EAAWhkC,EAAQ48B,GAzKjD,SAA0BoH,GACxB,MAAM2R,EAAa3R,EAAU2R,WAC7B,SAASuC,EAAU3wC,GACjB,MAAM4wC,EAAS13C,KAAKiJ,IAAIisC,EAAWpuC,GAAOy8B,EAAUz8B,GAAM,GAE1D,OADAy8B,EAAUz8B,IAAQ4wC,EACXA,EAETnU,EAAU56B,GAAK8uC,EAAU,OACzBlU,EAAUrvC,GAAKujD,EAAU,QACzBA,EAAU,SACVA,EAAU,UAiKRE,CAAiBpU,GACjB+S,GAAWJ,EAAMe,WAAY1T,EAAWhkC,EAAQ48B,GAChDoH,EAAUrvC,GAAKqvC,EAAU70B,EACzB60B,EAAU56B,GAAK46B,EAAUv1B,EACzBsoC,GAAWJ,EAAMgB,eAAgB3T,EAAWhkC,EAAQ48B,GACpD1e,EAAM8lB,UAAY,CAChBvgB,KAAMugB,EAAUvgB,KAChBE,IAAKqgB,EAAUrgB,IACfD,MAAOsgB,EAAUvgB,KAAOugB,EAAU70B,EAClCyU,OAAQogB,EAAUrgB,IAAMqgB,EAAUv1B,EAClCwT,OAAQ+hB,EAAUv1B,EAClBqS,MAAOkjB,EAAU70B,GAEnBxJ,GAAKgxC,EAAM3S,WAAYsR,IACrB,MAAMzkB,EAAMykB,EAAOzkB,IACnB97B,OAAO2mB,OAAOmV,EAAK3S,EAAM8lB,WACzBnT,EAAI9yB,OAAOimC,EAAU70B,EAAG60B,EAAUv1B,QAKxC,MAAM4pC,GACJj3C,eAAeygB,EAAQ+P,IACvBxwB,eAAeuB,GACb,OAAO,EAETvB,iBAAiB8c,EAAOjhB,EAAMsrB,IAC9BnnB,oBAAoB8c,EAAOjhB,EAAMsrB,IACjCnnB,sBACE,OAAO,EAETA,eAAe/J,EAASypB,EAAOmB,EAAQ2P,GAGrC,OAFA9Q,EAAQrgB,KAAKiJ,IAAI,EAAGoX,GAASzpB,EAAQypB,OACrCmB,EAASA,GAAU5qB,EAAQ4qB,OACpB,CACLnB,MAAAA,EACAmB,OAAQxhB,KAAKiJ,IAAI,EAAGkoB,EAAcnxB,KAAKsI,MAAM+X,EAAQ8Q,GAAe3P,IAGxE7gB,WAAWygB,GACT,OAAO,GAIX,MAAMy2B,WAAsBD,GAC1Bj3C,eAAeqqB,GACb,OAAOA,GAAQA,EAAK3J,YAAc2J,EAAK3J,WAAW,OAAS,MAI/D,MACMy2B,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgB9/C,GAAmB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAM+/C,KAAuBpmB,IAA+B,CAACE,SAAS,GAItE,SAASmmB,GAAej7B,EAAOjhB,EAAMsrB,GACnCrK,EAAM2D,OAAOjpB,oBAAoBqE,EAAMsrB,EAAU2wB,IAanD,SAASE,GAAqBl7B,EAAOjhB,EAAMsrB,GACzC,MAAM1G,EAAS3D,EAAM2D,OAEfxqB,EADYwqB,GAAU8N,GAAe9N,IACdA,EACvBw3B,EAAW,IAAIC,kBAAiBC,IACpC,MAAMntB,EAASuD,GAAet4B,GAC9BkiD,EAAQpkD,SAAQ6xC,IACd,IAAK,IAAIjsC,EAAI,EAAGA,EAAIisC,EAAMwS,WAAWx+C,OAAQD,IAAK,CAChD,MAAM0+C,EAAQzS,EAAMwS,WAAWz+C,GAC3B0+C,IAAUpiD,GAAWoiD,IAAUrtB,GACjC7D,EAASye,EAAMtwC,eAMvB,OADA2iD,EAASK,QAAQ5iD,SAAU,CAAC6iD,WAAW,EAAMC,SAAS,IAC/CP,EAET,SAASQ,GAAqB37B,EAAOjhB,EAAMsrB,GACzC,MAAM1G,EAAS3D,EAAM2D,OACfmQ,EAAYnQ,GAAU8N,GAAe9N,GAC3C,IAAKmQ,EACH,OAEF,MAAMqnB,EAAW,IAAIC,kBAAiBC,IACpCA,EAAQpkD,SAAQ6xC,IACd,IAAK,IAAIjsC,EAAI,EAAGA,EAAIisC,EAAM8S,aAAa9+C,OAAQD,IAC7C,GAAIisC,EAAM8S,aAAa/+C,KAAO8mB,EAAQ,CACpC0G,IACA,aAMR,OADA8wB,EAASK,QAAQ1nB,EAAW,CAAC2nB,WAAW,IACjCN,EAET,MAAMU,GAAqB,IAAIn3C,IAC/B,IAAIo3C,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMxkD,OAAOuoB,iBACfi8B,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB5kD,SAAQ,CAACqlC,EAAQtc,KAC9BA,EAAMwD,0BAA4Bw4B,GACpC1f,QAgBN,SAAS2f,GAAqBj8B,EAAOjhB,EAAMsrB,GACzC,MAAM1G,EAAS3D,EAAM2D,OACfmQ,EAAYnQ,GAAU8N,GAAe9N,GAC3C,IAAKmQ,EACH,OAEF,MAAMwI,EAASv2B,IAAU,CAAC6c,EAAOmB,KAC/B,MAAM9S,EAAI6iB,EAAUI,YACpB7J,EAASzH,EAAOmB,GACZ9S,EAAI6iB,EAAUI,aAChB7J,MAED7yB,QACG2jD,EAAW,IAAIe,gBAAeb,IAClC,MAAMvS,EAAQuS,EAAQ,GAChBz4B,EAAQkmB,EAAMqT,YAAYv5B,MAC1BmB,EAAS+kB,EAAMqT,YAAYp4B,OACnB,IAAVnB,GAA0B,IAAXmB,GAGnBuY,EAAO1Z,EAAOmB,MAIhB,OAFAo3B,EAASK,QAAQ1nB,GAlCnB,SAAuC9T,EAAOsc,GACvCuf,GAAmBvjD,MACtBd,OAAOiD,iBAAiB,SAAUshD,IAEpCF,GAAmBv8B,IAAIU,EAAOsc,GA+B9B8f,CAA8Bp8B,EAAOsc,GAC9B6e,EAET,SAASkB,GAAgBr8B,EAAOjhB,EAAMo8C,GAChCA,GACFA,EAASmB,aAEE,WAATv9C,GApCN,SAAyCihB,GACvC67B,GAAmBzjD,OAAO4nB,GACrB67B,GAAmBvjD,MACtBd,OAAOkD,oBAAoB,SAAUqhD,IAkCrCQ,CAAgCv8B,GAGpC,SAASw8B,GAAqBx8B,EAAOjhB,EAAMsrB,GACzC,MAAM1G,EAAS3D,EAAM2D,OACfkI,EAAQ9lB,IAAWzL,IACL,OAAd0lB,EAAM5f,KACRiqB,EAhHN,SAAyB/vB,EAAO0lB,GAC9B,MAAMjhB,EAAOs7C,GAAY//C,EAAMyE,OAASzE,EAAMyE,MACxCtI,EAACA,EAACyU,EAAEA,GAAKwpC,GAAsBp6C,EAAO0lB,GAC5C,MAAO,CACLjhB,KAAAA,EACAihB,MAAAA,EACA4S,OAAQt4B,EACR7D,OAASkpB,IAANlpB,EAAkBA,EAAI,KACzByU,OAASyU,IAANzU,EAAkBA,EAAI,MAwGduxC,CAAgBniD,EAAO0lB,MAEjCA,GAAQ7Z,IACT,MAAM7L,EAAQ6L,EAAK,GACnB,MAAO,CAAC7L,EAAOA,EAAMw4B,QAASx4B,EAAMy4B,YAGtC,OA7HF,SAAqBt6B,EAAMsG,EAAMsrB,GAC/B5xB,EAAKgC,iBAAiBsE,EAAMsrB,EAAU2wB,IA2HtC0B,CAAY/4B,EAAQ5kB,EAAM8sB,GACnBA,EAET,MAAM8wB,WAAoBxC,GACxBj3C,eAAeygB,EAAQ+P,GACrB,MAAMjvB,EAAUkf,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAInf,GAAWA,EAAQkf,SAAWA,GAtKtC,SAAoBA,EAAQ+P,GAC1B,MAAMt6B,EAAQuqB,EAAOvqB,MACfwjD,EAAej5B,EAAOxoB,aAAa,UACnC0hD,EAAcl5B,EAAOxoB,aAAa,SAcxC,GAbAwoB,EAAkB,SAAI,CACpB0V,QAAS,CACPtV,OAAQ64B,EACRh6B,MAAOi6B,EACPzjD,MAAO,CACLo6C,QAASp6C,EAAMo6C,QACfzvB,OAAQ3qB,EAAM2qB,OACdnB,MAAOxpB,EAAMwpB,SAInBxpB,EAAMo6C,QAAUp6C,EAAMo6C,SAAW,QACjCp6C,EAAMo5B,UAAYp5B,EAAMo5B,WAAa,aACjCuoB,GAAc8B,GAAc,CAC9B,MAAMC,EAAe/nB,GAAapR,EAAQ,cACrBhE,IAAjBm9B,IACFn5B,EAAOf,MAAQk6B,GAGnB,GAAI/B,GAAc6B,GAChB,GAA4B,KAAxBj5B,EAAOvqB,MAAM2qB,OACfJ,EAAOI,OAASJ,EAAOf,OAAS8Q,GAAe,OAC1C,CACL,MAAMqpB,EAAgBhoB,GAAapR,EAAQ,eACrBhE,IAAlBo9B,IACFp5B,EAAOI,OAASg5B,IA0IlBC,CAAWr5B,EAAQ+P,GACZjvB,GAEF,KAETvB,eAAeuB,GACb,MAAMkf,EAASlf,EAAQkf,OACvB,IAAKA,EAAkB,SACrB,OAAO,EAET,MAAM0V,EAAU1V,EAAkB,SAAE0V,QACpC,CAAC,SAAU,SAASpiC,SAAS8xB,IAC3B,MAAM9tB,EAAQo+B,EAAQtQ,GAClBriB,GAAczL,GAChB0oB,EAAOzoB,gBAAgB6tB,GAEvBpF,EAAOvoB,aAAa2tB,EAAM9tB,MAG9B,MAAM7B,EAAQigC,EAAQjgC,OAAS,GAM/B,OALAvC,OAAOgP,KAAKzM,GAAOnC,SAASuE,IAC1BmoB,EAAOvqB,MAAMoC,GAAOpC,EAAMoC,MAE5BmoB,EAAOf,MAAQe,EAAOf,aACfe,EAAkB,UAClB,EAETzgB,iBAAiB8c,EAAOjhB,EAAMsrB,GAC5BvvB,KAAKJ,oBAAoBslB,EAAOjhB,GAChC,MAAMk+C,EAAUj9B,EAAMk9B,WAAal9B,EAAMk9B,SAAW,IAM9C3iD,EALW,CACf4iD,OAAQjC,GACRxhD,OAAQiiD,GACRrf,OAAQ2f,IAEel9C,IAASy9C,GAClCS,EAAQl+C,GAAQxE,EAAQylB,EAAOjhB,EAAMsrB,GAEvCnnB,oBAAoB8c,EAAOjhB,GACzB,MAAMk+C,EAAUj9B,EAAMk9B,WAAal9B,EAAMk9B,SAAW,IAC9CrxB,EAAQoxB,EAAQl+C,GACtB,IAAK8sB,EACH,QAEe,CACfsxB,OAAQd,GACR3iD,OAAQ2iD,GACR/f,OAAQ+f,IAEet9C,IAASk8C,IAC1Bj7B,EAAOjhB,EAAM8sB,GACrBoxB,EAAQl+C,QAAQ4gB,EAElBzc,sBACE,OAAO1L,OAAOuoB,iBAEhB7c,eAAeygB,EAAQf,EAAOmB,EAAQ2P,GACpC,OAAOH,GAAe5P,EAAQf,EAAOmB,EAAQ2P,GAE/CxwB,WAAWygB,GACT,MAAMmQ,EAAYrC,GAAe9N,GACjC,SAAUmQ,IAAaA,EAAUspB,cAWrC,MAAMC,GACJn6C,cACEpI,KAAKrE,OAAIkpB,EACT7kB,KAAKoQ,OAAIyU,EACT7kB,KAAKkB,QAAS,EACdlB,KAAKN,aAAUmlB,EACf7kB,KAAKsiC,iBAAczd,EAErBzc,gBAAgBkyC,GACd,MAAM3+C,EAACA,EAACyU,EAAEA,GAAKpQ,KAAKwiD,SAAS,CAAC,IAAK,KAAMlI,GACzC,MAAO,CAAC3+C,EAAAA,EAAGyU,EAAAA,GAEbhI,WACE,OAAO6H,GAASjQ,KAAKrE,IAAMsU,GAASjQ,KAAKoQ,GAE3ChI,SAASkB,EAAOm5C,GACd,MAAMn/B,EAAKtjB,KACLo+B,EAAQp+B,KAAKsiC,YACnB,IAAKmgB,IAAUrkB,EACb,OAAO9a,EAET,MAAMvZ,EAAM,GAIZ,OAHAT,EAAMnN,SAAQ8xB,IACZlkB,EAAIkkB,GAAQmQ,EAAMnQ,IAASmQ,EAAMnQ,GAAM/sB,SAAWk9B,EAAMnQ,GAAM0S,IAAMrd,EAAG2K,MAElElkB,GAGXw4C,GAAQ59B,SAAW,GACnB49B,GAAQG,mBAAgB79B,EAExB,MAAM89B,GAAa,CACjBj+B,OAAOvkB,GACE0L,GAAQ1L,GAASA,EAAQ,GAAKA,EAEvCiI,QAAQw6C,EAAWl4C,EAAOmjC,GACxB,GAAkB,IAAd+U,EACF,MAAO,IAET,MAAM/nB,EAAS76B,KAAKklB,MAAMxlB,QAAQm7B,OAClC,IAAIgoB,EACAntB,EAAQktB,EACZ,GAAI/U,EAAM7rC,OAAS,EAAG,CACpB,MAAM8gD,EAAUr7C,KAAKiJ,IAAIjJ,KAAKC,IAAImmC,EAAM,GAAG1tC,OAAQsH,KAAKC,IAAImmC,EAAMA,EAAM7rC,OAAS,GAAG7B,SAChF2iD,EAAU,MAAQA,EAAU,QAC9BD,EAAW,cAEbntB,EAmBN,SAAwBktB,EAAW/U,GACjC,IAAInY,EAAQmY,EAAM7rC,OAAS,EAAI6rC,EAAM,GAAG1tC,MAAQ0tC,EAAM,GAAG1tC,MAAQ0tC,EAAM,GAAG1tC,MAAQ0tC,EAAM,GAAG1tC,MACvFsH,KAAKC,IAAIguB,IAAU,GAAKktB,IAAcn7C,KAAKsI,MAAM6yC,KACnDltB,EAAQktB,EAAYn7C,KAAKsI,MAAM6yC,IAEjC,OAAOltB,EAxBKqtB,CAAeH,EAAW/U,GAEpC,MAAMmV,EAAW1zC,GAAM7H,KAAKC,IAAIguB,IAC1ButB,EAAax7C,KAAKiJ,IAAIjJ,KAAKgJ,KAAK,EAAIhJ,KAAKsI,MAAMizC,GAAW,IAAK,GAC/DtjD,EAAU,CAACmjD,SAAAA,EAAUK,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADAlnD,OAAO2mB,OAAOhjB,EAASM,KAAKN,QAAQmuC,MAAMxS,QACnCV,GAAaioB,EAAW/nB,EAAQn7B,IAEzC0I,YAAYw6C,EAAWl4C,EAAOmjC,GAC5B,GAAkB,IAAd+U,EACF,MAAO,IAET,MAAM9hB,EAAS8hB,EAAan7C,KAAKqI,IAAI,GAAIrI,KAAKsI,MAAMT,GAAMszC,KAC1D,OAAe,IAAX9hB,GAA2B,IAAXA,GAA2B,IAAXA,EAC3B6hB,GAAWS,QAAQrjD,KAAKC,KAAM4iD,EAAWl4C,EAAOmjC,GAElD,KAUX,IAAIwV,GAAQ,CAACV,WAAAA,IAqEb,SAASW,GAAS98B,EAAOqnB,GACvB,MAAM0V,EAAW/8B,EAAM9mB,QAAQmuC,MACzB2V,EAAaD,EAASE,eAwB9B,SAA2Bj9B,GACzB,MAAM8rB,EAAS9rB,EAAM9mB,QAAQ4yC,OACvBoR,EAAal9B,EAAMm9B,YACnBC,EAAWp9B,EAAMknB,QAAUgW,GAAcpR,EAAS,EAAI,GACtDuR,EAAWr9B,EAAMs9B,WAAaJ,EACpC,OAAOj8C,KAAKsI,MAAMtI,KAAKgJ,IAAImzC,EAAUC,IA7BQE,CAAkBv9B,GACzDw9B,EAAeT,EAASU,MAAMC,QA6CtC,SAAyBrW,GACvB,MAAMvW,EAAS,GACf,IAAIv1B,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO2gC,EAAM7rC,OAAQD,EAAImL,EAAMnL,IACrC8rC,EAAM9rC,GAAGkiD,OACX3sB,EAAOxzB,KAAK/B,GAGhB,OAAOu1B,EArDuC6sB,CAAgBtW,GAAS,GACjEuW,EAAkBJ,EAAahiD,OAC/BqiD,EAAQL,EAAa,GACrBzT,EAAOyT,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBZ,EAEpB,OAgDJ,SAAoB3V,EAAOyW,EAAUN,EAAc1Q,GACjD,IAEIvxC,EAFAo6B,EAAQ,EACRp5B,EAAOihD,EAAa,GAGxB,IADA1Q,EAAU7rC,KAAK88C,KAAKjR,GACfvxC,EAAI,EAAGA,EAAI8rC,EAAM7rC,OAAQD,IACxBA,IAAMgB,IACRuhD,EAASxgD,KAAK+pC,EAAM9rC,IACpBo6B,IACAp5B,EAAOihD,EAAa7nB,EAAQmX,IA1D9BkR,CAAW3W,EAAOyW,EAAUN,EAAcI,EAAkBZ,GACrDc,EAET,MAAMhR,EAqBR,SAA0B0Q,EAAcnW,EAAO2V,GAC7C,MAAMiB,EA4DR,SAAwBjyB,GACtB,MAAM1lB,EAAM0lB,EAAIxwB,OAChB,IAAID,EAAG2iD,EACP,GAAI53C,EAAM,EACR,OAAO,EAET,IAAK43C,EAAOlyB,EAAI,GAAIzwB,EAAI,EAAGA,EAAI+K,IAAO/K,EACpC,GAAIywB,EAAIzwB,GAAKywB,EAAIzwB,EAAI,KAAO2iD,EAC1B,OAAO,EAGX,OAAOA,EAvEkBC,CAAeX,GAClC1Q,EAAUzF,EAAM7rC,OAASwhD,EAC/B,IAAKiB,EACH,OAAOh9C,KAAKiJ,IAAI4iC,EAAS,GAE3B,MAAMsR,EDnpGR,SAAoBzkD,GAClB,MAAMm3B,EAAS,GACTnmB,EAAO1J,KAAK0J,KAAKhR,GACvB,IAAI4B,EACJ,IAAKA,EAAI,EAAGA,EAAIoP,EAAMpP,IAChB5B,EAAQ4B,GAAM,IAChBu1B,EAAOxzB,KAAK/B,GACZu1B,EAAOxzB,KAAK3D,EAAQ4B,IAOxB,OAJIoP,KAAiB,EAAPA,IACZmmB,EAAOxzB,KAAKqN,GAEdmmB,EAAOiW,MAAK,CAAChxC,EAAGC,IAAMD,EAAIC,IAAGwI,MACtBsyB,ECqoGSutB,CAAWJ,GAC3B,IAAK,IAAI1iD,EAAI,EAAGmL,EAAO03C,EAAQ5iD,OAAS,EAAGD,EAAImL,EAAMnL,IAAK,CACxD,MAAM89B,EAAS+kB,EAAQ7iD,GACvB,GAAI89B,EAASyT,EACX,OAAOzT,EAGX,OAAOp4B,KAAKiJ,IAAI4iC,EAAS,GAlCTwR,CAAiBd,EAAcnW,EAAO2V,GACtD,GAAIY,EAAkB,EAAG,CACvB,IAAIriD,EAAGmL,EACP,MAAM63C,EAAkBX,EAAkB,EAAI38C,KAAKkI,OAAO4gC,EAAO8T,IAAUD,EAAkB,IAAM,KAEnG,IADArwB,GAAK8Z,EAAOyW,EAAUhR,EAAS1nC,GAAcm5C,GAAmB,EAAIV,EAAQU,EAAiBV,GACxFtiD,EAAI,EAAGmL,EAAOk3C,EAAkB,EAAGriD,EAAImL,EAAMnL,IAChDgyB,GAAK8Z,EAAOyW,EAAUhR,EAAS0Q,EAAajiD,GAAIiiD,EAAajiD,EAAI,IAGnE,OADAgyB,GAAK8Z,EAAOyW,EAAUhR,EAAS/C,EAAM3kC,GAAcm5C,GAAmBlX,EAAM7rC,OAASuuC,EAAOwU,GACrFT,EAGT,OADAvwB,GAAK8Z,EAAOyW,EAAUhR,GACfgR,EA+CT,SAASvwB,GAAK8Z,EAAOyW,EAAUhR,EAAS0R,EAAYC,GAClD,MAAMt9C,EAAQ2E,GAAe04C,EAAY,GACnCp9C,EAAMH,KAAKgJ,IAAInE,GAAe24C,EAAUpX,EAAM7rC,QAAS6rC,EAAM7rC,QACnE,IACIA,EAAQD,EAAGgB,EADXo5B,EAAQ,EAQZ,IANAmX,EAAU7rC,KAAK88C,KAAKjR,GAChB2R,IACFjjD,EAASijD,EAAWD,EACpB1R,EAAUtxC,EAASyF,KAAKsI,MAAM/N,EAASsxC,IAEzCvwC,EAAO4E,EACA5E,EAAO,GACZo5B,IACAp5B,EAAO0E,KAAKkI,MAAMhI,EAAQw0B,EAAQmX,GAEpC,IAAKvxC,EAAI0F,KAAKiJ,IAAI/I,EAAO,GAAI5F,EAAI6F,EAAK7F,IAChCA,IAAMgB,IACRuhD,EAASxgD,KAAK+pC,EAAM9rC,IACpBo6B,IACAp5B,EAAO0E,KAAKkI,MAAMhI,EAAQw0B,EAAQmX,IA7JxC3uB,GAASH,IAAI,QAAS,CACpBk0B,SAAS,EACTpG,QAAQ,EACRzlC,SAAS,EACT4lC,aAAa,EACbnW,OAAQ,QACR4oB,MAAO,EACP3S,KAAM,CACJmG,SAAS,EACTrsB,UAAW,EACX84B,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACX3B,WAAY,EACZ4B,UAAW,CAAC3f,EAAMjmC,IAAYA,EAAQ2sB,UACtCk5B,UAAW,CAAC5f,EAAMjmC,IAAYA,EAAQ0jB,MACtCkvB,QAAQ,EACR1U,WAAY,GACZC,iBAAkB,EAClB1T,YAAa,GAEf0oB,MAAO,CACL6F,SAAS,EACTv5C,KAAM,GACN8+C,QAAS,CACPtzB,IAAK,EACLC,OAAQ,IAGZijB,MAAO,CACL2X,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB3H,QAAS,EACTvF,SAAS,EACT4K,UAAU,EACVuC,gBAAiB,EACjBC,YAAa,EACb7gD,SAAUo+C,GAAMV,WAAWj+B,OAC3BqhC,MAAO,GACP9B,MAAO,GACPv4C,MAAO,SACPs6C,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrBxhC,GAASyhC,MAAM,cAAe,QAAS,GAAI,SAC3CzhC,GAASyhC,MAAM,aAAc,QAAS,GAAI,eAC1CzhC,GAASyhC,MAAM,aAAc,cAAe,GAAI,eAChDzhC,GAASyhC,MAAM,cAAe,QAAS,GAAI,SAC3CzhC,GAASgC,SAAS,QAAS,CACzBY,WAAW,EACXH,YAAcroB,IAAUA,EAAKsoB,WAAW,YAActoB,EAAKsoB,WAAW,UAAqB,aAATtoB,GAAgC,WAATA,EACzGuoB,WAAavoB,GAAkB,eAATA,GAAkC,mBAATA,IAEjD4lB,GAASgC,SAAS,SAAU,CAC1BY,UAAW,UAEb5C,GAASgC,SAAS,cAAe,CAC/BS,YAAcroB,GAAkB,oBAATA,GAAuC,aAATA,EACrDuoB,WAAavoB,GAAkB,oBAATA,IA+GxB,MACMsnD,GAAiB,CAAC7/B,EAAOmoB,EAAM2D,IAAoB,QAAT3D,GAA2B,SAATA,EAAkBnoB,EAAMmoB,GAAQ2D,EAAS9rB,EAAMmoB,GAAQ2D,EACzH,SAASgU,GAAO9zB,EAAK+zB,GACnB,MAAMjvB,EAAS,GACTkvB,EAAYh0B,EAAIxwB,OAASukD,EACzBz5C,EAAM0lB,EAAIxwB,OAChB,IAAID,EAAI,EACR,KAAOA,EAAI+K,EAAK/K,GAAKykD,EACnBlvB,EAAOxzB,KAAK0uB,EAAI/qB,KAAKsI,MAAMhO,KAE7B,OAAOu1B,EAET,SAASmvB,GAAoBjgC,EAAO9b,EAAOg8C,GACzC,MAAM1kD,EAASwkB,EAAMqnB,MAAM7rC,OACrB2kD,EAAal/C,KAAKgJ,IAAI/F,EAAO1I,EAAS,GACtC2F,EAAQ6e,EAAMoqB,YACdhpC,EAAM4e,EAAMqqB,UACZxgC,EAAU,KAChB,IACIiiC,EADAsU,EAAYpgC,EAAMsnB,gBAAgB6Y,GAEtC,KAAID,IAEApU,EADa,IAAXtwC,EACOyF,KAAKiJ,IAAIk2C,EAAYj/C,EAAOC,EAAMg/C,GACxB,IAAVl8C,GACC8b,EAAMsnB,gBAAgB,GAAK8Y,GAAa,GAExCA,EAAYpgC,EAAMsnB,gBAAgB6Y,EAAa,IAAM,EAEjEC,GAAaD,EAAaj8C,EAAQ4nC,GAAUA,EACxCsU,EAAYj/C,EAAQ0I,GAAWu2C,EAAYh/C,EAAMyI,IAIvD,OAAOu2C,EAeT,SAASC,GAAkBnnD,GACzB,OAAOA,EAAQ2lD,UAAY3lD,EAAQgkD,WAAa,EAElD,SAASoD,GAAepnD,EAAS4uB,GAC/B,IAAK5uB,EAAQg5C,QACX,OAAO,EAET,MAAMnzB,EAAO8I,GAAO3uB,EAAQ6lB,KAAM+I,GAC5B2vB,EAAU7vB,GAAU1uB,EAAQu+C,SAElC,OADcpyC,GAAQnM,EAAQP,MAAQO,EAAQP,KAAK6C,OAAS,GAC5CujB,EAAKE,WAAcw4B,EAAQh1B,OAe7C,SAAS89B,GAAWr7C,EAAOyuC,EAAUttC,GACnC,IAAI9C,EDr/GqB,CAAC2B,GAAoB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SCq/GnFs7C,CAAmBt7C,GAI7B,OAHKmB,GAAwB,UAAbstC,IAA2BttC,GAAwB,UAAbstC,KACpDpwC,EA5EiB,CAAC2B,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA4EhFu7C,CAAal9C,IAEdA,EAoCT,MAAMm9C,WAAc3E,GAClBn6C,YAAY83B,GACVqP,QACAvvC,KAAK2L,GAAKu0B,EAAIv0B,GACd3L,KAAKiE,KAAOi8B,EAAIj8B,KAChBjE,KAAKN,aAAUmlB,EACf7kB,KAAKsF,IAAM46B,EAAI56B,IACftF,KAAKklB,MAAQgb,EAAIhb,MACjBllB,KAAK2qB,SAAM9F,EACX7kB,KAAK4qB,YAAS/F,EACd7kB,KAAKyqB,UAAO5F,EACZ7kB,KAAK0qB,WAAQ7F,EACb7kB,KAAK8nB,WAAQjD,EACb7kB,KAAKipB,YAASpE,EACd7kB,KAAKmnD,SAAW,CACd18B,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GAEV5qB,KAAKusB,cAAW1H,EAChB7kB,KAAK84B,eAAYjU,EACjB7kB,KAAKonD,gBAAaviC,EAClB7kB,KAAKqnD,mBAAgBxiC,EACrB7kB,KAAKsnD,iBAAcziC,EACnB7kB,KAAKunD,kBAAe1iC,EACpB7kB,KAAK2kC,UAAO9f,EACZ7kB,KAAKwnD,mBAAgB3iC,EACrB7kB,KAAKyQ,SAAMoU,EACX7kB,KAAK0Q,SAAMmU,EACX7kB,KAAKynD,YAAS5iC,EACd7kB,KAAK6tC,MAAQ,GACb7tC,KAAK0nD,eAAiB,KACtB1nD,KAAK2nD,YAAc,KACnB3nD,KAAK4nD,YAAc,KACnB5nD,KAAK0tC,QAAU,EACf1tC,KAAK8jD,WAAa,EAClB9jD,KAAK6nD,kBAAoB,GACzB7nD,KAAK4wC,iBAAc/rB,EACnB7kB,KAAK6wC,eAAYhsB,EACjB7kB,KAAKg6C,gBAAiB,EACtBh6C,KAAK8nD,cAAWjjC,EAChB7kB,KAAK+nD,cAAWljC,EAChB7kB,KAAKgoD,mBAAgBnjC,EACrB7kB,KAAKioD,mBAAgBpjC,EACrB7kB,KAAKkoD,aAAe,EACpBloD,KAAKmoD,aAAe,EACpBnoD,KAAKktC,OAAS,GACdltC,KAAKooD,mBAAoB,EACzBpoD,KAAKsmC,cAAWzhB,EAElBzc,KAAK1I,GACH,MAAM4jB,EAAKtjB,KACXsjB,EAAG5jB,QAAUA,EAAQyyB,WAAW7O,EAAGwF,cACnCxF,EAAGqhB,KAAOjlC,EAAQilC,KAClBrhB,EAAGykC,SAAWzkC,EAAGkmB,MAAM9pC,EAAQ+Q,KAC/B6S,EAAGwkC,SAAWxkC,EAAGkmB,MAAM9pC,EAAQgR,KAC/B4S,EAAG2kC,cAAgB3kC,EAAGkmB,MAAM9pC,EAAQ2oD,cACpC/kC,EAAG0kC,cAAgB1kC,EAAGkmB,MAAM9pC,EAAQ4oD,cAEtClgD,MAAMijC,EAAK3gC,GACT,OAAO2gC,EAETjjC,gBACE,IAAI2/C,SAACA,EAAQD,SAAEA,EAAQG,cAAEA,EAAaD,cAAEA,GAAiBhoD,KAKzD,OAJA+nD,EAAW37C,GAAgB27C,EAAU77C,OAAO+C,mBAC5C64C,EAAW17C,GAAgB07C,EAAU57C,OAAO89B,mBAC5Cie,EAAgB77C,GAAgB67C,EAAe/7C,OAAO+C,mBACtD+4C,EAAgB57C,GAAgB47C,EAAe97C,OAAO89B,mBAC/C,CACLv5B,IAAKrE,GAAgB27C,EAAUE,GAC/Bv3C,IAAKtE,GAAgB07C,EAAUE,GAC/B7d,WAAYl+B,GAAe87C,GAC3B3d,WAAYn+B,GAAe67C,IAG/B1/C,UAAUyhC,GACR,MAAMvmB,EAAKtjB,KACX,IACIyP,GADAgB,IAACA,EAAGC,IAAEA,EAAGy5B,WAAEA,EAAUC,WAAEA,GAAc9mB,EAAG+mB,gBAE5C,GAAIF,GAAcC,EAChB,MAAO,CAAC35B,IAAAA,EAAKC,IAAAA,GAEf,MAAM08B,EAAQ9pB,EAAG6gB,0BACjB,IAAK,IAAIpiC,EAAI,EAAGmL,EAAOkgC,EAAMprC,OAAQD,EAAImL,IAAQnL,EAC/C0N,EAAQ29B,EAAMrrC,GAAGsiC,WAAWkkB,UAAUjlC,EAAIumB,GACrCM,IACH15B,EAAMhJ,KAAKgJ,IAAIA,EAAKhB,EAAMgB,MAEvB25B,IACH15B,EAAMjJ,KAAKiJ,IAAIA,EAAKjB,EAAMiB,MAG9B,MAAO,CACLD,IAAKrE,GAAgBqE,EAAKrE,GAAgBsE,EAAKD,IAC/CC,IAAKtE,GAAgBsE,EAAKtE,GAAgBqE,EAAKC,KAGnDtI,aACE,MAAMkb,EAAKtjB,KACX,MAAO,CACLyqB,KAAMnH,EAAGgkC,aAAe,EACxB38B,IAAKrH,EAAG8jC,YAAc,EACtB18B,MAAOpH,EAAGikC,cAAgB,EAC1B38B,OAAQtH,EAAG+jC,eAAiB,GAGhCj/C,WACE,OAAOpI,KAAK6tC,MAEdzlC,YACE,MAAMhJ,EAAOY,KAAKklB,MAAM9lB,KACxB,OAAOY,KAAKN,QAAQ2pC,SAAWrpC,KAAK2vC,eAAiBvwC,EAAKopD,QAAUppD,EAAKqpD,UAAYrpD,EAAKiqC,QAAU,GAEtGjhC,eACEpI,KAAKktC,OAAS,GACdltC,KAAKooD,mBAAoB,EAE3BhgD,eACEnD,GAASjF,KAAKN,QAAQgpD,aAAc,CAAC1oD,OAEvCoI,OAAOmkB,EAAUuM,EAAWD,GAC1B,MAAMvV,EAAKtjB,KACLujD,EAAWjgC,EAAG5jB,QAAQmuC,MACtB8a,EAAapF,EAASoF,WAC5BrlC,EAAGolC,eACHplC,EAAGiJ,SAAWA,EACdjJ,EAAGwV,UAAYA,EACfxV,EAAG6jC,SAAWtuB,EAAU98B,OAAO2mB,OAAO,CACpC+H,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GACPiO,GACHvV,EAAGuqB,MAAQ,KACXvqB,EAAGskC,YAAc,KACjBtkC,EAAGokC,eAAiB,KACpBpkC,EAAGqkC,YAAc,KACjBrkC,EAAGslC,sBACHtlC,EAAGulC,gBACHvlC,EAAGwlC,qBACHxlC,EAAGwgC,WAAaxgC,EAAGqsB,eACfrsB,EAAGwE,MAAQ+Q,EAAQpO,KAAOoO,EAAQnO,MAClCpH,EAAG2F,OAAS4P,EAAQlO,IAAMkO,EAAQjO,OACjCtH,EAAG8kC,oBACN9kC,EAAGylC,mBACHzlC,EAAG0lC,sBACH1lC,EAAG2lC,kBACH3lC,EAAGmkC,ODpxET,SAAmByB,EAAQhE,GACzB,MAAMz0C,IAACA,EAAGC,IAAEA,GAAOw4C,EACnB,MAAO,CACLz4C,IAAKA,EAAMhJ,KAAKC,IAAI6E,GAAY24C,EAAOz0C,IACvCC,IAAKA,EAAMnE,GAAY24C,EAAOx0C,ICgxEhBy4C,CAAU7lC,EAAIA,EAAG5jB,QAAQwlD,OACrC5hC,EAAG8kC,mBAAoB,GAEzB9kC,EAAG8lC,mBACH9lC,EAAGuqB,MAAQvqB,EAAG+lC,cAAgB,GAC9B/lC,EAAGgmC,kBACH,MAAMC,EAAkBZ,EAAarlC,EAAGuqB,MAAM7rC,OAC9CshB,EAAGkmC,sBAAsBD,EAAkBjD,GAAOhjC,EAAGuqB,MAAO8a,GAAcrlC,EAAGuqB,OAC7EvqB,EAAG0e,YACH1e,EAAGmmC,+BACHnmC,EAAGomC,yBACHpmC,EAAGqmC,8BACCpG,EAAS7K,UAAY6K,EAASD,UAAgC,SAApBC,EAASh2C,UACrD+V,EAAGuqB,MAAQyV,GAAShgC,EAAIA,EAAGuqB,OAC3BvqB,EAAGskC,YAAc,MAEf2B,GACFjmC,EAAGkmC,sBAAsBlmC,EAAGuqB,OAE9BvqB,EAAGsmC,YACHtmC,EAAGumC,MACHvmC,EAAGwmC,WACHxmC,EAAGymC,cAEL3hD,YACE,MAAMkb,EAAKtjB,KACX,IACIgqD,EAAYC,EADZC,EAAgB5mC,EAAG5jB,QAAQmN,QAE3ByW,EAAGqsB,gBACLqa,EAAa1mC,EAAGmH,KAChBw/B,EAAW3mC,EAAGoH,QAEds/B,EAAa1mC,EAAGqH,IAChBs/B,EAAW3mC,EAAGsH,OACds/B,GAAiBA,GAEnB5mC,EAAGstB,YAAcoZ,EACjB1mC,EAAGutB,UAAYoZ,EACf3mC,EAAG02B,eAAiBkQ,EACpB5mC,EAAGoqB,QAAUuc,EAAWD,EACxB1mC,EAAG6mC,eAAiB7mC,EAAG5jB,QAAQ0qD,cAEjChiD,cACEnD,GAASjF,KAAKN,QAAQqqD,YAAa,CAAC/pD,OAEtCoI,sBACEnD,GAASjF,KAAKN,QAAQkpD,oBAAqB,CAAC5oD,OAE9CoI,gBACE,MAAMkb,EAAKtjB,KACPsjB,EAAGqsB,gBACLrsB,EAAGwE,MAAQxE,EAAGiJ,SACdjJ,EAAGmH,KAAO,EACVnH,EAAGoH,MAAQpH,EAAGwE,QAEdxE,EAAG2F,OAAS3F,EAAGwV,UACfxV,EAAGqH,IAAM,EACTrH,EAAGsH,OAAStH,EAAG2F,QAEjB3F,EAAGgkC,YAAc,EACjBhkC,EAAG8jC,WAAa,EAChB9jC,EAAGikC,aAAe,EAClBjkC,EAAG+jC,cAAgB,EAErBj/C,qBACEnD,GAASjF,KAAKN,QAAQopD,mBAAoB,CAAC9oD,OAE7CoI,WAAWrJ,GACT,MAAMukB,EAAKtjB,KACXsjB,EAAG4B,MAAMmlC,cAActrD,EAAMukB,EAAGwF,cAChC7jB,GAASqe,EAAG5jB,QAAQX,GAAO,CAACukB,IAE9Blb,mBACEpI,KAAKsqD,WAAW,oBAElBliD,uBACAA,kBACEpI,KAAKsqD,WAAW,mBAElBliD,mBACEpI,KAAKsqD,WAAW,oBAElBliD,aACE,MAAO,GAETA,kBACEpI,KAAKsqD,WAAW,mBAElBliD,8BACEnD,GAASjF,KAAKN,QAAQ6qD,4BAA6B,CAACvqD,OAEtDoI,mBAAmBylC,GACjB,MAAMvqB,EAAKtjB,KACLujD,EAAWjgC,EAAG5jB,QAAQmuC,MAC5B,IAAI9rC,EAAGmL,EAAMlF,EACb,IAAKjG,EAAI,EAAGmL,EAAO2gC,EAAM7rC,OAAQD,EAAImL,EAAMnL,IACzCiG,EAAO6lC,EAAM9rC,GACbiG,EAAKyiC,MAAQxlC,GAASs+C,EAASt+C,SAAU,CAAC+C,EAAK7H,MAAO4B,EAAG8rC,GAAQvqB,GAGrElb,6BACEnD,GAASjF,KAAKN,QAAQ8qD,2BAA4B,CAACxqD,OAErDoI,+BACEnD,GAASjF,KAAKN,QAAQ+pD,6BAA8B,CAACzpD,OAEvDoI,yBACE,MAAMkb,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACb6jD,EAAW7jD,EAAQmuC,MACnB4c,EAAWnnC,EAAGuqB,MAAM7rC,OACpBwjD,EAAcjC,EAASiC,aAAe,EACtCC,EAAclC,EAASkC,YAC7B,IACIH,EAAWxsB,EAAW4xB,EADtBlD,EAAgBhC,EAEpB,IAAKliC,EAAGqnC,eAAiBpH,EAAS7K,SAAW8M,GAAeC,GAAegF,GAAY,IAAMnnC,EAAGqsB,eAE9F,YADArsB,EAAGkkC,cAAgBhC,GAGrB,MAAMoF,EAAatnC,EAAGunC,iBAChBC,EAAgBF,EAAWG,OAAOjjC,MAClCkjC,EAAiBJ,EAAWK,QAAQhiC,OACpCsD,EAAWza,GAAYwR,EAAG4B,MAAM4C,MAAQgjC,EAAe,EAAGxnC,EAAGiJ,UACnE+4B,EAAY5lD,EAAQ4yC,OAAShvB,EAAGiJ,SAAWk+B,EAAWl+B,GAAYk+B,EAAW,GACzEK,EAAgB,EAAIxF,IACtBA,EAAY/4B,GAAYk+B,GAAY/qD,EAAQ4yC,OAAS,GAAM,IAC3DxZ,EAAYxV,EAAGwV,UAAY+tB,GAAkBnnD,EAAQ6yC,MACrDgR,EAAStF,QAAU6I,GAAepnD,EAAQmzC,MAAOvvB,EAAG4B,MAAMxlB,QAAQ6lB,MAClEmlC,EAAmBjjD,KAAK0J,KAAK25C,EAAgBA,EAAgBE,EAAiBA,GAC9ExD,EAAgB32C,GAAUpJ,KAAKgJ,IAC7BhJ,KAAKyjD,KAAKp5C,IAAa84C,EAAWK,QAAQhiC,OAAS,GAAKq8B,GAAY,EAAG,IACvE79C,KAAKyjD,KAAKp5C,GAAYgnB,EAAY4xB,GAAmB,EAAG,IAAMjjD,KAAKyjD,KAAKp5C,GAAYk5C,EAAiBN,GAAmB,EAAG,MAE7HlD,EAAgB//C,KAAKiJ,IAAI80C,EAAa/9C,KAAKgJ,IAAIg1C,EAAa+B,KAE9DlkC,EAAGkkC,cAAgBA,EAErBp/C,8BACEnD,GAASjF,KAAKN,QAAQiqD,4BAA6B,CAAC3pD,OAEtDoI,YACEnD,GAASjF,KAAKN,QAAQkqD,UAAW,CAAC5pD,OAEpCoI,MACE,MAAMkb,EAAKtjB,KACL83C,EAAU,CACdhwB,MAAO,EACPmB,OAAQ,IAEJ/D,MAACA,EAAOxlB,SAAUmuC,MAAO0V,EAAU1Q,MAAOsY,EAAW5Y,KAAM6Y,IAAa9nC,EACxEo1B,EAAUp1B,EAAGqnC,aACbhb,EAAersB,EAAGqsB,eACxB,GAAI+I,EAAS,CACX,MAAM2S,EAAcvE,GAAeqE,EAAWjmC,EAAMxlB,QAAQ6lB,MAQ5D,GAPIoqB,GACFmI,EAAQhwB,MAAQxE,EAAGiJ,SACnBurB,EAAQ7uB,OAAS49B,GAAkBuE,GAAYC,IAE/CvT,EAAQ7uB,OAAS3F,EAAGwV,UACpBgf,EAAQhwB,MAAQ++B,GAAkBuE,GAAYC,GAE5C9H,EAAS7K,SAAWp1B,EAAGuqB,MAAM7rC,OAAQ,CACvC,MAAMqiD,MAACA,EAAK9T,KAAEA,EAAIwa,OAAEA,EAAME,QAAEA,GAAW3nC,EAAGunC,iBACpCS,EAAiC,EAAnB/H,EAAStF,QACvBsN,EAAe56C,GAAU2S,EAAGkkC,eAC5Bt0C,EAAMzL,KAAKyL,IAAIq4C,GACft5C,EAAMxK,KAAKwK,IAAIs5C,GACrB,GAAI5b,EAAc,CAChB,MAAM6b,EAAcjI,EAASmC,OAAS,EAAIzzC,EAAM84C,EAAOjjC,MAAQ5U,EAAM+3C,EAAQhiC,OAC7E6uB,EAAQ7uB,OAASxhB,KAAKgJ,IAAI6S,EAAGwV,UAAWgf,EAAQ7uB,OAASuiC,EAAcF,OAClE,CACL,MAAMG,EAAalI,EAASmC,OAAS,EAAIxyC,EAAM63C,EAAOjjC,MAAQ7V,EAAMg5C,EAAQhiC,OAC5E6uB,EAAQhwB,MAAQrgB,KAAKgJ,IAAI6S,EAAGiJ,SAAUurB,EAAQhwB,MAAQ2jC,EAAaH,GAErEhoC,EAAGooC,kBAAkBrH,EAAO9T,EAAMt+B,EAAKiB,IAG3CoQ,EAAGqoC,iBACChc,GACFrsB,EAAGwE,MAAQxE,EAAGoqB,QAAUxoB,EAAM4C,MAAQxE,EAAG6jC,SAAS18B,KAAOnH,EAAG6jC,SAASz8B,MACrEpH,EAAG2F,OAAS6uB,EAAQ7uB,SAEpB3F,EAAGwE,MAAQgwB,EAAQhwB,MACnBxE,EAAG2F,OAAS3F,EAAGoqB,QAAUxoB,EAAM+D,OAAS3F,EAAG6jC,SAASx8B,IAAMrH,EAAG6jC,SAASv8B,QAG1ExiB,kBAAkBi8C,EAAO9T,EAAMt+B,EAAKiB,GAClC,MAAMoQ,EAAKtjB,MACJ6tC,OAAOniC,MAACA,EAAKuyC,QAAEA,GAAQ9D,SAAEA,GAAY72B,EAAG5jB,QACzCksD,EAAiC,IAArBtoC,EAAGkkC,cACfqE,EAAgC,QAAb1R,GAAkC,MAAZ72B,EAAGqhB,KAClD,GAAIrhB,EAAGqsB,eAAgB,CACrB,MAAMmc,EAAaxoC,EAAGwqB,gBAAgB,GAAKxqB,EAAGmH,KACxCshC,EAAczoC,EAAGoH,MAAQpH,EAAGwqB,gBAAgBxqB,EAAGuqB,MAAM7rC,OAAS,GACpE,IAAIslD,EAAc,EACdC,EAAe,EACfqE,EACEC,GACFvE,EAAcp0C,EAAMmxC,EAAMv8B,MAC1By/B,EAAet1C,EAAMs+B,EAAKtnB,SAE1Bq+B,EAAcr1C,EAAMoyC,EAAMp7B,OAC1Bs+B,EAAer0C,EAAMq9B,EAAKzoB,OAET,UAAVpc,EACT67C,EAAehX,EAAKzoB,MACD,QAAVpc,EACT47C,EAAcjD,EAAMv8B,OAEpBw/B,EAAcjD,EAAMv8B,MAAQ,EAC5By/B,EAAehX,EAAKzoB,MAAQ,GAE9BxE,EAAGgkC,YAAc7/C,KAAKiJ,KAAK42C,EAAcwE,EAAa7N,GAAW36B,EAAGwE,OAASxE,EAAGwE,MAAQgkC,GAAa,GACrGxoC,EAAGikC,aAAe9/C,KAAKiJ,KAAK62C,EAAewE,EAAc9N,GAAW36B,EAAGwE,OAASxE,EAAGwE,MAAQikC,GAAc,OACpG,CACL,IAAI3E,EAAa7W,EAAKtnB,OAAS,EAC3Bo+B,EAAgBhD,EAAMp7B,OAAS,EACrB,UAAVvd,GACF07C,EAAa,EACbC,EAAgBhD,EAAMp7B,QACH,QAAVvd,IACT07C,EAAa7W,EAAKtnB,OAClBo+B,EAAgB,GAElB/jC,EAAG8jC,WAAaA,EAAanJ,EAC7B36B,EAAG+jC,cAAgBA,EAAgBpJ,GAGvC71C,iBACE,MAAMkb,EAAKtjB,KACPsjB,EAAG6jC,WACL7jC,EAAG6jC,SAAS18B,KAAOhjB,KAAKiJ,IAAI4S,EAAGgkC,YAAahkC,EAAG6jC,SAAS18B,MACxDnH,EAAG6jC,SAASx8B,IAAMljB,KAAKiJ,IAAI4S,EAAG8jC,WAAY9jC,EAAG6jC,SAASx8B,KACtDrH,EAAG6jC,SAASz8B,MAAQjjB,KAAKiJ,IAAI4S,EAAGikC,aAAcjkC,EAAG6jC,SAASz8B,OAC1DpH,EAAG6jC,SAASv8B,OAASnjB,KAAKiJ,IAAI4S,EAAG+jC,cAAe/jC,EAAG6jC,SAASv8B,SAGhExiB,WACEnD,GAASjF,KAAKN,QAAQoqD,SAAU,CAAC9pD,OAEnCoI,eACE,MAAMu8B,KAACA,EAAIwV,SAAEA,GAAYn6C,KAAKN,QAC9B,MAAoB,QAAby6C,GAAmC,WAAbA,GAAkC,MAATxV,EAExDv8B,aACE,OAAOpI,KAAKN,QAAQ68C,SAEtBn0C,sBAAsBylC,GACpB,MAAMvqB,EAAKtjB,KAGX,IAAI+B,EAAGmL,EACP,IAHAoW,EAAGinC,8BACHjnC,EAAG0oC,mBAAmBne,GAEjB9rC,EAAI,EAAGmL,EAAO2gC,EAAM7rC,OAAQD,EAAImL,EAAMnL,IACrC6J,GAAciiC,EAAM9rC,GAAG0oC,SACzBoD,EAAMljC,OAAO5I,EAAG,GAChBmL,IACAnL,KAGJuhB,EAAGknC,6BAELpiD,iBACE,MAAMkb,EAAKtjB,KACX,IAAI4qD,EAAatnC,EAAGskC,YACpB,IAAKgD,EAAY,CACf,MAAMjC,EAAarlC,EAAG5jB,QAAQmuC,MAAM8a,WACpC,IAAI9a,EAAQvqB,EAAGuqB,MACX8a,EAAa9a,EAAM7rC,SACrB6rC,EAAQyY,GAAOzY,EAAO8a,IAExBrlC,EAAGskC,YAAcgD,EAAatnC,EAAG2oC,mBAAmBpe,EAAOA,EAAM7rC,QAEnE,OAAO4oD,EAETxiD,mBAAmBylC,EAAO7rC,GACxB,MAAMsD,IAACA,EAAKuiD,kBAAmBqE,GAAUlsD,KACnCmsD,EAAS,GACTC,EAAU,GAChB,IAEIrqD,EAAG8f,EAAGuG,EAAMqiB,EAAO4hB,EAAUC,EAAYrkC,EAAOxC,EAAYqC,EAAOmB,EAAQsjC,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK1qD,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAO3B,GANA0oC,EAAQoD,EAAM9rC,GAAG0oC,MACjB4hB,EAAWrsD,KAAK0sD,wBAAwB3qD,GACxCuD,EAAIigB,KAAO+mC,EAAaD,EAAS1kC,OACjCM,EAAQikC,EAAOI,GAAcJ,EAAOI,IAAe,CAACltD,KAAM,GAAIqoB,GAAI,IAClEhC,EAAa4mC,EAAS5mC,WACtBqC,EAAQmB,EAAS,EACZrd,GAAc6+B,IAAW5+B,GAAQ4+B,IAG/B,GAAI5+B,GAAQ4+B,GACjB,IAAK5oB,EAAI,EAAGuG,EAAOqiB,EAAMzoC,OAAQ6f,EAAIuG,IAAQvG,EAC3C0qC,EAAc9hB,EAAM5oB,GACfjW,GAAc2gD,IAAiB1gD,GAAQ0gD,KAC1CzkC,EAAQN,GAAaliB,EAAK2iB,EAAM7oB,KAAM6oB,EAAMR,GAAIK,EAAOykC,GACvDtjC,GAAUxD,QAPdqC,EAAQN,GAAaliB,EAAK2iB,EAAM7oB,KAAM6oB,EAAMR,GAAIK,EAAO2iB,GACvDxhB,EAASxD,EAUX0mC,EAAOroD,KAAKgkB,GACZskC,EAAQtoD,KAAKmlB,GACbujC,EAAkB/kD,KAAKiJ,IAAIoX,EAAO0kC,GAClCC,EAAmBhlD,KAAKiJ,IAAIuY,EAAQwjC,IAlhB1C,SAAwBP,EAAQlqD,GAC9B2K,GAAKu/C,GAASjkC,IACZ,MAAMR,EAAKQ,EAAMR,GACXc,EAAQd,EAAGzlB,OAAS,EAC1B,IAAID,EACJ,GAAIwmB,EAAQvmB,EAAQ,CAClB,IAAKD,EAAI,EAAGA,EAAIwmB,IAASxmB,SAChBkmB,EAAM7oB,KAAKqoB,EAAG1lB,IAEvB0lB,EAAG9c,OAAO,EAAG4d,OA2gBfL,CAAegkC,EAAQlqD,GACvB,MAAM+oD,EAASoB,EAAOjpD,QAAQspD,GACxBvB,EAAUmB,EAAQlpD,QAAQupD,GAC1BE,EAAWt+C,KAAUyZ,MAAOqkC,EAAO99C,IAAQ,EAAG4a,OAAQmjC,EAAQ/9C,IAAQ,IAC5E,MAAO,CACLg2C,MAAOsI,EAAQ,GACfpc,KAAMoc,EAAQ3qD,EAAS,GACvB+oD,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,OAAAA,EACAC,QAAAA,GAGJhkD,iBAAiBjI,GACf,OAAOA,EAETiI,iBAAiBjI,EAAOuK,GACtB,OAAOk/B,IAETxhC,iBAAiBqgB,IACjBrgB,gBAAgBsC,GACd,MAAMmjC,EAAQ7tC,KAAK6tC,MACnB,OAAInjC,EAAQ,GAAKA,EAAQmjC,EAAM7rC,OAAS,EAC/B,KAEFhC,KAAK4tC,iBAAiBC,EAAMnjC,GAAOvK,OAE5CiI,mBAAmBwkD,GACjB,MAAMtpC,EAAKtjB,KACPsjB,EAAG02B,iBACL4S,EAAU,EAAIA,GAEhB,MAAMnkC,EAAQnF,EAAGstB,YAAcgc,EAAUtpC,EAAGoqB,QAC5C,ODrtHK57B,GCqtHcwR,EAAG6mC,eAAiB3hC,GAAYlF,EAAG4B,MAAOuD,EAAO,GAAKA,GDrtHhD,MAAO,OCutHlCrgB,mBAAmBqgB,GACjB,MAAMmkC,GAAWnkC,EAAQzoB,KAAK4wC,aAAe5wC,KAAK0tC,QAClD,OAAO1tC,KAAKg6C,eAAiB,EAAI4S,EAAUA,EAE7CxkD,eACE,OAAOpI,KAAK4tC,iBAAiB5tC,KAAK6sD,gBAEpCzkD,eACE,MAAMqI,IAACA,EAAGC,IAAEA,GAAO1Q,KACnB,OAAOyQ,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,EAEJrI,WAAWsC,GACT,MAAM4Y,EAAKtjB,KACL6tC,EAAQvqB,EAAGuqB,OAAS,GAC1B,GAAInjC,GAAS,GAAKA,EAAQmjC,EAAM7rC,OAAQ,CACtC,MAAMgG,EAAO6lC,EAAMnjC,GACnB,OAAO1C,EAAKs+B,WACbt+B,EAAKs+B,SA3iBV,SAA2BlT,EAAQ1oB,EAAO1C,GACxC,OAAOjM,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GAAS,CAC1CprB,KAAAA,EACA0C,MAAAA,EACAzG,KAAM,SAuiBW6oD,CAAkBxpC,EAAGwF,aAAcpe,EAAO1C,IAE3D,OAAOsb,EAAGgjB,WACVhjB,EAAGgjB,UApjBqBlT,EAojBS9P,EAAG4B,MAAM4D,aApjBVtC,EAojBwBlD,EAnjBnDvnB,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GAAS,CAC1C5M,MAAAA,EACAviB,KAAM,YAHV,IAA4BmvB,EAAQ5M,EAsjBlCpe,YACE,MAAMkb,EAAKtjB,KACL+sD,EAAczpC,EAAG5jB,QAAQmuC,MACzBmf,EAAMr8C,GAAU2S,EAAGkkC,eACnBt0C,EAAMzL,KAAKC,IAAID,KAAKyL,IAAI85C,IACxB/6C,EAAMxK,KAAKC,IAAID,KAAKwK,IAAI+6C,IACxBpC,EAAatnC,EAAGunC,iBAChB5M,EAAU8O,EAAYlH,iBAAmB,EACzC1vC,EAAIy0C,EAAaA,EAAWG,OAAOjjC,MAAQm2B,EAAU,EACrDxoC,EAAIm1C,EAAaA,EAAWK,QAAQhiC,OAASg1B,EAAU,EAC7D,OAAO36B,EAAGqsB,eACNl6B,EAAIvC,EAAMiD,EAAIlE,EAAMkE,EAAIjD,EAAMuC,EAAIxD,EAClCwD,EAAIxD,EAAMkE,EAAIjD,EAAMuC,EAAIvC,EAAMiD,EAAIlE,EAExC7J,aACE,MAAMswC,EAAU14C,KAAKN,QAAQg5C,QAC7B,MAAgB,SAAZA,IACOA,EAEJ14C,KAAKmkC,0BAA0BniC,OAAS,EAEjDoG,sBAAsB4iC,GACpB,MAAM1nB,EAAKtjB,KACL2kC,EAAOrhB,EAAGqhB,KACVzf,EAAQ5B,EAAG4B,MACXxlB,EAAU4jB,EAAG5jB,SACb6yC,KAACA,EAAI4H,SAAEA,GAAYz6C,EACnB4yC,EAASC,EAAKD,OACd3C,EAAersB,EAAGqsB,eAElBsd,EADQ3pC,EAAGuqB,MACS7rC,QAAUswC,EAAS,EAAI,GAC3C4a,EAAKrG,GAAkBtU,GACvB3iB,EAAQ,GACRu9B,EAAa5a,EAAKpgB,WAAW7O,EAAGwF,cAChCskC,EAAYD,EAAWhI,WAAagI,EAAWhjC,YAAc,EAC7DkjC,EAAgBD,EAAY,EAC5BE,EAAmB,SAAS7kC,GAChC,OAAOD,GAAYtD,EAAOuD,EAAO2kC,IAEnC,IAAIG,EAAaxrD,EAAG6kD,EAAW4G,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAb7T,EACFoT,EAAcD,EAAiBhqC,EAAGsH,QAClC8iC,EAAMpqC,EAAGsH,OAASsiC,EAClBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBtiB,EAAUrgB,KAAO0iC,EACvCW,EAAKhjB,EAAUpgB,YACV,GAAiB,WAAbuvB,EACToT,EAAcD,EAAiBhqC,EAAGqH,KAClCmjC,EAAK9iB,EAAUrgB,IACfqjC,EAAKV,EAAiBtiB,EAAUpgB,QAAUyiC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMtqC,EAAGqH,IAAMuiC,OACV,GAAiB,SAAb/S,EACToT,EAAcD,EAAiBhqC,EAAGoH,OAClC+iC,EAAMnqC,EAAGoH,MAAQwiC,EACjBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBtiB,EAAUvgB,MAAQ4iC,EACxCU,EAAK/iB,EAAUtgB,WACV,GAAiB,UAAbyvB,EACToT,EAAcD,EAAiBhqC,EAAGmH,MAClCojC,EAAK7iB,EAAUvgB,KACfsjC,EAAKT,EAAiBtiB,EAAUtgB,OAAS2iC,EACzCI,EAAMF,EAAcF,EACpBM,EAAMrqC,EAAGmH,KAAOyiC,OACX,GAAa,MAATvoB,EAAc,CACvB,GAAiB,WAAbwV,EACFoT,EAAcD,GAAkBtiB,EAAUrgB,IAAMqgB,EAAUpgB,QAAU,EAAI,SACnE,GAAI5e,GAASmuC,GAAW,CAC7B,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvBV,EAAcD,EAAiBhqC,EAAG4B,MAAMuB,OAAOwnC,GAAgBrgB,iBAAiBztC,IAElF2tD,EAAK9iB,EAAUrgB,IACfqjC,EAAKhjB,EAAUpgB,OACf8iC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATvoB,EAAc,CACvB,GAAiB,WAAbwV,EACFoT,EAAcD,GAAkBtiB,EAAUvgB,KAAOugB,EAAUtgB,OAAS,QAC/D,GAAI1e,GAASmuC,GAAW,CAC7B,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvBV,EAAcD,EAAiBhqC,EAAG4B,MAAMuB,OAAOwnC,GAAgBrgB,iBAAiBztC,IAElFstD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK7iB,EAAUvgB,KACfsjC,EAAK/iB,EAAUtgB,MAEjB,MAAMwjC,EAAQ5hD,GAAe5M,EAAQmuC,MAAM4V,cAAewJ,GACpDzrD,EAAOiG,KAAKiJ,IAAI,EAAGjJ,KAAK88C,KAAK0I,EAAciB,IACjD,IAAKnsD,EAAI,EAAGA,EAAIkrD,EAAalrD,GAAKP,EAAM,CACtC,MAAM2sD,EAAc5b,EAAKpgB,WAAW7O,EAAGwF,WAAW/mB,IAC5CsqB,EAAY8hC,EAAY9hC,UACxB+hC,EAAYD,EAAY/qC,MACxBwa,EAAa2U,EAAK3U,YAAc,GAChCC,EAAmBswB,EAAYtwB,iBAC/BynB,EAAY6I,EAAY7I,UACxBC,EAAY4I,EAAY5I,UACxB8I,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzC1H,EAAYH,GAAoBnjC,EAAIvhB,EAAGuwC,QACrBztB,IAAd+hC,IAGJ4G,EAAmBhlC,GAAYtD,EAAO0hC,EAAWv6B,GAC7CsjB,EACF8d,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExB59B,EAAM9rB,KAAK,CACT2pD,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAlmC,MAAOuE,EACPjJ,MAAOgrC,EACPxwB,WAAAA,EACAC,iBAAAA,EACAynB,UAAAA,EACAC,UAAAA,EACA8I,eAAAA,EACAC,qBAAAA,KAKJ,OAFAhrC,EAAG4kC,aAAe+E,EAClB3pC,EAAG6kC,aAAeoF,EACX39B,EAETxnB,mBAAmB4iC,GACjB,MAAM1nB,EAAKtjB,KACL2kC,EAAOrhB,EAAGqhB,KACVjlC,EAAU4jB,EAAG5jB,SACby6C,SAACA,EAAUtM,MAAOkf,GAAertD,EACjCiwC,EAAersB,EAAGqsB,eAClB9B,EAAQvqB,EAAGuqB,OACXniC,MAACA,EAAKs6C,WAAEA,EAAU/H,QAAEA,EAAOyH,OAAEA,GAAUqH,EACvCG,EAAKrG,GAAkBnnD,EAAQ6yC,MAC/Bgc,EAAiBrB,EAAKjP,EACtBuQ,EAAkB9I,GAAUzH,EAAUsQ,EACtChlC,GAAY5Y,GAAU2S,EAAGkkC,eACzB53B,EAAQ,GACd,IAAI7tB,EAAGmL,EAAMlF,EAAMyiC,EAAO9uC,EAAGyU,EAAG6b,EAAWxD,EAAOlD,EAAME,EAAYgpC,EAAWC,EAC3ExiC,EAAe,SACnB,GAAiB,QAAbiuB,EACF/pC,EAAIkT,EAAGsH,OAAS4jC,EAChBviC,EAAY3I,EAAGqrC,+BACV,GAAiB,WAAbxU,EACT/pC,EAAIkT,EAAGqH,IAAM6jC,EACbviC,EAAY3I,EAAGqrC,+BACV,GAAiB,SAAbxU,EAAqB,CAC9B,MAAMpwC,EAAMuZ,EAAGsrC,wBAAwB1B,GACvCjhC,EAAYliB,EAAIkiB,UAChBtwB,EAAIoO,EAAIpO,OACH,GAAiB,UAAbw+C,EAAsB,CAC/B,MAAMpwC,EAAMuZ,EAAGsrC,wBAAwB1B,GACvCjhC,EAAYliB,EAAIkiB,UAChBtwB,EAAIoO,EAAIpO,OACH,GAAa,MAATgpC,EAAc,CACvB,GAAiB,WAAbwV,EACF/pC,GAAM46B,EAAUrgB,IAAMqgB,EAAUpgB,QAAU,EAAK2jC,OAC1C,GAAIviD,GAASmuC,GAAW,CAC7B,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvB79C,EAAIkT,EAAG4B,MAAMuB,OAAOwnC,GAAgBrgB,iBAAiBztC,GAASouD,EAEhEtiC,EAAY3I,EAAGqrC,+BACV,GAAa,MAAThqB,EAAc,CACvB,GAAiB,WAAbwV,EACFx+C,GAAMqvC,EAAUvgB,KAAOugB,EAAUtgB,OAAS,EAAK6jC,OAC1C,GAAIviD,GAASmuC,GAAW,CAC7B,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvBtyD,EAAI2nB,EAAG4B,MAAMuB,OAAOwnC,GAAgBrgB,iBAAiBztC,GAEvD8rB,EAAY3I,EAAGsrC,wBAAwB1B,GAAIjhC,UAEhC,MAAT0Y,IACY,UAAVj5B,EACFwgB,EAAe,MACI,QAAVxgB,IACTwgB,EAAe,WAGnB,MAAM0+B,EAAatnC,EAAGunC,iBACtB,IAAK9oD,EAAI,EAAGmL,EAAO2gC,EAAM7rC,OAAQD,EAAImL,IAAQnL,EAAG,CAC9CiG,EAAO6lC,EAAM9rC,GACb0oC,EAAQziC,EAAKyiC,MACb,MAAM0jB,EAAcpB,EAAY56B,WAAW7O,EAAGwF,WAAW/mB,IACzD0mB,EAAQnF,EAAGwqB,gBAAgB/rC,GAAKgrD,EAAYjH,YAC5CvgC,EAAOjC,EAAGopC,wBAAwB3qD,GAClC0jB,EAAaF,EAAKE,WAClBgpC,EAAY5iD,GAAQ4+B,GAASA,EAAMzoC,OAAS,EAC5C,MAAM6sD,EAAYJ,EAAY,EACxBrrC,EAAQ+qC,EAAY/qC,MACpByI,EAAcsiC,EAAYvI,gBAC1Bh6B,EAAcuiC,EAAYxI,gBA2BhC,IAAImJ,EACJ,GA3BInf,GACFh0C,EAAI8sB,EAGAimC,EAFa,QAAbvU,EACiB,SAAf6L,GAAsC,IAAbz8B,GACbklC,EAAYhpC,EAAaA,EAAa,EAC5B,WAAfugC,GACK4E,EAAWK,QAAQhiC,OAAS,EAAI4lC,EAAYppC,EAAaA,GAEzDmlC,EAAWK,QAAQhiC,OAASxD,EAAa,EAGtC,SAAfugC,GAAsC,IAAbz8B,EACd9D,EAAa,EACF,WAAfugC,EACI4E,EAAWK,QAAQhiC,OAAS,EAAI4lC,EAAYppC,EAE5CmlC,EAAWK,QAAQhiC,OAASwlC,EAAYhpC,EAGrDigC,IACFgJ,IAAe,KAGjBt+C,EAAIqY,EACJimC,GAAc,EAAID,GAAahpC,EAAa,GAG1C0oC,EAAYlI,kBAAmB,CACjC,MAAM8I,EAAe3gC,GAAU+/B,EAAYhI,iBACrCl9B,EAAS2hC,EAAWwB,QAAQrqD,GAC5B+lB,EAAQ8iC,EAAWuB,OAAOpqD,GAChC,IAAI4oB,EAAMva,EAAIs+C,EAAaK,EAAapkC,IACpCF,EAAO9uB,EAAIozD,EAAatkC,KAC5B,OAAQyB,GACR,IAAK,SACHvB,GAAO1B,EAAS,EAChB,MACF,IAAK,SACH0B,GAAO1B,EAGT,OAAQgD,GACR,IAAK,SACHxB,GAAQ3C,EAAQ,EAChB,MACF,IAAK,QACH2C,GAAQ3C,EAGVgnC,EAAW,CACTrkC,KAAAA,EACAE,IAAAA,EACA7C,MAAOA,EAAQinC,EAAajnC,MAC5BmB,OAAQA,EAAS8lC,EAAa9lC,OAC9B7F,MAAO+qC,EAAYjI,eAGvBt2B,EAAM9rB,KAAK,CACTylB,SAAAA,EACAkhB,MAAAA,EACAllB,KAAAA,EACAnC,MAAAA,EACAyI,YAAAA,EACAD,YAAAA,EACA8iC,WAAAA,EACAziC,UAAAA,EACAC,aAAAA,EACAH,YAAa,CAACpwB,EAAGyU,GACjB0+C,SAAAA,IAGJ,OAAOl/B,EAETxnB,0BACE,MACM+xC,SAACA,EAAQtM,MAAEA,GADN7tC,KACkBN,QAE7B,IADkBiR,GAFP3Q,KAEoBwnD,eAE7B,MAAoB,QAAbrN,EAAqB,OAAS,QAEvC,IAAIzuC,EAAQ,SAMZ,MALoB,UAAhBmiC,EAAMniC,MACRA,EAAQ,OACiB,QAAhBmiC,EAAMniC,QACfA,EAAQ,SAEHA,EAETtD,wBAAwB8kD,GACtB,MAAM5pC,EAAKtjB,MACLm6C,SAACA,EAAUtM,OAAOmY,WAACA,EAAUN,OAAEA,EAAMzH,QAAEA,IAAY36B,EAAG5jB,QAEtD6uD,EAAiBrB,EAAKjP,EACtB8M,EAFaznC,EAAGunC,iBAEIE,OAAOjjC,MACjC,IAAImE,EACAtwB,EAoDJ,MAnDiB,SAAbw+C,EACEuL,GACF/pD,EAAI2nB,EAAGoH,MAAQuzB,EACI,SAAf+H,EACF/5B,EAAY,OACY,WAAf+5B,GACT/5B,EAAY,SACZtwB,GAAMovD,EAAS,IAEf9+B,EAAY,QACZtwB,GAAKovD,KAGPpvD,EAAI2nB,EAAGoH,MAAQ6jC,EACI,SAAfvI,EACF/5B,EAAY,QACY,WAAf+5B,GACT/5B,EAAY,SACZtwB,GAAMovD,EAAS,IAEf9+B,EAAY,OACZtwB,EAAI2nB,EAAGmH,OAGW,UAAb0vB,EACLuL,GACF/pD,EAAI2nB,EAAGmH,KAAOwzB,EACK,SAAf+H,EACF/5B,EAAY,QACY,WAAf+5B,GACT/5B,EAAY,SACZtwB,GAAMovD,EAAS,IAEf9+B,EAAY,OACZtwB,GAAKovD,KAGPpvD,EAAI2nB,EAAGmH,KAAO8jC,EACK,SAAfvI,EACF/5B,EAAY,OACY,WAAf+5B,GACT/5B,EAAY,SACZtwB,GAAKovD,EAAS,IAEd9+B,EAAY,QACZtwB,EAAI2nB,EAAGoH,QAIXuB,EAAY,QAEP,CAACA,UAAAA,EAAWtwB,EAAAA,GAErByM,oBACE,MAAMkb,EAAKtjB,KACX,GAAIsjB,EAAG5jB,QAAQmuC,MAAM6X,OACnB,OAEF,MAAMxgC,EAAQ5B,EAAG4B,MACXi1B,EAAW72B,EAAG5jB,QAAQy6C,SAC5B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACxvB,IAAK,EAAGF,KAAMnH,EAAGmH,KAAMG,OAAQ1F,EAAM+D,OAAQyB,MAAOpH,EAAGoH,OAC9C,QAAbyvB,GAAmC,WAAbA,EACnB,CAACxvB,IAAKrH,EAAGqH,IAAKF,KAAM,EAAGG,OAAQtH,EAAGsH,OAAQF,MAAOxF,EAAM4C,YAD9D,EAIJ1f,iBACE,MAAM9C,IAACA,EAAK5F,SAASolB,gBAACA,GAAgB2F,KAAEA,EAAIE,IAAEA,EAAG7C,MAAEA,EAAKmB,OAAEA,GAAUjpB,KAChE8kB,IACFxf,EAAI6iB,OACJ7iB,EAAI0mB,UAAYlH,EAChBxf,EAAI0pD,SAASvkC,EAAME,EAAK7C,EAAOmB,GAC/B3jB,EAAIgjB,WAGRlgB,qBAAqBjI,GACnB,MAAMmjB,EAAKtjB,KACLuyC,EAAOjvB,EAAG5jB,QAAQ6yC,KACxB,IAAKjvB,EAAGqnC,eAAiBpY,EAAKmG,QAC5B,OAAO,EAET,MACMhuC,EADQ4Y,EAAGuqB,MACGohB,WAAUttD,GAAKA,EAAExB,QAAUA,IAC/C,GAAIuK,GAAS,EAAG,CAEd,OADa6nC,EAAKpgB,WAAW7O,EAAGwF,WAAWpe,IAC/B2hB,UAEd,OAAO,EAETjkB,SAAS4iC,GACP,MAAM1nB,EAAKtjB,KACLuyC,EAAOjvB,EAAG5jB,QAAQ6yC,KAClBjtC,EAAMge,EAAGhe,IACTsqB,EAAQtM,EAAGokC,iBAAmBpkC,EAAGokC,eAAiBpkC,EAAG4rC,sBAAsBlkB,IACjF,IAAIjpC,EAAGmL,EACP,MAAMiiD,EAAW,CAACx4C,EAAIC,EAAItY,KACnBA,EAAMwpB,OAAUxpB,EAAM8kB,QAG3B9d,EAAI6iB,OACJ7iB,EAAI+mB,UAAY/tB,EAAMwpB,MACtBxiB,EAAI8mB,YAAc9tB,EAAM8kB,MACxB9d,EAAI8pD,YAAY9wD,EAAMs/B,YAAc,IACpCt4B,EAAI+pD,eAAiB/wD,EAAMu/B,iBAC3Bv4B,EAAIskB,YACJtkB,EAAIykB,OAAOpT,EAAGhb,EAAGgb,EAAGvG,GACpB9K,EAAI0kB,OAAOpT,EAAGjb,EAAGib,EAAGxG,GACpB9K,EAAI8kB,SACJ9kB,EAAIgjB,YAEN,GAAIiqB,EAAKmG,QACP,IAAK32C,EAAI,EAAGmL,EAAO0iB,EAAM5tB,OAAQD,EAAImL,IAAQnL,EAAG,CAC9C,MAAM0wB,EAAO7C,EAAM7tB,GACfwwC,EAAK6S,iBACP+J,EACE,CAACxzD,EAAG82B,EAAKo7B,GAAIz9C,EAAGqiB,EAAKq7B,IACrB,CAACnyD,EAAG82B,EAAKs7B,GAAI39C,EAAGqiB,EAAKu7B,IACrBv7B,GAGA8f,EAAK8S,WACP8J,EACE,CAACxzD,EAAG82B,EAAKg7B,IAAKr9C,EAAGqiB,EAAKi7B,KACtB,CAAC/xD,EAAG82B,EAAKk7B,IAAKv9C,EAAGqiB,EAAKm7B,KACtB,CACExqC,MAAOqP,EAAK8yB,UACZz9B,MAAO2K,EAAK6yB,UACZ1nB,WAAYnL,EAAK47B,eACjBxwB,iBAAkBpL,EAAK67B,wBAOnClmD,aACE,MAAMkb,EAAKtjB,MACLklB,MAACA,EAAK5f,IAAEA,EAAK5F,SAAS6yC,KAACA,IAASjvB,EAChC6pC,EAAa5a,EAAKpgB,WAAW7O,EAAGwF,cAChCskC,EAAY7a,EAAK4S,WAAagI,EAAWhjC,YAAc,EAC7D,IAAKijC,EACH,OAEF,MAAMkC,EAAgB/c,EAAKpgB,WAAW7O,EAAGwF,WAAW,IAAIuD,UAClDkhC,EAAcjqC,EAAG6kC,aACvB,IAAI0F,EAAIE,EAAID,EAAIE,EACZ1qC,EAAGqsB,gBACLke,EAAKrlC,GAAYtD,EAAO5B,EAAGmH,KAAM2iC,GAAaA,EAAY,EAC1DW,EAAKvlC,GAAYtD,EAAO5B,EAAGoH,MAAO4kC,GAAiBA,EAAgB,EACnExB,EAAKE,EAAKT,IAEVO,EAAKtlC,GAAYtD,EAAO5B,EAAGqH,IAAKyiC,GAAaA,EAAY,EACzDY,EAAKxlC,GAAYtD,EAAO5B,EAAGsH,OAAQ0kC,GAAiBA,EAAgB,EACpEzB,EAAKE,EAAKR,GAEZjoD,EAAI6iB,OACJ7iB,EAAI+mB,UAAY8gC,EAAWhjC,YAC3B7kB,EAAI8mB,YAAc+gC,EAAWpoC,YAC7Bzf,EAAIskB,YACJtkB,EAAIykB,OAAO8jC,EAAIC,GACfxoD,EAAI0kB,OAAO+jC,EAAIC,GACf1oD,EAAI8kB,SACJ9kB,EAAIgjB,UAENlgB,WAAW4iC,GACT,MAAM1nB,EAAKtjB,KAEX,IADoBsjB,EAAG5jB,QAAQmuC,MACd6K,QACf,OAEF,MAAMpzC,EAAMge,EAAGhe,IACTilB,EAAOjH,EAAGisC,oBACZhlC,GACFM,GAASvlB,EAAKilB,GAEhB,MAAMqF,EAAQtM,EAAGqkC,cAAgBrkC,EAAGqkC,YAAcrkC,EAAGksC,mBAAmBxkB,IACxE,IAAIjpC,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO0iB,EAAM5tB,OAAQD,EAAImL,IAAQnL,EAAG,CAC9C,MAAM0wB,EAAO7C,EAAM7tB,GACbsqD,EAAW55B,EAAKlN,KAChBklB,EAAQhY,EAAKgY,MACfhY,EAAKq8B,WACPxpD,EAAI0mB,UAAYyG,EAAKq8B,SAAS1rC,MAC9B9d,EAAI0pD,SAASv8B,EAAKq8B,SAASrkC,KAAMgI,EAAKq8B,SAASnkC,IAAK8H,EAAKq8B,SAAShnC,MAAO2K,EAAKq8B,SAAS7lC,SAGzFwC,GAAWnmB,EAAKmlC,EAAO,EADfhY,EAAKi8B,WACgBrC,EAAU55B,GAErClI,GACFQ,GAAWzlB,GAGf8C,YACE,MAAM9C,IAACA,EAAK5F,SAASy6C,SAACA,EAAQtH,MAAEA,EAAKhmC,QAAEA,IAAY7M,KACnD,IAAK6yC,EAAM6F,QACT,OAEF,MAAMnzB,EAAO8I,GAAOwkB,EAAMttB,MACpB04B,EAAU7vB,GAAUykB,EAAMoL,SAC1BvyC,EAAQmnC,EAAMnnC,MACpB,IAAI4mC,EAAS/sB,EAAKE,WAAa,EACd,WAAb00B,GAAsC,WAAbA,GAAyBnuC,GAASmuC,IAC7D7H,GAAU2L,EAAQrzB,OACd/e,GAAQgnC,EAAM1zC,QAChBmzC,GAAU/sB,EAAKE,YAAcotB,EAAM1zC,KAAK6C,OAAS,KAGnDswC,GAAU2L,EAAQtzB,IAEpB,MAAM8kC,OAACA,EAAMC,OAAEA,EAAMnjC,SAAEA,EAAQhD,SAAEA,GA9hCrC,SAAmB/C,EAAO8rB,EAAQ6H,EAAUzuC,GAC1C,MAAMif,IAACA,EAAGF,KAAEA,EAAIG,OAAEA,EAAMF,MAAEA,EAAKxF,MAAEA,GAASsB,GACpCwkB,UAACA,EAASvkB,OAAEA,GAAUvB,EAC5B,IACIqH,EAAUkjC,EAAQC,EADlBnmC,EAAW,EAEf,MAAMN,EAAS2B,EAASD,EAClB7C,EAAQ4C,EAAQD,EACtB,GAAIjE,EAAMmpB,eAAgB,CAExB,GADA8f,EAAShkD,GAAeC,EAAO+e,EAAMC,GACjC1e,GAASmuC,GAAW,CACtB,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvByB,EAASjpC,EAAOwnC,GAAgBrgB,iBAAiBztC,GAAS8oB,EAASqpB,OAEnEod,EADsB,WAAbvV,GACCnP,EAAUpgB,OAASogB,EAAUrgB,KAAO,EAAI1B,EAASqpB,EAElD+T,GAAe7/B,EAAO2zB,EAAU7H,GAE3C/lB,EAAW7B,EAAQD,MACd,CACL,GAAIze,GAASmuC,GAAW,CACtB,MAAM8T,EAAiBlyD,OAAOgP,KAAKovC,GAAU,GACvCh6C,EAAQg6C,EAAS8T,GACvBwB,EAAShpC,EAAOwnC,GAAgBrgB,iBAAiBztC,GAAS2nB,EAAQwqB,OAElEmd,EADsB,WAAbtV,GACCnP,EAAUvgB,KAAOugB,EAAUtgB,OAAS,EAAI5C,EAAQwqB,EAEjD+T,GAAe7/B,EAAO2zB,EAAU7H,GAE3Cod,EAASjkD,GAAeC,EAAOkf,EAAQD,GACvCpB,EAAwB,SAAb4wB,GAAuBhrC,GAAUA,GAE9C,MAAO,CAACsgD,OAAAA,EAAQC,OAAAA,EAAQnjC,SAAAA,EAAUhD,SAAAA,GA8/BaomC,CAAU3vD,KAAMsyC,EAAQ6H,EAAUzuC,GAC/E+f,GAAWnmB,EAAKutC,EAAM1zC,KAAM,EAAG,EAAGomB,EAAM,CACtCnC,MAAOyvB,EAAMzvB,MACbmJ,SAAAA,EACAhD,SAAAA,EACA0C,UAAW86B,GAAWr7C,EAAOyuC,EAAUttC,GACvCqf,aAAc,SACdH,YAAa,CAAC0jC,EAAQC,KAG1BtnD,KAAK4iC,GACH,MAAM1nB,EAAKtjB,KACNsjB,EAAGqnC,eAGRrnC,EAAGssC,iBACHtsC,EAAGusC,SAAS7kB,GACZ1nB,EAAG6hC,aACH7hC,EAAGwsC,YACHxsC,EAAGysC,WAAW/kB,IAEhB5iC,UACE,MAAMkb,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QACVswD,EAAKtkC,EAAKmiB,OAASniB,EAAKmiB,MAAMsQ,GAAK,EACnC8R,EAAK3jD,GAAeof,EAAK6mB,MAAQ7mB,EAAK6mB,KAAK4L,GAAI,GACrD,OAAK76B,EAAGqnC,cAAgBrnC,EAAGub,OAASqoB,GAAM57C,UAAUuzB,KAQ7C,CAAC,CACNsf,EAAG8R,EACH7nD,KAAK4iC,GACH1nB,EAAGssC,iBACHtsC,EAAGusC,SAAS7kB,GACZ1nB,EAAGwsC,cAEJ,CACD3R,EAAG8R,EAAK,EACR7nD,OACEkb,EAAG6hC,eAEJ,CACDhH,EAAG6R,EACH5nD,KAAK4iC,GACH1nB,EAAGysC,WAAW/kB,MAtBT,CAAC,CACNmT,EAAG6R,EACH5nD,KAAK4iC,GACH1nB,EAAGub,KAAKmM,MAuBhB5iC,wBAAwBnE,GACtB,MAAMqf,EAAKtjB,KACLotC,EAAQ9pB,EAAG4B,MAAMk1B,+BACjB8V,EAAS5sC,EAAGqhB,KAAO,SACnBrN,EAAS,GACf,IAAIv1B,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAOkgC,EAAMprC,OAAQD,EAAImL,IAAQnL,EAAG,CAC9C,MAAM0hC,EAAO2J,EAAMrrC,GACf0hC,EAAKysB,KAAY5sC,EAAG3X,IAAQ1H,GAAQw/B,EAAKx/B,OAASA,GACpDqzB,EAAOxzB,KAAK2/B,GAGhB,OAAOnM,EAETlvB,wBAAwBsC,GAEtB,OAAO2jB,GADMruB,KAAKN,QAAQmuC,MAAM1b,WAAWnyB,KAAK8oB,WAAWpe,IACxC6a,MAErBnd,aACE,MAAMkb,EAAKtjB,KACLmwD,EAAW7sC,EAAGopC,wBAAwB,GAAGjnC,WAC/C,OAAQnC,EAAGqsB,eAAiBrsB,EAAGwE,MAAQxE,EAAG2F,QAAUknC,GAIxD,MAAMC,GACJhoD,YAAYnE,EAAMwgB,EAAOgM,GACvBzwB,KAAKiE,KAAOA,EACZjE,KAAKykB,MAAQA,EACbzkB,KAAKywB,SAAWA,EAChBzwB,KAAK4vB,MAAQ7zB,OAAOC,OAAO,MAE7BoM,UAAUnE,GACR,OAAOlI,OAAOuP,UAAU+kD,cAActwD,KAAKC,KAAKiE,KAAKqH,UAAWrH,EAAKqH,WAEvElD,SAASqqB,GACP,MAAMnP,EAAKtjB,KACLyiB,EAAQ1mB,OAAOw1B,eAAekB,GACpC,IAAI69B,GA+DR,SAA2B7tC,GACzB,MAAO,OAAQA,GAAS,aAAcA,GA/DhC8tC,CAAkB9tC,KACpB6tC,EAAchtC,EAAGktC,SAAS/tC,IAE5B,MAAMmN,EAAQtM,EAAGsM,MACXjkB,EAAK8mB,EAAK9mB,GACV8Y,EAAQnB,EAAGmB,MAAQ,IAAM9Y,EAC/B,IAAKA,EACH,MAAM,IAAIjI,MAAM,2BAA6B+uB,GAE/C,OAAI9mB,KAAMikB,IAGVA,EAAMjkB,GAAM8mB,EAyBhB,SAA0BA,EAAMhO,EAAO6rC,GACrC,MAAMG,EAAe3iD,GAAM/R,OAAOC,OAAO,MAAO,CAC9Cs0D,EAAc3rC,GAASkM,IAAIy/B,GAAe,GAC1C3rC,GAASkM,IAAIpM,GACbgO,EAAK9N,WAEPA,GAASH,IAAIC,EAAOgsC,GAChBh+B,EAAKiwB,eAOX,SAAuBj+B,EAAOisC,GAC5B30D,OAAOgP,KAAK2lD,GAAQv0D,SAAQqU,IAC1B,MAAMmgD,EAAgBngD,EAAS1N,MAAM,KAC/B8tD,EAAaD,EAAc3rD,MAC3B6rD,EAAc,CAACpsC,GAAO4oB,OAAOsjB,GAAevtD,KAAK,KACjD0tD,EAAQJ,EAAOlgD,GAAU1N,MAAM,KAC/B+jB,EAAaiqC,EAAM9rD,MACnB4hB,EAAckqC,EAAM1tD,KAAK,KAC/BuhB,GAASyhC,MAAMyK,EAAaD,EAAYhqC,EAAaC,MAdrDkqC,CAActsC,EAAOgO,EAAKiwB,eAExBjwB,EAAKnO,aACPK,GAASgC,SAASlC,EAAOgO,EAAKnO,aAnC9B0sC,CAAiBv+B,EAAMhO,EAAO6rC,GAC1BhtC,EAAGmN,UACL9L,GAAS8L,SAASgC,EAAK9mB,GAAI8mB,EAAKpO,YALzBI,EASXrc,IAAIuD,GACF,OAAO3L,KAAK4vB,MAAMjkB,GAEpBvD,WAAWqqB,GACT,MAAM7C,EAAQ5vB,KAAK4vB,MACbjkB,EAAK8mB,EAAK9mB,GACV8Y,EAAQzkB,KAAKykB,MACf9Y,KAAMikB,UACDA,EAAMjkB,GAEX8Y,GAAS9Y,KAAMgZ,GAASF,YACnBE,GAASF,GAAO9Y,GACnB3L,KAAKywB,iBACApM,GAAU1Y,KAyHzB,IAAIslD,GAAW,IAvFf,MACE7oD,cACEpI,KAAKkxD,YAAc,IAAId,GAAc1qB,GAAmB,YAAY,GACpE1lC,KAAKqlB,SAAW,IAAI+qC,GAAc7N,GAAS,YAC3CviD,KAAKsmB,QAAU,IAAI8pC,GAAcr0D,OAAQ,WACzCiE,KAAKymB,OAAS,IAAI2pC,GAAclJ,GAAO,UACvClnD,KAAKmxD,iBAAmB,CAACnxD,KAAKkxD,YAAalxD,KAAKymB,OAAQzmB,KAAKqlB,UAE/Djd,OAAOiD,GACLrL,KAAKoxD,MAAM,WAAY/lD,GAEzBjD,UAAUiD,GACRrL,KAAKoxD,MAAM,aAAc/lD,GAE3BjD,kBAAkBiD,GAChBrL,KAAKoxD,MAAM,WAAY/lD,EAAMrL,KAAKkxD,aAEpC9oD,eAAeiD,GACbrL,KAAKoxD,MAAM,WAAY/lD,EAAMrL,KAAKqlB,UAEpCjd,cAAciD,GACZrL,KAAKoxD,MAAM,WAAY/lD,EAAMrL,KAAKsmB,SAEpCle,aAAaiD,GACXrL,KAAKoxD,MAAM,WAAY/lD,EAAMrL,KAAKymB,QAEpCre,cAAcuD,GACZ,OAAO3L,KAAKqxD,KAAK1lD,EAAI3L,KAAKkxD,YAAa,cAEzC9oD,WAAWuD,GACT,OAAO3L,KAAKqxD,KAAK1lD,EAAI3L,KAAKqlB,SAAU,WAEtCjd,UAAUuD,GACR,OAAO3L,KAAKqxD,KAAK1lD,EAAI3L,KAAKsmB,QAAS,UAErCle,SAASuD,GACP,OAAO3L,KAAKqxD,KAAK1lD,EAAI3L,KAAKymB,OAAQ,SAEpCre,qBAAqBiD,GACnBrL,KAAKoxD,MAAM,aAAc/lD,EAAMrL,KAAKkxD,aAEtC9oD,kBAAkBiD,GAChBrL,KAAKoxD,MAAM,aAAc/lD,EAAMrL,KAAKqlB,UAEtCjd,iBAAiBiD,GACfrL,KAAKoxD,MAAM,aAAc/lD,EAAMrL,KAAKsmB,SAEtCle,gBAAgBiD,GACdrL,KAAKoxD,MAAM,aAAc/lD,EAAMrL,KAAKymB,QAEtCre,MAAM+4B,EAAQ91B,EAAMimD,GAClB,MAAMhuC,EAAKtjB,KACX,IAAIqL,GAAMlP,SAAQo1D,IAChB,MAAMC,EAAMF,GAAiBhuC,EAAGmuC,oBAAoBF,GAChDD,GAAiBE,EAAIE,UAAUH,IAASC,IAAQluC,EAAGgD,SAAWirC,EAAI5lD,GACpE2X,EAAGquC,MAAMxwB,EAAQqwB,EAAKD,GAEtB5kD,GAAK4kD,GAAK9+B,IACR,MAAMm/B,EAAUN,GAAiBhuC,EAAGmuC,oBAAoBh/B,GACxDnP,EAAGquC,MAAMxwB,EAAQywB,EAASn/B,SAKlCrqB,MAAM+4B,EAAQ8vB,EAAUztD,GACtB,MAAMquD,EAAcrjD,GAAY2yB,GAChCl8B,GAASzB,EAAU,SAAWquD,GAAc,GAAIruD,GAChDytD,EAAS9vB,GAAQ39B,GACjByB,GAASzB,EAAU,QAAUquD,GAAc,GAAIruD,GAEjD4E,oBAAoBnE,GAClB,IAAK,IAAIlC,EAAI,EAAGA,EAAI/B,KAAKmxD,iBAAiBnvD,OAAQD,IAAK,CACrD,MAAMyvD,EAAMxxD,KAAKmxD,iBAAiBpvD,GAClC,GAAIyvD,EAAIE,UAAUztD,GAChB,OAAOutD,EAGX,OAAOxxD,KAAKsmB,QAEdle,KAAKuD,EAAI2lD,EAAertD,GACtB,MAAMwuB,EAAO6+B,EAAczgC,IAAIllB,GAC/B,QAAakZ,IAAT4N,EACF,MAAM,IAAI/uB,MAAM,IAAMiI,EAAK,yBAA2B1H,EAAO,KAE/D,OAAOwuB,IAKX,MAAMq/B,GACJ1pD,cACEpI,KAAK+xD,MAAQ,GAEf3pD,OAAO8c,EAAO8sC,EAAM3mD,EAAMrI,GACxB,MAAMsgB,EAAKtjB,KACE,eAATgyD,IACF1uC,EAAGyuC,MAAQzuC,EAAG2uC,mBAAmB/sC,GAAO,GACxC5B,EAAG0b,QAAQ1b,EAAGyuC,MAAO7sC,EAAO,YAE9B,MAAMZ,EAActhB,EAASsgB,EAAGsB,aAAaM,GAAOliB,OAAOA,GAAUsgB,EAAGsB,aAAaM,GAC/EoS,EAAShU,EAAG0b,QAAQ1a,EAAaY,EAAO8sC,EAAM3mD,GAKpD,MAJa,YAAT2mD,IACF1uC,EAAG0b,QAAQ1a,EAAaY,EAAO,QAC/B5B,EAAG0b,QAAQ1b,EAAGyuC,MAAO7sC,EAAO,cAEvBoS,EAETlvB,QAAQkc,EAAaY,EAAO8sC,EAAM3mD,GAChCA,EAAOA,GAAQ,GACf,IAAK,MAAM6mD,KAAc5tC,EAAa,CACpC,MAAM6tC,EAASD,EAAWC,OAG1B,IAAyC,IAArCltD,GAFWktD,EAAOH,GACP,CAAC9sC,EAAO7Z,EAAM6mD,EAAWxyD,SACXyyD,IAAqB9mD,EAAK+mD,WACrD,OAAO,EAGX,OAAO,EAEThqD,aACOwD,GAAc5L,KAAKktC,UACtBltC,KAAKqyD,UAAYryD,KAAKktC,OACtBltC,KAAKktC,YAASroB,GAGlBzc,aAAa8c,GACX,GAAIllB,KAAKktC,OACP,OAAOltC,KAAKktC,OAEd,MAAM5oB,EAActkB,KAAKktC,OAASltC,KAAKiyD,mBAAmB/sC,GAE1D,OADAllB,KAAKsyD,oBAAoBptC,GAClBZ,EAETlc,mBAAmB8c,EAAOwd,GACxB,MAAMx7B,EAASge,GAASA,EAAMhe,OACxBxH,EAAU4M,GAAepF,EAAOxH,SAAWwH,EAAOxH,QAAQ4mB,QAAS,IACnEA,EAWV,SAAoBpf,GAClB,MAAMof,EAAU,GACVvb,EAAOhP,OAAOgP,KAAKkmD,GAAS3qC,QAAQsJ,OAC1C,IAAK,IAAI7tB,EAAI,EAAGA,EAAIgJ,EAAK/I,OAAQD,IAC/BukB,EAAQxiB,KAAKmtD,GAASsB,UAAUxnD,EAAKhJ,KAEvC,MAAM2E,EAAQQ,EAAOof,SAAW,GAChC,IAAK,IAAIvkB,EAAI,EAAGA,EAAI2E,EAAM1E,OAAQD,IAAK,CACrC,MAAMowD,EAASzrD,EAAM3E,IACY,IAA7BukB,EAAQpjB,QAAQivD,IAClB7rC,EAAQxiB,KAAKquD,GAGjB,OAAO7rC,EAxBWksC,CAAWtrD,GAC3B,OAAmB,IAAZxH,GAAsBgjC,EAkCjC,SAA2Bxd,EAAOoB,EAAS5mB,EAASgjC,GAClD,MAAMpL,EAAS,GACT3tB,EAAUub,EAAM4D,aACtB,IAAK,IAAI/mB,EAAI,EAAGA,EAAIukB,EAAQtkB,OAAQD,IAAK,CACvC,MAAMowD,EAAS7rC,EAAQvkB,GAEjB2pB,EAAO+mC,GAAQ/yD,EADVyyD,EAAOxmD,IACgB+2B,GACrB,OAAThX,GAGJ4L,EAAOxzB,KAAK,CACVquD,OAAAA,EACAzyD,QAASgzD,GAAWxtC,EAAMhe,OAAQirD,EAAQzmC,EAAM/hB,KAGpD,OAAO2tB,EAjDmCq7B,CAAkBztC,EAAOoB,EAAS5mB,EAASgjC,GAAhD,GAErCt6B,oBAAoB8c,GAClB,MAAM0tC,EAAsB5yD,KAAKqyD,WAAa,GACxC/tC,EAActkB,KAAKktC,OACnBwX,EAAO,CAACnoD,EAAGC,IAAMD,EAAEyG,QAAOrH,IAAMa,EAAEq2D,MAAKziD,GAAKzU,EAAEw2D,OAAOxmD,KAAOyE,EAAE+hD,OAAOxmD,OAC3E3L,KAAKg/B,QAAQ0lB,EAAKkO,EAAqBtuC,GAAcY,EAAO,QAC5DllB,KAAKg/B,QAAQ0lB,EAAKpgC,EAAasuC,GAAsB1tC,EAAO,UAkBhE,SAASutC,GAAQ/yD,EAASgjC,GACxB,OAAKA,IAAmB,IAAZhjC,GAGI,IAAZA,EACK,GAEFA,EALE,KAwBX,SAASgzD,GAAWxrD,EAAQirD,EAAQzmC,EAAM/hB,GACxC,MAAMoB,EAAO7D,EAAO4rD,gBAAgBX,GAC9BriC,EAAS5oB,EAAO2hC,gBAAgBnd,EAAM3gB,GAC5C,OAAO7D,EAAO4hC,eAAehZ,EAAQnmB,EAAS,CAAC,IAAK,CAACopB,YAAY,EAAOC,WAAW,EAAOH,SAAS,IAGrG,SAASkgC,GAAa9uD,EAAMvE,GAC1B,MAAMszD,EAAkBruC,GAASK,SAAS/gB,IAAS,GAEnD,QADwBvE,EAAQslB,UAAY,IAAI/gB,IAAS,IACnC6hB,WAAapmB,EAAQomB,WAAaktC,EAAgBltC,WAAa,IAsBvF,SAASmtC,GAActnD,EAAIunD,GACzB,MAAW,MAAPvnD,GAAqB,MAAPA,EACTA,EAEFunD,EAAavuB,OAXH,SADOwV,EAYqB+Y,EAAa/Y,WAXnB,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAQuExuC,EAAG8C,OAAO,GAAG2T,cAZtF,IAA0B+3B,EA8C1B,SAASgZ,GAAYjsD,GACnB,MAAMxH,EAAUwH,EAAOxH,UAAYwH,EAAOxH,QAAU,IACpDA,EAAQ4mB,QAAUha,GAAe5M,EAAQ4mB,QAAS,IAClD5mB,EAAQ+mB,OAnCV,SAA0Bvf,EAAQxH,GAChC,MAAM0zD,EAAgB/uC,GAAUnd,EAAOjD,OAAS,CAACwiB,OAAQ,IACnD4sC,EAAe3zD,EAAQ+mB,QAAU,GACjC6sC,EAAiBP,GAAa7rD,EAAOjD,KAAMvE,GAC3C6zD,EAAWx3D,OAAOC,OAAO,MACzByqB,EAAS1qB,OAAOC,OAAO,MAyB7B,OAxBAD,OAAOgP,KAAKsoD,GAAcl3D,SAAQwP,IAChC,MAAM6nD,EAAYH,EAAa1nD,GACzBg5B,EAAOsuB,GAActnD,EAAI6nD,GACzBC,EA1BV,SAAmC9uB,EAAM7e,GACvC,OAAO6e,IAAS7e,EAAY,UAAY,UAyBpB4tC,CAA0B/uB,EAAM2uB,GAC5CK,EAAsBP,EAAc3sC,QAAU,GACpD8sC,EAAS5uB,GAAQ4uB,EAAS5uB,IAASh5B,EACnC8a,EAAO9a,GAAMsC,GAAQlS,OAAOC,OAAO,MAAO,CAAC,CAAC2oC,KAAAA,GAAO6uB,EAAWG,EAAoBhvB,GAAOgvB,EAAoBF,QAE/GvsD,EAAO9H,KAAK4lB,SAAS7oB,SAAQyqC,IAC3B,MAAM3iC,EAAO2iC,EAAQ3iC,MAAQiD,EAAOjD,KAC9B6hB,EAAY8gB,EAAQ9gB,WAAaitC,GAAa9uD,EAAMvE,GAEpDi0D,GADkBtvC,GAAUpgB,IAAS,IACCwiB,QAAU,GACtD1qB,OAAOgP,KAAK4oD,GAAqBx3D,SAAQy3D,IACvC,MAAMjvB,EA9CZ,SAAmCh5B,EAAIma,GACrC,IAAI6e,EAAOh5B,EAMX,MALW,YAAPA,EACFg5B,EAAO7e,EACS,YAAPna,IACTg5B,EAAqB,MAAd7e,EAAoB,IAAM,KAE5B6e,EAuCUkvB,CAA0BD,EAAW9tC,GAC5Cna,EAAKi7B,EAAQjC,EAAO,WAAa4uB,EAAS5uB,IAASA,EACzDle,EAAO9a,GAAM8a,EAAO9a,IAAO5P,OAAOC,OAAO,MACzCiS,GAAQwY,EAAO9a,GAAK,CAAC,CAACg5B,KAAAA,GAAO0uB,EAAa1nD,GAAKgoD,EAAoBC,WAGvE73D,OAAOgP,KAAK0b,GAAQtqB,SAAQuE,IAC1B,MAAM8lB,EAAQC,EAAO/lB,GACrBuN,GAAQuY,EAAO,CAAC7B,GAAS8B,OAAOD,EAAMviB,MAAO0gB,GAAS6B,WAEjDC,EAKUqtC,CAAiB5sD,EAAQxH,GAE5C,SAASq0D,GAAS30D,GAIhB,OAHAA,EAAOA,GAAQ,IACV4lB,SAAW5lB,EAAK4lB,UAAY,GACjC5lB,EAAKiqC,OAASjqC,EAAKiqC,QAAU,GACtBjqC,EAQT,MAAM40D,GAAW,IAAIpqD,IACfqqD,GAAa,IAAI/2D,IACvB,SAASg3D,GAAWp5B,EAAUq5B,GAC5B,IAAIppD,EAAOipD,GAASnjC,IAAIiK,GAMxB,OALK/vB,IACHA,EAAOopD,IACPH,GAASxvC,IAAIsW,EAAU/vB,GACvBkpD,GAAW9xD,IAAI4I,IAEVA,EAET,MAAMqpD,GAAa,CAAC5vC,EAAK3Z,EAAKnK,KAC5B,MAAMgrB,EAAOpd,GAAiBzD,EAAKnK,QACtBmkB,IAAT6G,GACFlH,EAAIriB,IAAIupB,IAGZ,MAAM2oC,GACJjsD,YAAYlB,GACVlH,KAAKs0D,QAzBT,SAAoBptD,GAIlB,OAHAA,EAASA,GAAU,IACZ9H,KAAO20D,GAAS7sD,EAAO9H,MAC9B+zD,GAAYjsD,GACLA,EAqBUqtD,CAAWrtD,GAC1BlH,KAAKw0D,YAAc,IAAI5qD,IACvB5J,KAAKy0D,eAAiB,IAAI7qD,IAE5Bub,eACE,OAAOnlB,KAAKs0D,QAAQnvC,SAEtBlhB,WACE,OAAOjE,KAAKs0D,QAAQrwD,KAEtBA,SAASA,GACPjE,KAAKs0D,QAAQrwD,KAAOA,EAEtB7E,WACE,OAAOY,KAAKs0D,QAAQl1D,KAEtBA,SAASA,GACPY,KAAKs0D,QAAQl1D,KAAO20D,GAAS30D,GAE/BM,cACE,OAAOM,KAAKs0D,QAAQ50D,QAEtBA,YAAYA,GACVM,KAAKs0D,QAAQ50D,QAAUA,EAEzB4mB,cACE,OAAOtmB,KAAKs0D,QAAQhuC,QAEtBle,SACE,MAAMlB,EAASlH,KAAKs0D,QACpBt0D,KAAK00D,aACLvB,GAAYjsD,GAEdkB,aACEpI,KAAKw0D,YAAYlxD,QACjBtD,KAAKy0D,eAAenxD,QAEtB8E,iBAAiBusD,GACf,OAAOT,GAAWS,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,OAGNvsD,0BAA0BusD,EAAa5oB,GACrC,OAAOmoB,GAAW,GAAGS,gBAA0B5oB,KAC7C,IAAM,CACJ,CACE,YAAY4oB,iBAA2B5oB,IACvC,eAAeA,KAEjB,CACE,YAAY4oB,IACZ,OAIRvsD,wBAAwBusD,EAAajpB,GACnC,OAAOwoB,GAAW,GAAGS,KAAejpB,KAClC,IAAM,CAAC,CACL,YAAYipB,cAAwBjpB,IACpC,YAAYipB,IACZ,YAAYjpB,IACZ,OAGNtjC,gBAAgB+pD,GACd,MAAMxmD,EAAKwmD,EAAOxmD,GAElB,OAAOuoD,GAAW,GADLl0D,KAAKiE,eACkB0H,KAClC,IAAM,CAAC,CACL,WAAWA,OACRwmD,EAAOyC,wBAA0B,OAG1CxsD,cAAcysD,EAAWC,GACvB,MAAMN,EAAcx0D,KAAKw0D,YACzB,IAAIvsC,EAAQusC,EAAY3jC,IAAIgkC,GAK5B,OAJK5sC,IAAS6sC,IACZ7sC,EAAQ,IAAIre,IACZ4qD,EAAYhwC,IAAIqwC,EAAW5sC,IAEtBA,EAET7f,gBAAgBysD,EAAWE,EAAUD,GACnC,MAAMp1D,QAACA,EAAOuE,KAAEA,GAAQjE,KAClBioB,EAAQjoB,KAAKg1D,cAAcH,EAAWC,GACtCtvB,EAASvd,EAAM4I,IAAIkkC,GACzB,GAAIvvB,EACF,OAAOA,EAET,MAAM1V,EAAS,IAAI5yB,IACnB63D,EAAS54D,SAAQ4O,IACX8pD,IACF/kC,EAAO3tB,IAAI0yD,GACX9pD,EAAK5O,SAAQuE,GAAO0zD,GAAWtkC,EAAQ+kC,EAAWn0D,MAEpDqK,EAAK5O,SAAQuE,GAAO0zD,GAAWtkC,EAAQpwB,EAASgB,KAChDqK,EAAK5O,SAAQuE,GAAO0zD,GAAWtkC,EAAQzL,GAAUpgB,IAAS,GAAIvD,KAC9DqK,EAAK5O,SAAQuE,GAAO0zD,GAAWtkC,EAAQnL,GAAUjkB,KACjDqK,EAAK5O,SAAQuE,GAAO0zD,GAAWtkC,EAAQxL,GAAa5jB,QAEtD,MAAM6P,EAAQpG,MAAMC,KAAK0lB,GAOzB,OANqB,IAAjBvf,EAAMvO,QACRuO,EAAMzM,KAAK/H,OAAOC,OAAO,OAEvBi4D,GAAW/uD,IAAI6vD,IACjB9sC,EAAMzD,IAAIuwC,EAAUxkD,GAEfA,EAETnI,oBACE,MAAM1I,QAACA,EAAOuE,KAAEA,GAAQjE,KACxB,MAAO,CACLN,EACA2kB,GAAUpgB,IAAS,GACnB0gB,GAASK,SAAS/gB,IAAS,GAC3B,CAACA,KAAAA,GACD0gB,GACAL,IAGJlc,oBAAoB0nB,EAAQ1X,EAAOzO,EAASomB,EAAW,CAAC,KACtD,MAAMuH,EAAS,CAAC+K,SAAS,IACnB3P,SAACA,EAAQuiC,YAAEA,GAAeC,GAAYl1D,KAAKy0D,eAAgB3kC,EAAQC,GACzE,IAAIrwB,EAAUgzB,EACd,GAoCJ,SAAqB3B,EAAO3Y,GAC1B,MAAMia,aAACA,EAAYE,YAAEA,GAAe3N,GAAamM,GACjD,IAAK,MAAM9C,KAAQ7V,EACjB,GAAKia,EAAapE,IAASrf,GAAWmiB,EAAM9C,KACtCsE,EAAYtE,IAASpiB,GAAQklB,EAAM9C,IACvC,OAAO,EAGX,OAAO,EA5CDknC,CAAYziC,EAAUta,GAAQ,CAChCkf,EAAO+K,SAAU,EAGjB3iC,EAAUkyB,GAAec,EAFzB/oB,EAAUiF,GAAWjF,GAAWA,IAAYA,EACxB3J,KAAK8oC,eAAehZ,EAAQnmB,EAASsrD,IAG3D,IAAK,MAAMhnC,KAAQ7V,EACjBkf,EAAOrJ,GAAQvuB,EAAQuuB,GAEzB,OAAOqJ,EAETlvB,eAAe0nB,EAAQnmB,EAASomB,EAAW,CAAC,IAAK+B,GAC/C,MAAMY,SAACA,GAAYwiC,GAAYl1D,KAAKy0D,eAAgB3kC,EAAQC,GAC5D,OAAO/jB,GAASrC,GACZioB,GAAec,EAAU/oB,OAASkb,EAAWiN,GAC7CY,GAGR,SAASwiC,GAAYE,EAAetlC,EAAQC,GAC1C,IAAI9H,EAAQmtC,EAAcvkC,IAAIf,GACzB7H,IACHA,EAAQ,IAAIre,IACZwrD,EAAc5wC,IAAIsL,EAAQ7H,IAE5B,MAAM6S,EAAW/K,EAAS3sB,OAC1B,IAAIoiC,EAASvd,EAAM4I,IAAIiK,GACvB,IAAK0K,EAAQ,CAEXA,EAAS,CACP9S,SAFe7C,GAAgBC,EAAQC,GAGvCklC,YAAallC,EAAS/sB,QAAOtB,IAAMA,EAAE0gB,cAAcqP,SAAS,YAE9DxJ,EAAMzD,IAAIsW,EAAU0K,GAEtB,OAAOA,EAeT,MAAM6vB,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBnb,EAAUxV,GACtC,MAAoB,QAAbwV,GAAmC,WAAbA,IAAiE,IAAvCkb,GAAgBnyD,QAAQi3C,IAA6B,MAATxV,EAErG,SAAS4wB,GAAcC,EAAIC,GACzB,OAAO,SAASl5D,EAAGC,GACjB,OAAOD,EAAEi5D,KAAQh5D,EAAEg5D,GACfj5D,EAAEk5D,GAAMj5D,EAAEi5D,GACVl5D,EAAEi5D,GAAMh5D,EAAEg5D,IAGlB,SAASE,GAAqB/rD,GAC5B,MAAMub,EAAQvb,EAAQub,MAChBkc,EAAmBlc,EAAMxlB,QAAQiD,UACvCuiB,EAAMmlC,cAAc,eACpBplD,GAASm8B,GAAoBA,EAAiBu0B,WAAY,CAAChsD,GAAUub,GAEvE,SAAS0wC,GAAoBjsD,GAC3B,MAAMub,EAAQvb,EAAQub,MAChBkc,EAAmBlc,EAAMxlB,QAAQiD,UACvCsC,GAASm8B,GAAoBA,EAAiBy0B,WAAY,CAAClsD,GAAUub,GAEvE,SAAS4wC,GAAUrjC,GASjB,OARIiE,MAAqC,iBAATjE,EAC9BA,EAAO30B,SAASi4D,eAAetjC,GACtBA,GAAQA,EAAKzwB,SACtBywB,EAAOA,EAAK,IAEVA,GAAQA,EAAK5J,SACf4J,EAAOA,EAAK5J,QAEP4J,EAET,MAAMujC,GAAY,GACZC,GAAYv1D,IAChB,MAAMmoB,EAASitC,GAAUp1D,GACzB,OAAO3E,OAAO2oB,OAAOsxC,IAAWhzD,QAAQ3F,GAAMA,EAAEwrB,SAAWA,IAAQ7jB,OAErE,MAAMkxD,GACJ9tD,YAAYqqB,EAAM0jC,GAChB,MAAM7yC,EAAKtjB,KACLkH,EAASlH,KAAKkH,OAAS,IAAImtD,GAAO8B,GAClCC,EAAgBN,GAAUrjC,GAC1B4jC,EAAgBJ,GAASG,GAC/B,GAAIC,EACF,MAAM,IAAI3yD,MACR,4CAA+C2yD,EAAc1qD,GAA7D,wDAIJ,MAAMjM,EAAUwH,EAAO4hC,eAAe5hC,EAAOovD,oBAAqBhzC,EAAGwF,cACrE9oB,KAAKmlB,SAAW,IAAKje,EAAOie,UAphEhC,SAAyB0D,GACvB,OAAK6N,MAAiD,oBAApB6/B,iBAAmC1tC,aAAkB0tC,gBAC9EjX,GAEFuC,GAghEmC2U,CAAgBJ,IACxD,MAAMzsD,EAAU2Z,EAAG6B,SAASsxC,eAAeL,EAAe12D,EAAQk5B,aAC5D/P,EAASlf,GAAWA,EAAQkf,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1BnB,EAAQe,GAAUA,EAAOf,MAC/B9nB,KAAK2L,GAAKpK,KACVvB,KAAKsF,IAAMqE,EACX3J,KAAK6oB,OAASA,EACd7oB,KAAK8nB,MAAQA,EACb9nB,KAAKipB,OAASA,EACdjpB,KAAK02D,SAAWh3D,EAChBM,KAAK22D,aAAe32D,KAAK44B,YACzB54B,KAAKk+C,QAAU,GACfl+C,KAAK42D,UAAY,GACjB52D,KAAKwkC,aAAU3f,EACf7kB,KAAK29C,MAAQ,GACb39C,KAAK0oB,6BAA0B7D,EAC/B7kB,KAAKgrC,eAAYnmB,EACjB7kB,KAAK8+B,QAAU,GACf9+B,KAAK62D,gBAAahyC,EAClB7kB,KAAK82D,WAAa,GAClB92D,KAAK+2D,0BAAuBlyC,EAC5B7kB,KAAKg3D,gBAAkB,GACvBh3D,KAAKymB,OAAS,GACdzmB,KAAKi3D,SAAW,IAAInF,GACpB9xD,KAAKoiD,SAAW,GAChBpiD,KAAKk3D,eAAiB,GACtBl3D,KAAKm3D,UAAW,EAChBn3D,KAAKksC,yBAAsBrnB,EAC3B7kB,KAAKsmC,cAAWzhB,EAChB7kB,KAAKo3D,UDxuKT,SAAkBv7D,EAAIwF,GACpB,IAAIg2D,EACJ,OAAO,WAOL,OANIh2D,GACFi2D,aAAaD,GACbA,EAAUE,WAAW17D,EAAIwF,IAEzBxF,IAEKwF,GC+tKUm2D,EAAS,IAAMx3D,KAAK+E,OAAO,WAAWrF,EAAQ+3D,aAAe,GAC9EzB,GAAU1yC,EAAG3X,IAAM2X,EACd3Z,GAAYkf,GAIjBkV,GAASx+B,OAAO+jB,EAAI,WAAYoyC,IAChC33B,GAASx+B,OAAO+jB,EAAI,WAAYsyC,IAChCtyC,EAAGo0C,cACCp0C,EAAG6zC,UACL7zC,EAAGve,UAPHwpB,QAAQopC,MAAM,qEAUlB/+B,kBACE,MAAOl5B,SAASk5B,YAACA,EAAW1S,oBAAEA,GAAoB4B,MAAEA,EAAKmB,OAAEA,EAAM0tC,aAAEA,GAAgB32D,KACnF,OAAK4L,GAAcgtB,GAGf1S,GAAuBywC,EAClBA,EAEF1tC,EAASnB,EAAQmB,EAAS,KALxB2P,EAOXx5B,WACE,OAAOY,KAAKkH,OAAO9H,KAErBA,SAASA,GACPY,KAAKkH,OAAO9H,KAAOA,EAErBM,cACE,OAAOM,KAAK02D,SAEdh3D,YAAYA,GACVM,KAAKkH,OAAOxH,QAAUA,EAExB0I,cACE,MAAMkb,EAAKtjB,KASX,OARAsjB,EAAG+mC,cAAc,cACb/mC,EAAG5jB,QAAQ6mB,WACbjD,EAAGke,SAEHjI,GAAYjW,EAAIA,EAAG5jB,QAAQulB,kBAE7B3B,EAAGs0C,aACHt0C,EAAG+mC,cAAc,aACV/mC,EAETlb,QAEE,OADAwgB,GAAY5oB,KAAK6oB,OAAQ7oB,KAAKsF,KACvBtF,KAEToI,OAEE,OADA21B,GAASyZ,KAAKx3C,MACPA,KAEToI,OAAO0f,EAAOmB,GACP8U,GAASa,QAAQ5+B,MAGpBA,KAAK63D,kBAAoB,CAAC/vC,MAAAA,EAAOmB,OAAAA,GAFjCjpB,KAAK83D,QAAQhwC,EAAOmB,GAKxB7gB,QAAQ0f,EAAOmB,GACb,MAAM3F,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACbmpB,EAASvF,EAAGuF,OACZ+P,EAAcl5B,EAAQwmB,qBAAuB5C,EAAGsV,YAChDm/B,EAAUz0C,EAAG6B,SAASsT,eAAe5P,EAAQf,EAAOmB,EAAQ2P,GAC5Do/B,EAAWt4D,EAAQulB,kBAAoB3B,EAAG6B,SAASC,sBACzD9B,EAAGwE,MAAQiwC,EAAQjwC,MACnBxE,EAAG2F,OAAS8uC,EAAQ9uC,OACpB3F,EAAGqzC,aAAerzC,EAAGsV,YAChBW,GAAYjW,EAAI00C,GAAU,KAG/B10C,EAAG+mC,cAAc,SAAU,CAAC7sD,KAAMu6D,IAClC9yD,GAASvF,EAAQu4D,SAAU,CAAC30C,EAAIy0C,GAAUz0C,GACtCA,EAAG6zC,UACD7zC,EAAG8zC,aACL9zC,EAAG40C,UAIT9vD,sBAGEuE,GAFgB3M,KAAKN,QACS+mB,QAAU,IACpB,CAAC0xC,EAAajI,KAChCiI,EAAYxsD,GAAKukD,KAGrB9nD,sBACE,MAAMkb,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACb04D,EAAY14D,EAAQ+mB,OACpBA,EAASnD,EAAGmD,OACZ4xC,EAAUt8D,OAAOgP,KAAK0b,GAAQ4Y,QAAO,CAACx0B,EAAKc,KAC/Cd,EAAIc,IAAM,EACHd,IACN,IACH,IAAI+kB,EAAQ,GACRwoC,IACFxoC,EAAQA,EAAMyd,OACZtxC,OAAOgP,KAAKqtD,GAAWtvD,KAAK6C,IAC1B,MAAMunD,EAAekF,EAAUzsD,GACzBg5B,EAAOsuB,GAActnD,EAAIunD,GACzBoF,EAAoB,MAAT3zB,EACXgL,EAAwB,MAAThL,EACrB,MAAO,CACLjlC,QAASwzD,EACTqF,UAAWD,EAAW,YAAc3oB,EAAe,SAAW,OAC9D6oB,MAAOF,EAAW,eAAiB3oB,EAAe,WAAa,eAKvEhjC,GAAKijB,GAAQ6C,IACX,MAAMygC,EAAezgC,EAAK/yB,QACpBiM,EAAKunD,EAAavnD,GAClBg5B,EAAOsuB,GAActnD,EAAIunD,GACzBuF,EAAYnsD,GAAe4mD,EAAajvD,KAAMwuB,EAAK+lC,YAC3B3zC,IAA1BquC,EAAa/Y,UAA0Bmb,GAAqBpC,EAAa/Y,SAAUxV,KAAU2wB,GAAqB7iC,EAAK8lC,aACzHrF,EAAa/Y,SAAW1nB,EAAK8lC,WAE/BF,EAAQ1sD,IAAM,EACd,IAAI6a,EAAQ,KACZ,GAAI7a,KAAM8a,GAAUA,EAAO9a,GAAI1H,OAASw0D,EACtCjyC,EAAQC,EAAO9a,OACV,CAEL6a,EAAQ,IADWyqC,GAASyH,SAASD,GAC7B,CAAe,CACrB9sD,GAAAA,EACA1H,KAAMw0D,EACNnzD,IAAKge,EAAGhe,IACR4f,MAAO5B,IAETmD,EAAOD,EAAM7a,IAAM6a,EAErBA,EAAMjf,KAAK2rD,EAAcxzD,MAE3BiN,GAAK0rD,GAAS,CAACM,EAAYhtD,KACpBgtD,UACIlyC,EAAO9a,MAGlBgB,GAAK8Z,GAASD,IACZu1B,GAAQ/Z,UAAU1e,EAAIkD,EAAOA,EAAM9mB,SACnCq8C,GAAQ6c,OAAOt1C,EAAIkD,MAGvBpe,kBACE,MAAMkb,EAAKtjB,KACLijC,EAAW3f,EAAGszC,UACdnqB,EAAUnpB,EAAGlkB,KAAK4lB,SAAShjB,OAC3BwqC,EAAUvJ,EAASjhC,OAEzB,GADAihC,EAASsK,MAAK,CAAChxC,EAAGC,IAAMD,EAAEmO,MAAQlO,EAAEkO,QAChC8hC,EAAUC,EAAS,CACrB,IAAK,IAAI1qC,EAAI0qC,EAAS1qC,EAAIyqC,IAAWzqC,EACnCuhB,EAAGu1C,oBAAoB92D,GAEzBkhC,EAASt4B,OAAO8hC,EAASD,EAAUC,GAErCnpB,EAAG0zC,gBAAkB/zB,EAAS/+B,MAAM,GAAGqpC,KAAKgoB,GAAc,QAAS,UAErEntD,8BACE,MAAMkb,EAAKtjB,MACJ42D,UAAW3zB,EAAU7jC,MAAM4lB,SAACA,IAAa1B,EAC5C2f,EAASjhC,OAASgjB,EAAShjB,eACtBshB,EAAGkhB,QAEZvB,EAAS9mC,SAAQ,CAACsnC,EAAM/4B,KACmC,IAArDsa,EAAShiB,QAAOrH,GAAKA,IAAM8nC,EAAK6S,WAAUt0C,QAC5CshB,EAAGu1C,oBAAoBnuD,MAI7BtC,2BACE,MAAMkb,EAAKtjB,KACL84D,EAAiB,GACjB9zC,EAAW1B,EAAGlkB,KAAK4lB,SACzB,IAAIjjB,EAAGmL,EAEP,IADAoW,EAAGy1C,8BACEh3D,EAAI,EAAGmL,EAAO8X,EAAShjB,OAAQD,EAAImL,EAAMnL,IAAK,CACjD,MAAM6kC,EAAU5hB,EAASjjB,GACzB,IAAI0hC,EAAOngB,EAAGukB,eAAe9lC,GAC7B,MAAMkC,EAAO2iC,EAAQ3iC,MAAQqf,EAAGpc,OAAOjD,KAWvC,GAVIw/B,EAAKx/B,MAAQw/B,EAAKx/B,OAASA,IAC7Bqf,EAAGu1C,oBAAoB92D,GACvB0hC,EAAOngB,EAAGukB,eAAe9lC,IAE3B0hC,EAAKx/B,KAAOA,EACZw/B,EAAK3d,UAAY8gB,EAAQ9gB,WAAaitC,GAAa9uD,EAAMqf,EAAG5jB,SAC5D+jC,EAAKu1B,MAAQpyB,EAAQoyB,OAAS,EAC9Bv1B,EAAK/4B,MAAQ3I,EACb0hC,EAAKgH,MAAQ,GAAK7D,EAAQ6D,MAC1BhH,EAAK9B,QAAUre,EAAG4vB,iBAAiBnxC,GAC/B0hC,EAAKY,WACPZ,EAAKY,WAAW40B,YAAYl3D,GAC5B0hC,EAAKY,WAAWoC,iBACX,CACL,MAAMyyB,EAAkBjI,GAASkI,cAAcl1D,IACzCqkC,mBAACA,EAAkBmD,gBAAEA,GAAmB9mB,GAASK,SAAS/gB,GAChElI,OAAO2mB,OAAOw2C,EAAgB5tD,UAAW,CACvCmgC,gBAAiBwlB,GAASmI,WAAW3tB,GACrCnD,mBAAoBA,GAAsB2oB,GAASmI,WAAW9wB,KAEhE7E,EAAKY,WAAa,IAAI60B,EAAgB51C,EAAIvhB,GAC1C+2D,EAAeh1D,KAAK2/B,EAAKY,aAI7B,OADA/gB,EAAG+1C,kBACIP,EAET1wD,iBACE,MAAMkb,EAAKtjB,KACX2M,GAAK2W,EAAGlkB,KAAK4lB,UAAU,CAAC4hB,EAASv5B,KAC/BiW,EAAGukB,eAAex6B,GAAcg3B,WAAWoL,UAC1CnsB,GAELlb,QACEpI,KAAKs5D,iBACLt5D,KAAKqqD,cAAc,SAErBjiD,OAAO4d,GACL,MAAM1C,EAAKtjB,KACLkH,EAASoc,EAAGpc,OAClBA,EAAOnC,SACPue,EAAGozC,SAAWxvD,EAAO4hC,eAAe5hC,EAAOovD,oBAAqBhzC,EAAGwF,cACnEnc,GAAK2W,EAAGmD,QAASD,IACfu1B,GAAQwd,UAAUj2C,EAAIkD,MAExB,MAAMgzC,EAAgBl2C,EAAG4oB,qBAAuB5oB,EAAG5jB,QAAQiD,UAC3D2gB,EAAGm2C,sBACHn2C,EAAGo2C,sBAQH,GDvxKc,EAACn9D,EAAGC,KACpB,GAAID,EAAEiB,OAAShB,EAAEgB,KACf,OAAO,EAET,IAAK,MAAMi1B,KAAQl2B,EACjB,IAAKC,EAAE0I,IAAIutB,GACT,OAAO,EAGX,OAAO,GCywKAknC,CAFkB,IAAIz8D,IAAInB,OAAOgP,KAAKuY,EAAGwzC,aAC5B,IAAI55D,IAAIomB,EAAG5jB,QAAQ4lB,YACUtlB,KAAK+2D,uBAAyBzzC,EAAG5jB,QAAQ6mB,aACtFjD,EAAGs2C,eACHt2C,EAAGs0C,cAELt0C,EAAG2zC,SAAS4C,cACuD,IAA/Dv2C,EAAG+mC,cAAc,eAAgB,CAACrkC,KAAAA,EAAMosC,YAAY,IACtD,OAEF,MAAM0G,EAAiBx1C,EAAGw2C,2BAC1Bx2C,EAAG+mC,cAAc,wBACjB,IAAIhM,EAAa,EACjB,IAAK,IAAIt8C,EAAI,EAAGmL,EAAOoW,EAAGlkB,KAAK4lB,SAAShjB,OAAQD,EAAImL,EAAMnL,IAAK,CAC7D,MAAMsiC,WAACA,GAAc/gB,EAAGukB,eAAe9lC,GACjC0tC,GAAS+pB,IAAyD,IAAxCV,EAAe51D,QAAQmhC,GACvDA,EAAW01B,sBAAsBtqB,GACjC4O,EAAa52C,KAAKiJ,KAAK2zB,EAAW0G,iBAAkBsT,GAEtD/6B,EAAGi3B,YAAc8D,EACjB/6B,EAAG02C,cAAc3b,GACZmb,GACH7sD,GAAKmsD,GAAiBz0B,IACpBA,EAAWoL,WAGfnsB,EAAG22C,gBAAgBj0C,GACnB1C,EAAG+mC,cAAc,cAAe,CAACrkC,KAAAA,IACjC1C,EAAG46B,QAAQ3Q,KAAKgoB,GAAc,IAAK,SAC/BjyC,EAAGuzC,YACLvzC,EAAG42C,cAAc52C,EAAGuzC,YAAY,GAElCvzC,EAAG40C,SAEL9vD,cAAci2C,GACZ,MAAM/6B,EAAKtjB,KACX,IAA6D,IAAzDsjB,EAAG+mC,cAAc,eAAgB,CAAC+H,YAAY,IAChD,OAEFrW,GAAQh3C,OAAOue,EAAIA,EAAGwE,MAAOxE,EAAG2F,OAAQo1B,GACxC,MAAM9zB,EAAOjH,EAAG0nB,UACVmvB,EAAS5vC,EAAKzC,OAAS,GAAKyC,EAAKtB,QAAU,EACjD3F,EAAG46B,QAAU,GACbvxC,GAAK2W,EAAGq6B,OAAQ9lB,IACVsiC,GAA2B,cAAjBtiC,EAAIsiB,WAGdtiB,EAAImK,WACNnK,EAAImK,YAEN1e,EAAG46B,QAAQp6C,QAAQ+zB,EAAIqmB,cACtB56B,GACHA,EAAG46B,QAAQ/hD,SAAQ,CAACs2B,EAAM/nB,KACxB+nB,EAAK2nC,KAAO1vD,KAEd4Y,EAAG+mC,cAAc,eAEnBjiD,gBAAgB4d,GACd,MAAM1C,EAAKtjB,KACL4O,EAA6B,mBAAToX,EAC1B,IAA2E,IAAvE1C,EAAG+mC,cAAc,uBAAwB,CAACrkC,KAAAA,EAAMosC,YAAY,IAAhE,CAGA,IAAK,IAAIrwD,EAAI,EAAGmL,EAAOoW,EAAGlkB,KAAK4lB,SAAShjB,OAAQD,EAAImL,IAAQnL,EAC1DuhB,EAAG+2C,eAAet4D,EAAG6M,EAAaoX,EAAK,CAAC3Y,aAActL,IAAMikB,GAE9D1C,EAAG+mC,cAAc,sBAAuB,CAACrkC,KAAAA,KAE3C5d,eAAesC,EAAOsb,GACpB,MAAM1C,EAAKtjB,KACLyjC,EAAOngB,EAAGukB,eAAen9B,GACzBW,EAAO,CAACo4B,KAAAA,EAAM/4B,MAAAA,EAAOsb,KAAAA,EAAMosC,YAAY,IACS,IAAlD9uC,EAAG+mC,cAAc,sBAAuBh/C,KAG5Co4B,EAAKY,WAAW5F,QAAQzY,GACxB3a,EAAK+mD,YAAa,EAClB9uC,EAAG+mC,cAAc,qBAAsBh/C,IAEzCjD,SACE,MAAMkb,EAAKtjB,MACkD,IAAzDsjB,EAAG+mC,cAAc,eAAgB,CAAC+H,YAAY,MAG9Cr0B,GAAS74B,IAAIoe,GACXA,EAAG6zC,WAAap5B,GAASa,QAAQtb,IACnCya,GAASp2B,MAAM2b,IAGjBA,EAAGub,OACH62B,GAAqB,CAACxwC,MAAO5B,MAGjClb,OACE,MAAMkb,EAAKtjB,KACX,IAAI+B,EACJ,GAAIuhB,EAAGu0C,kBAAmB,CACxB,MAAM/vC,MAACA,EAAKmB,OAAEA,GAAU3F,EAAGu0C,kBAC3Bv0C,EAAGw0C,QAAQhwC,EAAOmB,GAClB3F,EAAGu0C,kBAAoB,KAGzB,GADAv0C,EAAGhgB,QACCggB,EAAGwE,OAAS,GAAKxE,EAAG2F,QAAU,EAChC,OAEF,IAA2D,IAAvD3F,EAAG+mC,cAAc,aAAc,CAAC+H,YAAY,IAC9C,OAEF,MAAMkI,EAASh3C,EAAG46B,QAClB,IAAKn8C,EAAI,EAAGA,EAAIu4D,EAAOt4D,QAAUs4D,EAAOv4D,GAAGo8C,GAAK,IAAKp8C,EACnDu4D,EAAOv4D,GAAG88B,KAAKvb,EAAG0nB,WAGpB,IADA1nB,EAAGi3C,gBACIx4D,EAAIu4D,EAAOt4D,SAAUD,EAC1Bu4D,EAAOv4D,GAAG88B,KAAKvb,EAAG0nB,WAEpB1nB,EAAG+mC,cAAc,aAEnBjiD,uBAAuB46B,GACrB,MACMC,EADKjjC,KACSg3D,gBACd1/B,EAAS,GACf,IAAIv1B,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO+1B,EAASjhC,OAAQD,EAAImL,IAAQnL,EAAG,CACjD,MAAM0hC,EAAOR,EAASlhC,GACjBihC,IAAiBS,EAAK9B,SACzBrK,EAAOxzB,KAAK2/B,GAGhB,OAAOnM,EAETlvB,+BACE,OAAOpI,KAAKkjC,wBAAuB,GAErC96B,gBACE,MAAMkb,EAAKtjB,KACX,IAAmE,IAA/DsjB,EAAG+mC,cAAc,qBAAsB,CAAC+H,YAAY,IACtD,OAEF,MAAMnvB,EAAW3f,EAAG82B,+BACpB,IAAK,IAAIr4C,EAAIkhC,EAASjhC,OAAS,EAAGD,GAAK,IAAKA,EAC1CuhB,EAAGk3C,aAAav3B,EAASlhC,IAE3BuhB,EAAG+mC,cAAc,qBAEnBjiD,aAAaq7B,GACX,MAAMngB,EAAKtjB,KACLsF,EAAMge,EAAGhe,IACTwlB,EAAO2Y,EAAKkH,MACZ8vB,GAAW3vC,EAAK8f,SAChBrgB,EAAOjH,EAAG0nB,UACV3/B,EAAO,CACXo4B,KAAAA,EACA/4B,MAAO+4B,EAAK/4B,MACZ0nD,YAAY,IAEsC,IAAhD9uC,EAAG+mC,cAAc,oBAAqBh/C,KAGtCovD,GACF5vC,GAASvlB,EAAK,CACZmlB,MAAoB,IAAdK,EAAKL,KAAiB,EAAIF,EAAKE,KAAOK,EAAKL,KACjDC,OAAsB,IAAfI,EAAKJ,MAAkBpH,EAAGwE,MAAQyC,EAAKG,MAAQI,EAAKJ,MAC3DC,KAAkB,IAAbG,EAAKH,IAAgB,EAAIJ,EAAKI,IAAMG,EAAKH,IAC9CC,QAAwB,IAAhBE,EAAKF,OAAmBtH,EAAG2F,OAASsB,EAAKK,OAASE,EAAKF,SAGnE6Y,EAAKY,WAAWxF,OACZ47B,GACF1vC,GAAWzlB,GAEb+F,EAAK+mD,YAAa,EAClB9uC,EAAG+mC,cAAc,mBAAoBh/C,IAEvCjD,0BAA0BrC,EAAGigB,EAAMtmB,EAAS46C,GAC1C,MAAMnZ,EAASoa,GAAYC,MAAMx1B,GACjC,MAAsB,mBAAXmb,EACFA,EAAOnhC,KAAM+F,EAAGrG,EAAS46C,GAE3B,GAETlyC,eAAeiF,GACb,MACMu5B,EADK5mC,KACQZ,KAAK4lB,SAAS3X,GAC3B41B,EAFKjjC,KAES42D,UACpB,IAAInzB,EAAOR,EAASjgC,QAAOrH,GAAKA,GAAKA,EAAE26C,WAAa1P,IAAS5hC,MAkB7D,OAjBKy+B,IACHA,EAAO,CACLx/B,KAAM,KACN7E,KAAM,GACNwnC,QAAS,KACTvC,WAAY,KACZ4G,OAAQ,KACRjE,QAAS,KACTE,QAAS,KACT8xB,MAAOpyB,GAAWA,EAAQoyB,OAAS,EACnCtuD,MAAO2C,EACPipC,SAAU1P,EACVvB,QAAS,GACT2D,SAAS,GAEX/F,EAASn/B,KAAK2/B,IAETA,EAETr7B,aACE,OAAOpI,KAAKsmC,WAAatmC,KAAKsmC,SAAW,CAACphB,MAAOllB,KAAMiE,KAAM,UAE/DmE,yBACE,OAAOpI,KAAKo6C,+BAA+Bp4C,OAE7CoG,iBAAiBiF,GACf,MAAMu5B,EAAU5mC,KAAKZ,KAAK4lB,SAAS3X,GACnC,IAAKu5B,EACH,OAAO,EAET,MAAMnD,EAAOzjC,KAAK6nC,eAAex6B,GACjC,MAA8B,kBAAhBo2B,EAAKwH,QAAwBxH,EAAKwH,QAAUrE,EAAQqE,OAEpE7iC,qBAAqBiF,EAAcs0B,GACpB3hC,KAAK6nC,eAAex6B,GAC5B49B,QAAUtJ,EAEjBv5B,qBAAqBsC,GACnB1K,KAAKk3D,eAAexsD,IAAU1K,KAAKk3D,eAAexsD,GAEpDtC,kBAAkBsC,GAChB,OAAQ1K,KAAKk3D,eAAexsD,GAE9BtC,kBAAkBiF,EAAc+9B,EAAWzJ,GACzC,MAAMre,EAAKtjB,KACLgmB,EAAO2b,EAAU,OAAS,OAC1B8B,EAAOngB,EAAGukB,eAAex6B,GACzB+wB,EAAQqF,EAAKY,WAAW8H,wBAAmBtnB,EAAWmB,GACxDrX,GAAQy8B,IACV3H,EAAKrkC,KAAKgsC,GAAWH,QAAUtJ,EAC/Bre,EAAGve,WAEHue,EAAGo3C,qBAAqBrtD,EAAcs0B,GACtCvD,EAAMr5B,OAAO0+B,EAAM,CAAC9B,QAAAA,IACpBre,EAAGve,QAAQO,GAAQA,EAAI+H,eAAiBA,EAAe2Y,OAAOnB,KAGlEzc,KAAKiF,EAAc+9B,GACjBprC,KAAK26D,kBAAkBttD,EAAc+9B,GAAW,GAElDhjC,KAAKiF,EAAc+9B,GACjBprC,KAAK26D,kBAAkBttD,EAAc+9B,GAAW,GAElDhjC,oBAAoBiF,GAClB,MAAMiW,EAAKtjB,KACLyjC,EAAOngB,EAAGszC,WAAatzC,EAAGszC,UAAUvpD,GACtCo2B,GAAQA,EAAKY,aACfZ,EAAKY,WAAWu2B,kBACTt3C,EAAGszC,UAAUvpD,IAGxBjF,UACE,MAAMkb,EAAKtjB,MACL6oB,OAACA,EAAMvjB,IAAEA,GAAOge,EACtB,IAAIvhB,EAAGmL,EAGP,IAFAoW,EAAGk0B,OACHzZ,GAAS88B,OAAOv3C,GACXvhB,EAAI,EAAGmL,EAAOoW,EAAGlkB,KAAK4lB,SAAShjB,OAAQD,EAAImL,IAAQnL,EACtDuhB,EAAGu1C,oBAAoB92D,GAEzBuhB,EAAGpc,OAAOwtD,aACN7rC,IACFvF,EAAGs2C,eACHhxC,GAAYC,EAAQvjB,GACpBge,EAAG6B,SAAS21C,eAAex1D,GAC3Bge,EAAGuF,OAAS,KACZvF,EAAGhe,IAAM,MAEXge,EAAG+mC,cAAc,kBACV2L,GAAU1yC,EAAG3X,IAEtBvD,iBAAiBiD,GACf,OAAOrL,KAAK6oB,OAAOkyC,aAAa1vD,GAElCjD,aACEpI,KAAKg7D,iBACDh7D,KAAKN,QAAQ6mB,WACfvmB,KAAKi7D,uBAELj7D,KAAKm3D,UAAW,EAGpB/uD,iBACE,MAAMkb,EAAKtjB,KACL0vB,EAAYpM,EAAGwzC,WACf3xC,EAAW7B,EAAG6B,SAKdoK,EAAW,SAASxpB,EAAGpK,EAAGyU,GAC9BrK,EAAEiyB,QAAUr8B,EACZoK,EAAEkyB,QAAU7nB,EACZkT,EAAG42C,cAAcn0D,IAEnB4G,GAAK2W,EAAG5jB,QAAQ4lB,QAASrhB,GATZ,EAACA,EAAMsrB,KAClBpK,EAASxlB,iBAAiB2jB,EAAIrf,EAAMsrB,GACpCG,EAAUzrB,GAAQsrB,GAOc2rC,CAAKj3D,EAAMsrB,KAE/CnnB,uBACE,MAAMkb,EAAKtjB,KACNsjB,EAAGyzC,uBACNzzC,EAAGyzC,qBAAuB,IAE5B,MAAMrnC,EAAYpM,EAAGyzC,qBACf5xC,EAAW7B,EAAG6B,SACd+1C,EAAO,CAACj3D,EAAMsrB,KAClBpK,EAASxlB,iBAAiB2jB,EAAIrf,EAAMsrB,GACpCG,EAAUzrB,GAAQsrB,GAEd4rC,EAAU,CAACl3D,EAAMsrB,KACjBG,EAAUzrB,KACZkhB,EAASvlB,oBAAoB0jB,EAAIrf,EAAMsrB,UAChCG,EAAUzrB,KAGfsrB,EAAW,CAACzH,EAAOmB,KACnB3F,EAAGuF,QACLvF,EAAGke,OAAO1Z,EAAOmB,IAGrB,IAAImyC,EACJ,MAAMjE,EAAW,KACfgE,EAAQ,SAAUhE,GAClB7zC,EAAG6zC,UAAW,EACd7zC,EAAGke,SACH05B,EAAK,SAAU3rC,GACf2rC,EAAK,SAAUE,IAEjBA,EAAW,KACT93C,EAAG6zC,UAAW,EACdgE,EAAQ,SAAU5rC,GAClB2rC,EAAK,SAAU/D,IAEbhyC,EAASk2C,WAAW/3C,EAAGuF,QACzBsuC,IAEAiE,IAGJhzD,eACE,MAAMkb,EAAKtjB,KACX2M,GAAK2W,EAAGwzC,YAAY,CAACvnC,EAAUtrB,KAC7Bqf,EAAG6B,SAASvlB,oBAAoB0jB,EAAIrf,EAAMsrB,MAE5CjM,EAAGwzC,WAAa,GAChBnqD,GAAK2W,EAAGyzC,sBAAsB,CAACxnC,EAAUtrB,KACvCqf,EAAG6B,SAASvlB,oBAAoB0jB,EAAIrf,EAAMsrB,MAE5CjM,EAAGyzC,0BAAuBlyC,EAE5Bzc,iBAAiBwnB,EAAO5J,EAAMk+B,GAC5B,MAAMlzB,EAASkzB,EAAU,MAAQ,SACjC,IAAIzgB,EAAMhR,EAAM1wB,EAAGmL,EAKnB,IAJa,YAAT8Y,IACFyd,EAAOzjC,KAAK6nC,eAAejY,EAAM,GAAGviB,cACpCo2B,EAAKY,WAAW,IAAMrT,EAAS,wBAE5BjvB,EAAI,EAAGmL,EAAO0iB,EAAM5tB,OAAQD,EAAImL,IAAQnL,EAAG,CAC9C0wB,EAAO7C,EAAM7tB,GACb,MAAMsiC,EAAa5R,GAAQzyB,KAAK6nC,eAAepV,EAAKplB,cAAcg3B,WAC9DA,GACFA,EAAWrT,EAAS,cAAcyB,EAAKp0B,QAASo0B,EAAKplB,aAAcolB,EAAK/nB,QAI9EtC,oBACE,OAAOpI,KAAK8+B,SAAW,GAEzB12B,kBAAkBkzD,GAChB,MAAMh4C,EAAKtjB,KACLu7D,EAAaj4C,EAAGwb,SAAW,GAC3B59B,EAASo6D,EAAexyD,KAAI,EAAEuE,aAAAA,EAAc3C,MAAAA,MAChD,MAAM+4B,EAAOngB,EAAGukB,eAAex6B,GAC/B,IAAKo2B,EACH,MAAM,IAAI//B,MAAM,6BAA+B2J,GAEjD,MAAO,CACLA,aAAAA,EACAhP,QAASolC,EAAKrkC,KAAKsL,GACnBA,MAAAA,OAGaqC,GAAe7L,EAAQq6D,KAEtCj4C,EAAGwb,QAAU59B,EACboiB,EAAGk4C,mBAAmBt6D,EAAQq6D,IAGlCnzD,cAAc4pD,EAAM3mD,EAAMrI,GACxB,OAAOhD,KAAKi3D,SAASwE,OAAOz7D,KAAMgyD,EAAM3mD,EAAMrI,GAEhDoF,mBAAmBlH,EAAQq6D,EAAYG,GACrC,MAAMp4C,EAAKtjB,KACL27D,EAAer4C,EAAG5jB,QAAQgmB,MAC1Bg/B,EAAO,CAACnoD,EAAGC,IAAMD,EAAEyG,QAAOrH,IAAMa,EAAEq2D,MAAKziD,GAAKzU,EAAE0R,eAAiB+C,EAAE/C,cAAgB1R,EAAE+O,QAAU0F,EAAE1F,UAC/FkxD,EAAclX,EAAK6W,EAAYr6D,GAC/B26D,EAAYH,EAASx6D,EAASwjD,EAAKxjD,EAAQq6D,GAC7CK,EAAY55D,QACdshB,EAAGw4C,iBAAiBF,EAAaD,EAAa31C,MAAM,GAElD61C,EAAU75D,QAAU25D,EAAa31C,MACnC1C,EAAGw4C,iBAAiBD,EAAWF,EAAa31C,MAAM,GAGtD5d,cAAcrC,EAAG21D,GACf,MAAMp4C,EAAKtjB,KACLqL,EAAO,CAAC7L,MAAOuG,EAAG21D,OAAAA,EAAQtJ,YAAY,GACtC2J,EAAe5J,IAAYA,EAAOzyD,QAAQ4lB,QAAUtlB,KAAKN,QAAQ4lB,QAAQmM,SAAS1rB,EAAE9B,MAC1F,IAA2D,IAAvDqf,EAAG+mC,cAAc,cAAeh/C,EAAM0wD,GACxC,OAEF,MAAM/kB,EAAU1zB,EAAG04C,aAAaj2D,EAAG21D,GAMnC,OALArwD,EAAK+mD,YAAa,EAClB9uC,EAAG+mC,cAAc,aAAch/C,EAAM0wD,IACjC/kB,GAAW3rC,EAAK2rC,UAClB1zB,EAAG40C,SAEE50C,EAETlb,aAAarC,EAAG21D,GACd,MAAMp4C,EAAKtjB,MACJ8+B,QAASy8B,EAAa,GAAE77D,QAAEA,GAAW4jB,EACtCq4C,EAAej8D,EAAQgmB,MACvB40B,EAAmBohB,EACzB,IAAIx6D,EAAS,GACT81C,GAAU,EACVilB,EAAY,KAkBhB,MAjBe,aAAXl2D,EAAE9B,OACJ/C,EAASoiB,EAAG44C,0BAA0Bn2D,EAAG41D,EAAa31C,KAAM21C,EAAcrhB,GAC1E2hB,EAAuB,UAAXl2D,EAAE9B,KAAmBqf,EAAGuzC,WAAa9wD,GAEnDud,EAAGuzC,WAAa,KACZxsC,GAAetkB,EAAGud,EAAG0nB,UAAW1nB,EAAGi3B,eACrCt1C,GAASvF,EAAQymB,QAAS,CAACpgB,EAAG7E,EAAQoiB,GAAKA,GAC5B,YAAXvd,EAAE9B,MAAiC,UAAX8B,EAAE9B,MAA+B,gBAAX8B,EAAE9B,MAClDgB,GAASvF,EAAQ0mB,QAAS,CAACrgB,EAAG7E,EAAQoiB,GAAKA,IAG/C0zB,GAAWjqC,GAAe7L,EAAQq6D,IAC9BvkB,GAAW0kB,KACbp4C,EAAGwb,QAAU59B,EACboiB,EAAGk4C,mBAAmBt6D,EAAQq6D,EAAYG,IAE5Cp4C,EAAGuzC,WAAaoF,EACTjlB,GAGX,MAAMmlB,GAAoB,IAAMxvD,GAAKupD,GAAMF,WAAY9wC,GAAUA,EAAM+xC,SAAS4C,eAC1E1yC,IAAa,EA0CnB,SAASi1C,GAAQ92D,EAAKjH,EAAS41C,GAC7B,MAAMD,WAACA,EAAUqoB,YAAEA,EAAW1gE,EAAEA,EAACyU,EAAEA,EAAC4iC,YAAEA,EAAWD,YAAEA,GAAe10C,EAClE,IAAIi+D,EAAcD,EAAcrpB,EAChC1tC,EAAIskB,YACJtkB,EAAIukB,IAAIluB,EAAGyU,EAAG4iC,EAAagB,EAAasoB,EAAaroB,EAAWqoB,GAC5DvpB,EAAcspB,GAChBC,EAAcD,EAActpB,EAC5BztC,EAAIukB,IAAIluB,EAAGyU,EAAG2iC,EAAakB,EAAWqoB,EAAatoB,EAAasoB,GAAa,IAE7Eh3D,EAAIukB,IAAIluB,EAAGyU,EAAGisD,EAAapoB,EAAW9kC,GAAS6kC,EAAa7kC,IAE9D7J,EAAIwkB,YACJxkB,EAAIwlB,OAKN,SAASyxC,GAAoB1yC,EAAKkpB,EAAaC,EAAawpB,GAC1D,MAAM51D,EAHCknB,GAGmBjE,EAAInqB,QAAQ+8D,aAHN,CAAC,aAAc,WAAY,aAAc,aAIzE,MAAMC,GAAiB1pB,EAAcD,GAAe,EAC9C4pB,EAAal1D,KAAKgJ,IAAIisD,EAAeF,EAAazpB,EAAc,GAChE6pB,EAAqBj5C,IACzB,MAAMk5C,GAAiB7pB,EAAcvrC,KAAKgJ,IAAIisD,EAAe/4C,IAAQ64C,EAAa,EAClF,OAAO1qD,GAAY6R,EAAK,EAAGlc,KAAKgJ,IAAIisD,EAAeG,KAErD,MAAO,CACLC,WAAYF,EAAkBh2D,EAAEk2D,YAChCC,SAAUH,EAAkBh2D,EAAEm2D,UAC9BC,WAAYlrD,GAAYlL,EAAEo2D,WAAY,EAAGL,GACzCM,SAAUnrD,GAAYlL,EAAEq2D,SAAU,EAAGN,IAGzC,SAASO,GAAW52D,EAAG62D,EAAOxhE,EAAGyU,GAC/B,MAAO,CACLzU,EAAGA,EAAI2K,EAAImB,KAAKyL,IAAIiqD,GACpB/sD,EAAGA,EAAI9J,EAAImB,KAAKwK,IAAIkrD,IAGxB,SAASC,GAAQ93D,EAAKjH,EAASi0C,EAAQgB,EAAS1rC,GAC9C,MAAMjM,EAACA,EAACyU,EAAEA,EAAG4jC,WAAYrsC,EAAK00D,YAAEA,EAAatpB,YAAasqB,GAAUh/D,EAC9D20C,EAAcvrC,KAAKiJ,IAAIrS,EAAQ20C,YAAcM,EAAUhB,EAAS+pB,EAAa,GAC7EtpB,EAAcsqB,EAAS,EAAIA,EAAS/pB,EAAUhB,EAAS+pB,EAAc,EAC3E,IAAIiB,EAAgB,EACpB,MAAMC,EAAQ31D,EAAMD,EACpB,GAAI2rC,EAAS,CACX,MAEMkqB,IAFuBH,EAAS,EAAIA,EAAS/pB,EAAU,IAChCN,EAAc,EAAIA,EAAcM,EAAU,IACI,EAE3EgqB,GAAiBC,GAD4B,IAAvBC,EAA4BD,EAAQC,GAAuBA,EAAqBlqB,GAAWiqB,IACvE,EAE5C,MACME,GAAeF,EADR91D,KAAKiJ,IAAI,KAAO6sD,EAAQvqB,EAAcV,EAASzjC,IAAMmkC,GAC7B,EAC/BgB,EAAarsC,EAAQ81D,EAAcH,EACnCrpB,EAAWrsC,EAAM61D,EAAcH,GAC/BR,WAACA,EAAUC,SAAEA,EAAQC,WAAEA,EAAUC,SAAEA,GAAYV,GAAoBl+D,EAAS00C,EAAaC,EAAaiB,EAAWD,GACjH0pB,EAA2B1qB,EAAc8pB,EACzCa,EAAyB3qB,EAAc+pB,EACvCa,EAA0B5pB,EAAa8oB,EAAaY,EACpDG,EAAwB5pB,EAAW8oB,EAAWY,EAC9CG,EAA2B/qB,EAAciqB,EACzCe,EAAyBhrB,EAAckqB,EACvCe,EAA0BhqB,EAAagpB,EAAac,EACpDG,EAAwBhqB,EAAWgpB,EAAWc,EAGpD,GAFAz4D,EAAIskB,YACJtkB,EAAIukB,IAAIluB,EAAGyU,EAAG4iC,EAAa4qB,EAAyBC,GAChDd,EAAW,EAAG,CAChB,MAAMmB,EAAUhB,GAAWS,EAAwBE,EAAuBliE,EAAGyU,GAC7E9K,EAAIukB,IAAIq0C,EAAQviE,EAAGuiE,EAAQ9tD,EAAG2sD,EAAUc,EAAuB5pB,EAAW9kC,IAE5E,MAAMgvD,EAAKjB,GAAWa,EAAwB9pB,EAAUt4C,EAAGyU,GAE3D,GADA9K,EAAI0kB,OAAOm0C,EAAGxiE,EAAGwiE,EAAG/tD,GAChB6sD,EAAW,EAAG,CAChB,MAAMiB,EAAUhB,GAAWa,EAAwBE,EAAuBtiE,EAAGyU,GAC7E9K,EAAIukB,IAAIq0C,EAAQviE,EAAGuiE,EAAQ9tD,EAAG6sD,EAAUhpB,EAAW9kC,GAAS8uD,EAAwBx2D,KAAKoH,IAG3F,GADAvJ,EAAIukB,IAAIluB,EAAGyU,EAAG2iC,EAAakB,EAAYgpB,EAAWlqB,EAAciB,EAAcgpB,EAAajqB,GAAc,GACrGiqB,EAAa,EAAG,CAClB,MAAMkB,EAAUhB,GAAWY,EAA0BE,EAAyBriE,EAAGyU,GACjF9K,EAAIukB,IAAIq0C,EAAQviE,EAAGuiE,EAAQ9tD,EAAG4sD,EAAYgB,EAA0Bv2D,KAAKoH,GAAImlC,EAAa7kC,IAE5F,MAAMivD,EAAKlB,GAAWQ,EAA0B1pB,EAAYr4C,EAAGyU,GAE/D,GADA9K,EAAI0kB,OAAOo0C,EAAGziE,EAAGyiE,EAAGhuD,GAChB0sD,EAAa,EAAG,CAClB,MAAMoB,EAAUhB,GAAWQ,EAA0BE,EAAyBjiE,EAAGyU,GACjF9K,EAAIukB,IAAIq0C,EAAQviE,EAAGuiE,EAAQ9tD,EAAG0sD,EAAY9oB,EAAa7kC,GAASyuD,GAElEt4D,EAAIwkB,YAwCN,SAASq7B,GAAW7/C,EAAKjH,EAASi0C,EAAQgB,EAASW,GACjD,MAAMv0C,QAACA,GAAWrB,EACZggE,EAAgC,UAAxB3+D,EAAQi2C,YACjBj2C,EAAQyqB,cAGTk0C,GACF/4D,EAAI+mB,UAAkC,EAAtB3sB,EAAQyqB,YACxB7kB,EAAIg5D,SAAW,UAEfh5D,EAAI+mB,UAAY3sB,EAAQyqB,YACxB7kB,EAAIg5D,SAAW,SAEbjgE,EAAQkgE,aAhCd,SAA+Bj5D,EAAKjH,EAASggE,GAC3C,MAAM1iE,EAACA,EAACyU,EAAEA,EAAC4jC,WAAEA,EAAUqoB,YAAEA,EAAWkC,YAAEA,GAAelgE,EAC/C20C,EAAcvrC,KAAKiJ,IAAIrS,EAAQ20C,YAAcqpB,EAAa,GAC1DtpB,EAAc10C,EAAQ00C,YAAcspB,EAC1C,IAAIt6D,EAMJ,IALIs8D,GACFjC,GAAQ92D,EAAKjH,EAAS21C,EAAallC,IAErCxJ,EAAIskB,YACJtkB,EAAIukB,IAAIluB,EAAGyU,EAAG2iC,EAAaiB,EAAallC,GAAKklC,GAAY,GACpDjyC,EAAI,EAAGA,EAAIw8D,IAAex8D,EAC7BuD,EAAI8kB,SAIN,IAFA9kB,EAAIskB,YACJtkB,EAAIukB,IAAIluB,EAAGyU,EAAG4iC,EAAagB,EAAYA,EAAallC,IAC/C/M,EAAI,EAAGA,EAAIw8D,IAAex8D,EAC7BuD,EAAI8kB,SAiBJo0C,CAAsBl5D,EAAKjH,EAASggE,GAElCA,GACFjC,GAAQ92D,EAAKjH,EAAS41C,GAExBmpB,GAAQ93D,EAAKjH,EAASi0C,EAAQgB,EAASW,GACvC3uC,EAAI8kB,UA5LNruB,OAAOkrB,iBAAiBivC,GAAO,CAC7BvxC,SAAU,CACRwC,WAAAA,GACAhnB,MAAOwkB,IAETqxC,UAAW,CACT7uC,WAAAA,GACAhnB,MAAO61D,IAET3xC,UAAW,CACT8C,WAAAA,GACAhnB,MAAOkkB,IAET4sC,SAAU,CACR9pC,WAAAA,GACAhnB,MAAO8wD,IAETwN,QAAS,CACPt3C,WAAAA,GACAhnB,MArxBU,SAuxBZ81D,SAAU,CACR9uC,WAAAA,GACAhnB,MAAO81D,IAETzF,SAAU,CACRrpC,WAAAA,GACAhnB,MAAO,IAAIyvB,KACTqhC,GAAS9uD,OAAOytB,GAChBusC,OAGJuC,WAAY,CACVv3C,WAAAA,GACAhnB,MAAO,IAAIyvB,KACTqhC,GAAS4J,UAAUjrC,GACnBusC,SA0JN,MAAMwC,WAAmBpc,GACvBn6C,YAAY83B,GACVqP,QACAvvC,KAAKN,aAAUmlB,EACf7kB,KAAKizC,mBAAgBpuB,EACrB7kB,KAAKg0C,gBAAanvB,EAClB7kB,KAAKi0C,cAAWpvB,EAChB7kB,KAAK+yC,iBAAcluB,EACnB7kB,KAAKgzC,iBAAcnuB,EACnB7kB,KAAKq8D,YAAc,EACnBr8D,KAAKu+D,YAAc,EACfr+B,GACFnkC,OAAO2mB,OAAO1iB,KAAMkgC,GAGxB93B,QAAQw2D,EAAQC,EAAQvkB,GACtB,MAAMhwB,EAAQtqB,KAAKwiD,SAAS,CAAC,IAAK,KAAMlI,IAClC/oC,MAACA,EAAK2pC,SAAEA,GDj1LlB,SAA2B4jB,EAAaC,GACtC,MAAMC,EAAsBD,EAAWpjE,EAAImjE,EAAYnjE,EACjDsjE,EAAsBF,EAAW3uD,EAAI0uD,EAAY1uD,EACjD8uD,EAA2Bz3D,KAAK0J,KAAK6tD,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAI1tD,EAAQ9J,KAAK03D,MAAMF,EAAqBD,GAI5C,OAHIztD,GAAU,GAAM1C,KAClB0C,GAASzC,IAEJ,CACLyC,MAAAA,EACA2pC,SAAUgkB,GCu0LgBE,CAAkB90C,EAAO,CAAC3uB,EAAGijE,EAAQxuD,EAAGyuD,KAC5D7qB,WAACA,EAAUC,SAAEA,EAAQlB,YAAEA,EAAWC,YAAEA,EAAWC,cAAEA,GAAiBjzC,KAAKwiD,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACClI,GACG+kB,EAAUr/D,KAAKN,QAAQ4zC,QAAU,EAGvC,OAFsBL,GAAiBnkC,IAAOwC,GAAcC,EAAOyiC,EAAYC,MACzDiH,GAAYnI,EAAcssB,GAAWnkB,GAAYlI,EAAcqsB,GAGvFj3D,eAAekyC,GACb,MAAM3+C,EAACA,EAACyU,EAAEA,EAAC4jC,WAAEA,EAAUC,SAAEA,EAAQlB,YAAEA,EAAWC,YAAEA,GAAehzC,KAAKwiD,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACClI,IACGhI,OAACA,EAAMgB,QAAEA,GAAWtzC,KAAKN,QACzB4/D,GAAatrB,EAAaC,GAAY,EACtCsrB,GAAcxsB,EAAcC,EAAcM,EAAUhB,GAAU,EACpE,MAAO,CACL32C,EAAGA,EAAI8L,KAAKyL,IAAIosD,GAAaC,EAC7BnvD,EAAGA,EAAI3I,KAAKwK,IAAIqtD,GAAaC,GAGjCn3D,gBAAgBkyC,GACd,OAAOt6C,KAAKi7C,eAAeX,GAE7BlyC,KAAK9C,GACH,MAAMge,EAAKtjB,MACLN,QAACA,EAAOuzC,cAAEA,GAAiB3vB,EAC3BgvB,GAAU5yC,EAAQ4yC,QAAU,GAAK,EACjCgB,GAAW5zC,EAAQ4zC,SAAW,GAAK,EAGzC,GAFAhwB,EAAG+4C,YAAuC,UAAxB38D,EAAQi2C,YAA2B,IAAO,EAC5DryB,EAAGi7C,YAActrB,EAAgBnkC,GAAMrH,KAAKsI,MAAMkjC,EAAgBnkC,IAAO,EACnD,IAAlBmkC,GAAuB3vB,EAAGyvB,YAAc,GAAKzvB,EAAG0vB,YAAc,EAChE,OAEF1tC,EAAI6iB,OACJ,IAAIq3C,EAAe,EACnB,GAAIltB,EAAQ,CACVktB,EAAeltB,EAAS,EACxB,MAAMgtB,GAAah8C,EAAG0wB,WAAa1wB,EAAG2wB,UAAY,EAClD3uC,EAAIokB,UAAUjiB,KAAKyL,IAAIosD,GAAaE,EAAc/3D,KAAKwK,IAAIqtD,GAAaE,GACpEl8C,EAAG2vB,eAAiBpkC,KACtB2wD,EAAeltB,GAGnBhtC,EAAI0mB,UAAYtsB,EAAQolB,gBACxBxf,EAAI8mB,YAAc1sB,EAAQqlB,YAC1B,MAAMkvB,EArIV,SAAiB3uC,EAAKjH,EAASi0C,EAAQgB,GACrC,MAAMirB,YAACA,EAAWvqB,WAAEA,EAAUf,cAAEA,GAAiB50C,EACjD,IAAI41C,EAAW51C,EAAQ41C,SACvB,GAAIsqB,EAAa,CACfnB,GAAQ93D,EAAKjH,EAASi0C,EAAQgB,EAASU,EAAallC,IACpD,IAAK,IAAI/M,EAAI,EAAGA,EAAIw8D,IAAex8D,EACjCuD,EAAI4D,OAEDiH,MAAM8iC,KACTgB,EAAWD,EAAaf,EAAgBnkC,GACpCmkC,EAAgBnkC,IAAQ,IAC1BmlC,GAAYnlC,KAMlB,OAFAsuD,GAAQ93D,EAAKjH,EAASi0C,EAAQgB,EAASW,GACvC3uC,EAAI4D,OACG+qC,EAoHYwrB,CAAQn6D,EAAKge,EAAIk8C,EAAclsB,GAChD6R,GAAW7/C,EAAKge,EAAIk8C,EAAclsB,EAASW,GAC3C3uC,EAAIgjB,WAiBR,SAASo3C,GAASp6D,EAAK5F,EAASpB,EAAQoB,GACtC4F,EAAIq6D,QAAUrzD,GAAehO,EAAMq/B,eAAgBj+B,EAAQi+B,gBAC3Dr4B,EAAI8pD,YAAY9iD,GAAehO,EAAMs/B,WAAYl+B,EAAQk+B,aACzDt4B,EAAI+pD,eAAiB/iD,GAAehO,EAAMu/B,iBAAkBn+B,EAAQm+B,kBACpEv4B,EAAIg5D,SAAWhyD,GAAehO,EAAMw/B,gBAAiBp+B,EAAQo+B,iBAC7Dx4B,EAAI+mB,UAAY/f,GAAehO,EAAM6rB,YAAazqB,EAAQyqB,aAC1D7kB,EAAI8mB,YAAc9f,GAAehO,EAAMymB,YAAarlB,EAAQqlB,aAE9D,SAASiF,GAAO1kB,EAAKzC,EAAUnF,GAC7B4H,EAAI0kB,OAAOtsB,EAAO/B,EAAG+B,EAAO0S,GAW9B,SAASwvD,GAAS9rC,EAAQuI,EAASr1B,EAAS,IAC1C,MAAMm1B,EAAQrI,EAAO9xB,QACd2F,MAAOk4D,EAAc,EAAGj4D,IAAKk4D,EAAY3jC,EAAQ,GAAKn1B,GACtDW,MAAOo4D,EAAcn4D,IAAKo4D,GAAc3jC,EACzC10B,EAAQF,KAAKiJ,IAAImvD,EAAaE,GAC9Bn4D,EAAMH,KAAKgJ,IAAIqvD,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACL7jC,MAAAA,EACAx0B,MAAAA,EACAQ,KAAMk0B,EAAQl0B,KACd+E,KAAMtF,EAAMD,IAAUs4D,EAAU9jC,EAAQv0B,EAAMD,EAAQC,EAAMD,GAGhE,SAASu4D,GAAY56D,EAAKwmB,EAAMuQ,EAASr1B,GACvC,MAAM8sB,OAACA,EAAMp0B,QAAEA,GAAWosB,GACpBqQ,MAACA,EAAKx0B,MAAEA,EAAKQ,KAAEA,EAAI+E,KAAEA,GAAQ0yD,GAAS9rC,EAAQuI,EAASr1B,GACvDm5D,EA1BR,SAAuBzgE,GACrB,OAAIA,EAAQ0gE,QACHp1C,GAELtrB,EAAQ22B,SAA8C,aAAnC32B,EAAQy2B,uBACtBhL,GAEFnB,GAmBYq2C,CAAc3gE,GACjC,IACIqC,EAAGuoB,EAAO8L,GADVwW,KAACA,GAAO,EAAI//B,QAAEA,GAAW7F,GAAU,GAEvC,IAAKjF,EAAI,EAAGA,GAAKmL,IAAQnL,EACvBuoB,EAAQwJ,GAAQnsB,GAASkF,EAAUK,EAAOnL,EAAIA,IAAMo6B,GAChD7R,EAAMyJ,OAEC6Y,GACTtnC,EAAIykB,OAAOO,EAAM3uB,EAAG2uB,EAAMla,GAC1Bw8B,GAAO,GAEPuzB,EAAW76D,EAAK8wB,EAAM9L,EAAOzd,EAASnN,EAAQ0gE,SAEhDhqC,EAAO9L,GAMT,OAJIniB,IACFmiB,EAAQwJ,GAAQnsB,GAASkF,EAAUK,EAAO,IAAMivB,GAChDgkC,EAAW76D,EAAK8wB,EAAM9L,EAAOzd,EAASnN,EAAQ0gE,YAEvCj4D,EAEX,SAASm4D,GAAgBh7D,EAAKwmB,EAAMuQ,EAASr1B,GAC3C,MAAM8sB,EAAShI,EAAKgI,QACdqI,MAACA,EAAKx0B,MAAEA,EAAKuF,KAAEA,GAAQ0yD,GAAS9rC,EAAQuI,EAASr1B,IACjD4lC,KAACA,GAAO,EAAI//B,QAAEA,GAAW7F,GAAU,GACzC,IAEIjF,EAAGuoB,EAAOi2C,EAAO5rB,EAAMF,EAAM+rB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAcj2D,IAAW/C,GAASkF,EAAUK,EAAOxC,EAAQA,IAAUyxB,EACrEykC,EAAQ,KACRjsB,IAASF,IACXnvC,EAAI0kB,OAAOy2C,EAAMhsB,GACjBnvC,EAAI0kB,OAAOy2C,EAAM9rB,GACjBrvC,EAAI0kB,OAAOy2C,EAAMD,KAOrB,IAJI5zB,IACFtiB,EAAQwJ,EAAO6sC,EAAW,IAC1Br7D,EAAIykB,OAAOO,EAAM3uB,EAAG2uB,EAAMla,IAEvBrO,EAAI,EAAGA,GAAKmL,IAAQnL,EAAG,CAE1B,GADAuoB,EAAQwJ,EAAO6sC,EAAW5+D,IACtBuoB,EAAMyJ,KACR,SAEF,MAAMp4B,EAAI2uB,EAAM3uB,EACVyU,EAAIka,EAAMla,EACVywD,EAAa,EAAJllE,EACXklE,IAAWN,GACTnwD,EAAIukC,EACNA,EAAOvkC,EACEA,EAAIqkC,IACbA,EAAOrkC,GAETqwD,GAAQC,EAASD,EAAO9kE,KAAO+kE,IAE/BE,IACAt7D,EAAI0kB,OAAOruB,EAAGyU,GACdmwD,EAAQM,EACRH,EAAS,EACT/rB,EAAOF,EAAOrkC,GAEhBowD,EAAQpwD,EAEVwwD,IAEF,SAASE,GAAkBh1C,GACzB,MAAMJ,EAAOI,EAAKpsB,QACZk+B,EAAalS,EAAKkS,YAAclS,EAAKkS,WAAW57B,OAEtD,QADqB8pB,EAAKorB,YAAeprB,EAAKyU,OAAU7U,EAAK2K,SAA2C,aAAhC3K,EAAKyK,wBAA0CzK,EAAK00C,SAAYxiC,GACnH0iC,GAAkBJ,GAzHzCvB,GAAWhzD,GAAK,MAChBgzD,GAAWh6C,SAAW,CACpBgxB,YAAa,SACb5wB,YAAa,OACb03C,aAAc,EACdtyC,YAAa,EACbmoB,OAAQ,EACRgB,QAAS,EACT/hC,WAAOsT,GAET85C,GAAWjc,cAAgB,CACzB59B,gBAAiB,mBAgJnB,MAAMi8C,GAA8B,mBAAXC,OACzB,SAASniC,GAAKv5B,EAAKwmB,EAAMnkB,EAAOw0B,GAC1B4kC,IAAsC,IAAzBj1C,EAAKkR,SAASh7B,OAzBjC,SAA6BsD,EAAKwmB,EAAMnkB,EAAOw0B,GAC7C,IAAI8kC,EAAOn1C,EAAKo1C,MACXD,IACHA,EAAOn1C,EAAKo1C,MAAQ,IAAIF,OACpBl1C,EAAKm1C,KAAKA,EAAMt5D,EAAOw0B,IACzB8kC,EAAKn3C,aAGT41C,GAASp6D,EAAKwmB,EAAKpsB,SACnB4F,EAAI8kB,OAAO62C,GAiBTE,CAAoB77D,EAAKwmB,EAAMnkB,EAAOw0B,GAf1C,SAA0B72B,EAAKwmB,EAAMnkB,EAAOw0B,GAC1C,MAAMa,SAACA,EAAQt9B,QAAEA,GAAWosB,EACtBs1C,EAAgBN,GAAkBh1C,GACxC,IAAK,MAAMuQ,KAAWW,EACpB0iC,GAASp6D,EAAK5F,EAAS28B,EAAQ/9B,OAC/BgH,EAAIskB,YACAw3C,EAAc97D,EAAKwmB,EAAMuQ,EAAS,CAAC10B,MAAAA,EAAOC,IAAKD,EAAQw0B,EAAQ,KACjE72B,EAAIwkB,YAENxkB,EAAI8kB,SAQJi3C,CAAiB/7D,EAAKwmB,EAAMnkB,EAAOw0B,GAGvC,MAAMmlC,WAAoB/e,GACxBn6C,YAAY83B,GACVqP,QACAvvC,KAAKm3C,UAAW,EAChBn3C,KAAKN,aAAUmlB,EACf7kB,KAAKugC,WAAQ1b,EACb7kB,KAAK+4C,eAAYl0B,EACjB7kB,KAAKkhE,WAAQr8C,EACb7kB,KAAKuhE,aAAU18C,EACf7kB,KAAKwhE,eAAY38C,EACjB7kB,KAAKk3C,YAAa,EAClBl3C,KAAKyhE,gBAAiB,EACtBzhE,KAAKw9B,mBAAgB3Y,EACjBqb,GACFnkC,OAAO2mB,OAAO1iB,KAAMkgC,GAGxB93B,oBAAoB4iC,EAAWllB,GAC7B,MAAMxC,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACnB,IAAKA,EAAQ22B,SAA8C,aAAnC32B,EAAQy2B,0BAA2Cz2B,EAAQ0gE,UAAY98C,EAAGm+C,eAAgB,CAChH,MAAMt5D,EAAOzI,EAAQw2B,SAAW5S,EAAGid,MAAQjd,EAAGy1B,UAC9C/iB,GAA2B1S,EAAGi+C,QAAS7hE,EAASsrC,EAAW7iC,EAAM2d,GACjExC,EAAGm+C,gBAAiB,GAGxB3tC,WAAWA,GACT,MAAMxQ,EAAKtjB,KACXsjB,EAAGi+C,QAAUztC,SACNxQ,EAAGk+C,iBACHl+C,EAAG49C,MACV59C,EAAGm+C,gBAAiB,EAEtB3tC,aACE,OAAO9zB,KAAKuhE,QAEdvkC,eACE,OAAOh9B,KAAKwhE,YAAcxhE,KAAKwhE,UDxiInC,SAA0B11C,EAAMmR,GAC9B,MAAMnJ,EAAShI,EAAKgI,OACdoC,EAAWpK,EAAKpsB,QAAQw2B,SACxBiG,EAAQrI,EAAO9xB,OACrB,IAAKm6B,EACH,MAAO,GAET,MAAMh0B,IAAS2jB,EAAKyU,OACd54B,MAACA,EAAKC,IAAEA,GAxDhB,SAAyBksB,EAAQqI,EAAOh0B,EAAM+tB,GAC5C,IAAIvuB,EAAQ,EACRC,EAAMu0B,EAAQ,EAClB,GAAIh0B,IAAS+tB,EACX,KAAOvuB,EAAQw0B,IAAUrI,EAAOnsB,GAAOosB,MACrCpsB,IAGJ,KAAOA,EAAQw0B,GAASrI,EAAOnsB,GAAOosB,MACpCpsB,IAMF,IAJAA,GAASw0B,EACLh0B,IACFP,GAAOD,GAEFC,EAAMD,GAASmsB,EAAOlsB,EAAMu0B,GAAOpI,MACxCnsB,IAGF,OADAA,GAAOu0B,EACA,CAACx0B,MAAAA,EAAOC,IAAAA,GAqCM85D,CAAgB5tC,EAAQqI,EAAOh0B,EAAM+tB,GAC1D,OACS6G,GAAcjR,GADN,IAAboK,EACyB,CAAC,CAACvuB,MAAAA,EAAOC,IAAAA,EAAKO,KAAAA,IArC7C,SAAuB2rB,EAAQnsB,EAAO+I,EAAKvI,GACzC,MAAMg0B,EAAQrI,EAAO9xB,OACfs1B,EAAS,GACf,IAEI1vB,EAFA2oC,EAAO5oC,EACPyuB,EAAOtC,EAAOnsB,GAElB,IAAKC,EAAMD,EAAQ,EAAGC,GAAO8I,IAAO9I,EAAK,CACvC,MAAM23B,EAAMzL,EAAOlsB,EAAMu0B,GACrBoD,EAAIxL,MAAQwL,EAAIiY,KACbphB,EAAKrC,OACR5rB,GAAO,EACPmvB,EAAOxzB,KAAK,CAAC6D,MAAOA,EAAQw0B,EAAOv0B,KAAMA,EAAM,GAAKu0B,EAAOh0B,KAAAA,IAC3DR,EAAQ4oC,EAAOhR,EAAIiY,KAAO5vC,EAAM,OAGlC2oC,EAAO3oC,EACHwuB,EAAKrC,OACPpsB,EAAQC,IAGZwuB,EAAOmJ,EAKT,OAHa,OAATgR,GACFjZ,EAAOxzB,KAAK,CAAC6D,MAAOA,EAAQw0B,EAAOv0B,IAAK2oC,EAAOpU,EAAOh0B,KAAAA,IAEjDmvB,EAgBoBqqC,CAAc7tC,EAAQnsB,EAFrCC,EAAMD,EAAQC,EAAMu0B,EAAQv0B,IACjBkkB,EAAKitB,WAAuB,IAAVpxC,GAAeC,IAAQu0B,EAAQ,GAHrBrI,EAAQmJ,GC8hId2kC,CAAiB5hE,KAAMA,KAAKN,QAAQ28B,UAEjFj0B,QACE,MAAM40B,EAAWh9B,KAAKg9B,SAChBlJ,EAAS9zB,KAAK8zB,OACpB,OAAOkJ,EAASh7B,QAAU8xB,EAAOkJ,EAAS,GAAGr1B,OAE/CS,OACE,MAAM40B,EAAWh9B,KAAKg9B,SAChBlJ,EAAS9zB,KAAK8zB,OACdqI,EAAQa,EAASh7B,OACvB,OAAOm6B,GAASrI,EAAOkJ,EAASb,EAAQ,GAAGv0B,KAE7CQ,YAAYkiB,EAAO9Z,GACjB,MAAM8S,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACbS,EAAQmqB,EAAM9Z,GACdsjB,EAASxQ,EAAGwQ,OACZkJ,EDrnIV,SAAwBlR,EAAMwQ,GAC5B,MAAMhF,EAAS,GACT0F,EAAWlR,EAAKkR,SACtB,IAAK,IAAIj7B,EAAI,EAAGA,EAAIi7B,EAASh7B,OAAQD,IAAK,CACxC,MAAM8/D,EAAMzlC,GAAcY,EAASj7B,GAAI+pB,EAAKgI,OAAQwI,GAChDulC,EAAI7/D,QACNs1B,EAAOxzB,QAAQ+9D,GAGnB,OAAOvqC,EC4mIYwqC,CAAex+C,EAAI,CAAC9S,SAAAA,EAAU7I,MAAOxH,EAAOyH,IAAKzH,IAClE,IAAK68B,EAASh7B,OACZ,OAEF,MAAMs1B,EAAS,GACTyqC,EApGV,SAAiCriE,GAC/B,OAAIA,EAAQ0gE,QACH9lC,GAEL56B,EAAQ22B,SAA8C,aAAnC32B,EAAQy2B,uBACtBoE,GAEFF,GA6FgB2nC,CAAwBtiE,GAC7C,IAAIqC,EAAGmL,EACP,IAAKnL,EAAI,EAAGmL,EAAO8vB,EAASh7B,OAAQD,EAAImL,IAAQnL,EAAG,CACjD,MAAM4F,MAACA,EAAKC,IAAEA,GAAOo1B,EAASj7B,GACxB4U,EAAKmd,EAAOnsB,GACZiP,EAAKkd,EAAOlsB,GAClB,GAAI+O,IAAOC,EAAI,CACb0gB,EAAOxzB,KAAK6S,GACZ,SAEF,MACMsrD,EAAeF,EAAaprD,EAAIC,EAD5BnP,KAAKC,KAAKvH,EAAQwW,EAAGnG,KAAcoG,EAAGpG,GAAYmG,EAAGnG,KAClB9Q,EAAQ0gE,SACrD6B,EAAazxD,GAAY8Z,EAAM9Z,GAC/B8mB,EAAOxzB,KAAKm+D,GAEd,OAAyB,IAAlB3qC,EAAOt1B,OAAes1B,EAAO,GAAKA,EAE3ClvB,YAAY9C,EAAK+2B,EAASr1B,GAExB,OADsB85D,GAAkB9gE,KACjCohE,CAAc97D,EAAKtF,KAAMq8B,EAASr1B,GAE3CoB,KAAK9C,EAAKqC,EAAOw0B,GACf,MAAM7Y,EAAKtjB,KACLg9B,EAAW1Z,EAAG0Z,SACdokC,EAAgBN,GAAkBx9C,GACxC,IAAInb,EAAOmb,EAAGid,MACd54B,EAAQA,GAAS,EACjBw0B,EAAQA,GAAU7Y,EAAGwQ,OAAO9xB,OAAS2F,EACrC,IAAK,MAAM00B,KAAWW,EACpB70B,GAAQi5D,EAAc97D,EAAKge,EAAI+Y,EAAS,CAAC10B,MAAAA,EAAOC,IAAKD,EAAQw0B,EAAQ,IAEvE,QAASh0B,EAEXC,KAAK9C,EAAK0lC,EAAWrjC,EAAOw0B,GAC1B,MAAM7Y,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,SAAW,IACf4jB,EAAGwQ,QAAU,IAChB9xB,QAAWtC,EAAQyqB,cAG/B7kB,EAAI6iB,OACJ0W,GAAKv5B,EAAKge,EAAI3b,EAAOw0B,GACrB72B,EAAIgjB,UACAhF,EAAG6zB,WACL7zB,EAAGm+C,gBAAiB,EACpBn+C,EAAG49C,WAAQr8C,KA2BjB,SAASq9C,GAAUhoC,EAAI3rB,EAAKo2B,EAAM2V,GAChC,MAAM56C,EAAUw6B,EAAGx6B,SACZ0I,CAACu8B,GAAOxkC,GAAS+5B,EAAGsoB,SAAS,CAAC7d,GAAO2V,GAC5C,OAAQ7yC,KAAKC,IAAI6G,EAAMpO,GAAST,EAAQ8pB,OAAS9pB,EAAQyiE,UA1B3Db,GAAY31D,GAAK,OACjB21D,GAAY38C,SAAW,CACrBgZ,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjB3T,YAAa,EACbmM,iBAAiB,EACjBH,uBAAwB,UACxBjtB,MAAM,EACNgtB,UAAU,EACVkqC,SAAS,EACT/pC,QAAS,GAEXirC,GAAY5e,cAAgB,CAC1B59B,gBAAiB,kBACjBC,YAAa,eAEfu8C,GAAYh9C,YAAc,CACxB8C,aAAa,EACbE,WAAavoB,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAMqjE,WAAqB7f,GACzBn6C,YAAY83B,GACVqP,QACAvvC,KAAKN,aAAUmlB,EACf7kB,KAAKskC,YAASzf,EACd7kB,KAAK+zB,UAAOlP,EACZ7kB,KAAKw3C,UAAO3yB,EACRqb,GACFnkC,OAAO2mB,OAAO1iB,KAAMkgC,GAGxB93B,QAAQi6D,EAAQC,EAAQhoB,GACtB,MAAM56C,EAAUM,KAAKN,SACf/D,EAACA,EAACyU,EAAEA,GAAKpQ,KAAKwiD,SAAS,CAAC,IAAK,KAAMlI,GACzC,OAAS7yC,KAAKqI,IAAIuyD,EAAS1mE,EAAG,GAAK8L,KAAKqI,IAAIwyD,EAASlyD,EAAG,GAAM3I,KAAKqI,IAAIpQ,EAAQyiE,UAAYziE,EAAQ8pB,OAAQ,GAE7GphB,SAASi6D,EAAQ/nB,GACf,OAAO4nB,GAAUliE,KAAMqiE,EAAQ,IAAK/nB,GAEtClyC,SAASk6D,EAAQhoB,GACf,OAAO4nB,GAAUliE,KAAMsiE,EAAQ,IAAKhoB,GAEtClyC,eAAekyC,GACb,MAAM3+C,EAACA,EAACyU,EAAEA,GAAKpQ,KAAKwiD,SAAS,CAAC,IAAK,KAAMlI,GACzC,MAAO,CAAC3+C,EAAAA,EAAGyU,EAAAA,GAEbhI,KAAK1I,GAEH,IAAI8pB,GADJ9pB,EAAUA,GAAWM,KAAKN,SAAW,IAChB8pB,QAAU,EAC/BA,EAAS/hB,KAAKiJ,IAAI8Y,EAAQA,GAAU9pB,EAAQ6iE,aAAe,GAE3D,OAAgC,GAAxB/4C,GADYA,GAAU9pB,EAAQyqB,aAAe,IAGvD/hB,KAAK9C,EAAKilB,GACR,MAAMjH,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACf4jB,EAAGyQ,MAAQr0B,EAAQ8pB,OAAS,KAAQa,GAAe/G,EAAIiH,EAAMjH,EAAG9lB,KAAKkC,GAAW,KAGpF4F,EAAI8mB,YAAc1sB,EAAQqlB,YAC1Bzf,EAAI+mB,UAAY3sB,EAAQyqB,YACxB7kB,EAAI0mB,UAAYtsB,EAAQolB,gBACxBoE,GAAU5jB,EAAK5F,EAAS4jB,EAAG3nB,EAAG2nB,EAAGlT,IAEnChI,WACE,MAAM1I,EAAUM,KAAKN,SAAW,GAChC,OAAOA,EAAQ8pB,OAAS9pB,EAAQyiE,WAkBpC,SAASK,GAAaC,EAAKnoB,GACzB,MAAM3+C,EAACA,EAACyU,EAAEA,EAAC+3B,KAAEA,EAAIrgB,MAAEA,EAAKmB,OAAEA,GAAUw5C,EAAIjgB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWlI,GACxF,IAAI7vB,EAAMC,EAAOC,EAAKC,EAAQ83C,EAc9B,OAbID,EAAI5zB,YACN6zB,EAAOz5C,EAAS,EAChBwB,EAAOhjB,KAAKgJ,IAAI9U,EAAGwsC,GACnBzd,EAAQjjB,KAAKiJ,IAAI/U,EAAGwsC,GACpBxd,EAAMva,EAAIsyD,EACV93C,EAASxa,EAAIsyD,IAEbA,EAAO56C,EAAQ,EACf2C,EAAO9uB,EAAI+mE,EACXh4C,EAAQ/uB,EAAI+mE,EACZ/3C,EAAMljB,KAAKgJ,IAAIL,EAAG+3B,GAClBvd,EAASnjB,KAAKiJ,IAAIN,EAAG+3B,IAEhB,CAAC1d,KAAAA,EAAME,IAAAA,EAAKD,MAAAA,EAAOE,OAAAA,GAE5B,SAAS+3C,GAAY5uC,EAAM5zB,EAAOsQ,EAAKC,GACrC,OAAOqjB,EAAO,EAAIjiB,GAAY3R,EAAOsQ,EAAKC,GA2B5C,SAASkyD,GAAcH,GACrB,MAAMnmC,EAASkmC,GAAaC,GACtB36C,EAAQwU,EAAO5R,MAAQ4R,EAAO7R,KAC9BxB,EAASqT,EAAO1R,OAAS0R,EAAO3R,IAChC8sB,EA7BR,SAA0BgrB,EAAKI,EAAMC,GACnC,MAAM3iE,EAAQsiE,EAAI/iE,QAAQyqB,YACpB4J,EAAO0uC,EAAI7zB,cACXhoC,EAAIsnB,GAAO/tB,GACjB,MAAO,CACLwB,EAAGghE,GAAY5uC,EAAKpJ,IAAK/jB,EAAE+jB,IAAK,EAAGm4C,GACnCx8D,EAAGq8D,GAAY5uC,EAAKrJ,MAAO9jB,EAAE8jB,MAAO,EAAGm4C,GACvCrmE,EAAGmmE,GAAY5uC,EAAKnJ,OAAQhkB,EAAEgkB,OAAQ,EAAGk4C,GACzCv4D,EAAGo4D,GAAY5uC,EAAKtJ,KAAM7jB,EAAE6jB,KAAM,EAAGo4C,IAqBxBE,CAAiBN,EAAK36C,EAAQ,EAAGmB,EAAS,GACnDO,EAnBR,SAA2Bi5C,EAAKI,EAAMC,GACpC,MAAM/zB,mBAACA,GAAsB0zB,EAAIjgB,SAAS,CAAC,uBACrCriD,EAAQsiE,EAAI/iE,QAAQ+8D,aACpB71D,EAAIunB,GAAchuB,GAClB6iE,EAAOv7D,KAAKgJ,IAAIoyD,EAAMC,GACtB/uC,EAAO0uC,EAAI7zB,cACXq0B,EAAel0B,GAAsB/iC,GAAS7L,GACpD,MAAO,CACLitB,QAASu1C,IAAaM,GAAgBlvC,EAAKpJ,KAAOoJ,EAAKtJ,KAAM7jB,EAAEwmB,QAAS,EAAG41C,GAC3Ez1C,SAAUo1C,IAAaM,GAAgBlvC,EAAKpJ,KAAOoJ,EAAKrJ,MAAO9jB,EAAE2mB,SAAU,EAAGy1C,GAC9E31C,WAAYs1C,IAAaM,GAAgBlvC,EAAKnJ,QAAUmJ,EAAKtJ,KAAM7jB,EAAEymB,WAAY,EAAG21C,GACpF11C,YAAaq1C,IAAaM,GAAgBlvC,EAAKnJ,QAAUmJ,EAAKrJ,MAAO9jB,EAAE0mB,YAAa,EAAG01C,IAQ1EE,CAAkBT,EAAK36C,EAAQ,EAAGmB,EAAS,GAC1D,MAAO,CACLk6C,MAAO,CACLxnE,EAAG2gC,EAAO7R,KACVra,EAAGksB,EAAO3R,IACVxU,EAAG2R,EACHrS,EAAGwT,EACHO,OAAAA,GAEF60C,MAAO,CACL1iE,EAAG2gC,EAAO7R,KAAOgtB,EAAOltC,EACxB6F,EAAGksB,EAAO3R,IAAM8sB,EAAO91C,EACvBwU,EAAG2R,EAAQ2vB,EAAOltC,EAAIktC,EAAOnxC,EAC7BmP,EAAGwT,EAASwuB,EAAO91C,EAAI81C,EAAOj7C,EAC9BgtB,OAAQ,CACN4D,QAAS3lB,KAAKiJ,IAAI,EAAG8Y,EAAO4D,QAAU3lB,KAAKiJ,IAAI+mC,EAAO91C,EAAG81C,EAAOltC,IAChEgjB,SAAU9lB,KAAKiJ,IAAI,EAAG8Y,EAAO+D,SAAW9lB,KAAKiJ,IAAI+mC,EAAO91C,EAAG81C,EAAOnxC,IAClE+mB,WAAY5lB,KAAKiJ,IAAI,EAAG8Y,EAAO6D,WAAa5lB,KAAKiJ,IAAI+mC,EAAOj7C,EAAGi7C,EAAOltC,IACtE+iB,YAAa7lB,KAAKiJ,IAAI,EAAG8Y,EAAO8D,YAAc7lB,KAAKiJ,IAAI+mC,EAAOj7C,EAAGi7C,EAAOnxC,OAKhF,SAASk0C,GAAQioB,EAAK9mE,EAAGyU,EAAGkqC,GAC1B,MAAM8oB,EAAc,OAANznE,EACR0nE,EAAc,OAANjzD,EAERksB,EAASmmC,KADEW,GAASC,IACSb,GAAaC,EAAKnoB,GACrD,OAAOhe,IACH8mC,GAASznE,GAAK2gC,EAAO7R,MAAQ9uB,GAAK2gC,EAAO5R,SACzC24C,GAASjzD,GAAKksB,EAAO3R,KAAOva,GAAKksB,EAAO1R,QAK9C,SAAS04C,GAAkBh+D,EAAK4kB,GAC9B5kB,EAAI4kB,KAAKA,EAAKvuB,EAAGuuB,EAAK9Z,EAAG8Z,EAAK/T,EAAG+T,EAAKzU,GAExC,SAAS8tD,GAAYr5C,EAAMovB,EAAQkqB,EAAU,IAC3C,MAAM7nE,EAAIuuB,EAAKvuB,IAAM6nE,EAAQ7nE,GAAK29C,EAAS,EACrClpC,EAAI8Z,EAAK9Z,IAAMozD,EAAQpzD,GAAKkpC,EAAS,EACrCnjC,GAAK+T,EAAKvuB,EAAIuuB,EAAK/T,IAAMqtD,EAAQ7nE,EAAI6nE,EAAQrtD,EAAImjC,EAAS,GAAK39C,EAC/D8Z,GAAKyU,EAAK9Z,EAAI8Z,EAAKzU,IAAM+tD,EAAQpzD,EAAIozD,EAAQ/tD,EAAI6jC,EAAS,GAAKlpC,EACrE,MAAO,CACLzU,EAAGuuB,EAAKvuB,EAAIA,EACZyU,EAAG8Z,EAAK9Z,EAAIA,EACZ+F,EAAG+T,EAAK/T,EAAIA,EACZV,EAAGyU,EAAKzU,EAAIA,EACZ+T,OAAQU,EAAKV,QAlHjB44C,GAAaz2D,GAAK,QAClBy2D,GAAaz9C,SAAW,CACtBwF,YAAa,EACbg4C,UAAW,EACXvsB,iBAAkB,EAClB2sB,YAAa,EACbj5C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAEZ64C,GAAa1f,cAAgB,CAC3B59B,gBAAiB,kBACjBC,YAAa,eAyGf,MAAM0+C,WAAmBlhB,GACvBn6C,YAAY83B,GACVqP,QACAvvC,KAAKN,aAAUmlB,EACf7kB,KAAK6uC,gBAAahqB,EAClB7kB,KAAKmoC,UAAOtjB,EACZ7kB,KAAK8nB,WAAQjD,EACb7kB,KAAKipB,YAASpE,EACVqb,GACFnkC,OAAO2mB,OAAO1iB,KAAMkgC,GAGxB93B,KAAK9C,GACH,MAAM5F,EAAUM,KAAKN,SACf2+D,MAACA,EAAK8E,MAAEA,GAASP,GAAc5iE,MAC/B0jE,GAlCSl6C,EAkCe25C,EAAM35C,QAjCxB4D,SAAW5D,EAAO+D,UAAY/D,EAAO6D,YAAc7D,EAAO8D,YAiCxBH,GAAqBm2C,GAlCvE,IAAmB95C,EAmCf,MAAMm6C,EAAgB,IACtBr+D,EAAI6iB,OACAg7C,EAAMhtD,IAAMkoD,EAAMloD,GAAKgtD,EAAM1tD,IAAM4oD,EAAM5oD,IAC3CnQ,EAAIskB,YACJ85C,EAAYp+D,EAAKi+D,GAAYJ,EAAOQ,EAAetF,IACnD/4D,EAAIwlB,OACJ44C,EAAYp+D,EAAKi+D,GAAYlF,GAAO,IAAgB8E,IACpD79D,EAAI0mB,UAAYtsB,EAAQqlB,YACxBzf,EAAI4D,KAAK,YAEX5D,EAAIskB,YACJ85C,EAAYp+D,EAAKi+D,GAAYlF,EAAOsF,EAAeR,IACnD79D,EAAI0mB,UAAYtsB,EAAQolB,gBACxBxf,EAAI4D,OACJ5D,EAAIgjB,UAENlgB,QAAQi6D,EAAQC,EAAQhoB,GACtB,OAAOE,GAAQx6C,KAAMqiE,EAAQC,EAAQhoB,GAEvClyC,SAASi6D,EAAQ/nB,GACf,OAAOE,GAAQx6C,KAAMqiE,EAAQ,KAAM/nB,GAErClyC,SAASk6D,EAAQhoB,GACf,OAAOE,GAAQx6C,KAAM,KAAMsiE,EAAQhoB,GAErClyC,eAAekyC,GACb,MAAM3+C,EAACA,EAACyU,EAAEA,EAAC+3B,KAAEA,EAAI0G,WAAEA,GAAc7uC,KAAKwiD,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAelI,GACjF,MAAO,CACL3+C,EAAGkzC,GAAclzC,EAAIwsC,GAAQ,EAAIxsC,EACjCyU,EAAGy+B,EAAaz+B,GAAKA,EAAI+3B,GAAQ,GAGrC//B,SAASu8B,GACP,MAAgB,MAATA,EAAe3kC,KAAK8nB,MAAQ,EAAI9nB,KAAKipB,OAAS,GAGzDw6C,GAAW93D,GAAK,MAChB83D,GAAW9+C,SAAW,CACpBiqB,cAAe,QACfzkB,YAAa,EACbsyC,aAAc,EACd1tB,oBAAoB,EACpBzlB,gBAAYzE,GAEd4+C,GAAW/gB,cAAgB,CACzB59B,gBAAiB,kBACjBC,YAAa,eA00Cf,MAAM6+C,GAAc,CAClBx7D,QAAQwnB,GACN,IAAKA,EAAM5tB,OACT,OAAO,EAET,IAAID,EAAG+K,EACHnR,EAAI,EACJyU,EAAI,EACJ+rB,EAAQ,EACZ,IAAKp6B,EAAI,EAAG+K,EAAM8iB,EAAM5tB,OAAQD,EAAI+K,IAAO/K,EAAG,CAC5C,MAAMm4B,EAAKtK,EAAM7tB,GAAG1D,QACpB,GAAI67B,GAAMA,EAAG2pC,WAAY,CACvB,MAAMt1D,EAAM2rB,EAAG4pC,kBACfnoE,GAAK4S,EAAI5S,EACTyU,GAAK7B,EAAI6B,IACP+rB,GAGN,MAAO,CACLxgC,EAAGA,EAAIwgC,EACP/rB,EAAGA,EAAI+rB,IAGX/zB,QAAQwnB,EAAOm0C,GACb,IAAKn0C,EAAM5tB,OACT,OAAO,EAET,IAGID,EAAG+K,EAAKk3D,EAHRroE,EAAIooE,EAAcpoE,EAClByU,EAAI2zD,EAAc3zD,EAClB4qC,EAAc9uC,OAAO+C,kBAEzB,IAAKlN,EAAI,EAAG+K,EAAM8iB,EAAM5tB,OAAQD,EAAI+K,IAAO/K,EAAG,CAC5C,MAAMm4B,EAAKtK,EAAM7tB,GAAG1D,QACpB,GAAI67B,GAAMA,EAAG2pC,WAAY,CACvB,MACMh9D,EAAImK,GAAsB+yD,EADjB7pC,EAAG+gB,kBAEdp0C,EAAIm0C,IACNA,EAAcn0C,EACdm9D,EAAiB9pC,IAIvB,GAAI8pC,EAAgB,CAClB,MAAMC,EAAKD,EAAeF,kBAC1BnoE,EAAIsoE,EAAGtoE,EACPyU,EAAI6zD,EAAG7zD,EAET,MAAO,CACLzU,EAAAA,EACAyU,EAAAA,KAIN,SAAS8zD,GAAa/7B,EAAMg8B,GAQ1B,OAPIA,IACEt4D,GAAQs4D,GACVh6D,MAAMmB,UAAUxH,KAAK0H,MAAM28B,EAAMg8B,GAEjCh8B,EAAKrkC,KAAKqgE,IAGPh8B,EAET,SAASi8B,GAAcviE,GACrB,OAAoB,iBAARA,GAAoBA,aAAewiE,SAAWxiE,EAAIqB,QAAQ,OAAS,EACtErB,EAAIiB,MAAM,MAEZjB,EAET,SAASyiE,GAAkBp/C,EAAOuN,GAChC,MAAMp0B,QAACA,EAAOgP,aAAEA,EAAY3C,MAAEA,GAAS+nB,EACjC4R,EAAanf,EAAM2iB,eAAex6B,GAAcg3B,YAChDoG,MAACA,EAAKtqC,MAAEA,GAASkkC,EAAWkgC,iBAAiB75D,GACnD,MAAO,CACLwa,MAAAA,EACAulB,MAAAA,EACAnG,OAAQD,EAAWmG,UAAU9/B,GAC7B2gC,IAAKnmB,EAAM9lB,KAAK4lB,SAAS3X,GAAcjO,KAAKsL,GAC5C0rC,eAAgBj2C,EAChBymC,QAASvC,EAAWwC,aACpBuE,UAAW1gC,EACX2C,aAAAA,EACAhP,QAAAA,GAGJ,SAASmmE,GAAe5xB,EAASlzC,GAC/B,MAAM4F,EAAMstC,EAAQ9Q,OAAOx8B,KACrBm/D,KAACA,EAAIC,OAAEA,EAAM7xB,MAAEA,GAASD,GACxB+xB,SAACA,EAAQC,UAAEA,GAAallE,EACxBmlE,EAAWx2C,GAAO3uB,EAAQmlE,UAC1BC,EAAYz2C,GAAO3uB,EAAQolE,WAC3BC,EAAa12C,GAAO3uB,EAAQqlE,YAC5BC,EAAiBnyB,EAAM7wC,OACvBijE,EAAkBP,EAAO1iE,OACzBkjE,EAAoBT,EAAKziE,OACzBi8C,EAAU7vB,GAAU1uB,EAAQu+C,SAClC,IAAIh1B,EAASg1B,EAAQh1B,OACjBnB,EAAQ,EACRq9C,EAAqBV,EAAKplC,QAAO,CAAClD,EAAOipC,IAAajpC,EAAQipC,EAASC,OAAOrjE,OAASojE,EAASz5C,MAAM3pB,OAASojE,EAASE,MAAMtjE,QAAQ,GAO1I,GANAmjE,GAAsBvyB,EAAQ2yB,WAAWvjE,OAAS4wC,EAAQ4yB,UAAUxjE,OAChEgjE,IACF/7C,GAAU+7C,EAAiBF,EAAUr/C,YACnCu/C,EAAiB,GAAKtlE,EAAQ+lE,aAC/B/lE,EAAQgmE,mBAEPP,EAAoB,CAEtBl8C,GAAUi8C,GADaxlE,EAAQimE,cAAgBl+D,KAAKiJ,IAAIk0D,EAAWC,EAASp/C,YAAco/C,EAASp/C,aAEjG0/C,EAAqBD,GAAqBL,EAASp/C,YACnD0/C,EAAqB,GAAKzlE,EAAQkmE,YAElCX,IACFh8C,GAAUvpB,EAAQmmE,gBACjBZ,EAAkBF,EAAWt/C,YAC5Bw/C,EAAkB,GAAKvlE,EAAQomE,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASl6C,GAC5BhE,EAAQrgB,KAAKiJ,IAAIoX,EAAOxiB,EAAIuiB,YAAYiE,GAAMhE,MAAQi+C,IAkBxD,OAhBAzgE,EAAI6iB,OACJ7iB,EAAIigB,KAAOu/C,EAAUn9C,OACrBhb,GAAKimC,EAAQC,MAAOmzB,GACpB1gE,EAAIigB,KAAOs/C,EAASl9C,OACpBhb,GAAKimC,EAAQ2yB,WAAWl4B,OAAOuF,EAAQ4yB,WAAYQ,GACnDD,EAAermE,EAAQimE,cAAiBhB,EAAW,EAAK,EACxDh4D,GAAK83D,GAAOW,IACVz4D,GAAKy4D,EAASC,OAAQW,GACtBr5D,GAAKy4D,EAASz5C,MAAOq6C,GACrBr5D,GAAKy4D,EAASE,MAAOU,MAEvBD,EAAe,EACfzgE,EAAIigB,KAAOw/C,EAAWp9C,OACtBhb,GAAKimC,EAAQ8xB,OAAQsB,GACrB1gE,EAAIgjB,UACJR,GAASm2B,EAAQn2B,MACV,CAACA,MAAAA,EAAOmB,OAAAA,GAqBjB,SAASg9C,GAAgB/gD,EAAOxlB,EAASlC,EAAM0oE,GAC7C,MAAMvqE,EAACA,EAACmsB,MAAEA,GAAStqB,GACZsqB,MAAOq+C,EAAYn7B,WAAWvgB,KAACA,EAAIC,MAAEA,IAAUxF,EACtD,IAAIkhD,EAAS,SAWb,MAVe,WAAXF,EACFE,EAASzqE,IAAM8uB,EAAOC,GAAS,EAAI,OAAS,QACnC/uB,GAAKmsB,EAAQ,EACtBs+C,EAAS,OACAzqE,GAAKwqE,EAAar+C,EAAQ,IACnCs+C,EAAS,SAnBb,SAA6BA,EAAQlhD,EAAOxlB,EAASlC,GACnD,MAAM7B,EAACA,EAACmsB,MAAEA,GAAStqB,EACb6oE,EAAQ3mE,EAAQ4mE,UAAY5mE,EAAQ6mE,aAC1C,MAAe,SAAXH,GAAqBzqE,EAAImsB,EAAQu+C,EAAQnhD,EAAM4C,OAGpC,UAAXs+C,GAAsBzqE,EAAImsB,EAAQu+C,EAAQ,QAA9C,EAeIG,CAAoBJ,EAAQlhD,EAAOxlB,EAASlC,KAC9C4oE,EAAS,UAEJA,EAET,SAASK,GAAmBvhD,EAAOxlB,EAASlC,GAC1C,MAAM0oE,EAASxmE,EAAQwmE,QApCzB,SAAyBhhD,EAAO1nB,GAC9B,MAAM4S,EAACA,EAAC6Y,OAAEA,GAAUzrB,EACpB,OAAI4S,EAAI6Y,EAAS,EACR,MACE7Y,EAAK8U,EAAM+D,OAASA,EAAS,EAC/B,SAEF,SA6B0By9C,CAAgBxhD,EAAO1nB,GACxD,MAAO,CACL4oE,OAAQ1mE,EAAQ0mE,QAAUH,GAAgB/gD,EAAOxlB,EAASlC,EAAM0oE,GAChEA,OAAAA,GAuBJ,SAASS,GAAmBjnE,EAASlC,EAAMopE,EAAW1hD,GACpD,MAAMohD,UAACA,EAASC,aAAEA,EAAYl9C,aAAEA,GAAgB3pB,GAC1C0mE,OAACA,EAAMF,OAAEA,GAAUU,EACnBC,EAAiBP,EAAYC,EAC7BO,EAAmBz9C,EAAek9C,EACxC,IAAI5qE,EAzBN,SAAgB6B,EAAM4oE,GACpB,IAAIzqE,EAACA,EAACmsB,MAAEA,GAAStqB,EAMjB,MALe,UAAX4oE,EACFzqE,GAAKmsB,EACe,WAAXs+C,IACTzqE,GAAMmsB,EAAQ,GAETnsB,EAkBCorE,CAAOvpE,EAAM4oE,GACrB,MAAMh2D,EAjBR,SAAgB5S,EAAM0oE,EAAQW,GAC5B,IAAIz2D,EAACA,EAAC6Y,OAAEA,GAAUzrB,EAQlB,MAPe,QAAX0oE,EACF91D,GAAKy2D,EAELz2D,GADoB,WAAX81D,EACJj9C,EAAS49C,EAER59C,EAAS,EAEV7Y,EAQG42D,CAAOxpE,EAAM0oE,EAAQW,GAY/B,MAXe,WAAXX,EACa,SAAXE,EACFzqE,GAAKkrE,EACe,UAAXT,IACTzqE,GAAKkrE,GAEa,SAAXT,EACTzqE,GAAKmrE,EACe,UAAXV,IACTzqE,GAAKmrE,GAEA,CACLnrE,EAAGmW,GAAYnW,EAAG,EAAGupB,EAAM4C,MAAQtqB,EAAKsqB,OACxC1X,EAAG0B,GAAY1B,EAAG,EAAG8U,EAAM+D,OAASzrB,EAAKyrB,SAG7C,SAASg+C,GAAYr0B,EAASlnC,EAAOhM,GACnC,MAAMu+C,EAAU7vB,GAAU1uB,EAAQu+C,SAClC,MAAiB,WAAVvyC,EACHknC,EAAQj3C,EAAIi3C,EAAQ9qB,MAAQ,EAClB,UAAVpc,EACEknC,EAAQj3C,EAAIi3C,EAAQ9qB,MAAQm2B,EAAQvzB,MACpCkoB,EAAQj3C,EAAIsiD,EAAQxzB,KAE5B,SAASy8C,GAAwBjiE,GAC/B,OAAOi/D,GAAa,GAAIE,GAAcn/D,IASxC,SAASkiE,GAAkBnjE,EAAW2F,GACpC,MAAM8mB,EAAW9mB,GAAWA,EAAQi9B,SAAWj9B,EAAQi9B,QAAQgM,SAAWjpC,EAAQi9B,QAAQgM,QAAQ5uC,UAClG,OAAOysB,EAAWzsB,EAAUysB,SAASA,GAAYzsB,GAEnD,cAAsBu+C,GACpBn6C,YAAYlB,GACVqoC,QACAvvC,KAAKonE,QAAU,EACfpnE,KAAK8+B,QAAU,GACf9+B,KAAK8hC,OAAS56B,EAAO46B,OACrB9hC,KAAKqnE,oBAAiBxiD,EACtB7kB,KAAKsnE,WAAQziD,EACb7kB,KAAKunE,uBAAoB1iD,EACzB7kB,KAAKwnE,cAAgB,GACrBxnE,KAAKsiC,iBAAczd,EACnB7kB,KAAKsmC,cAAWzhB,EAChB7kB,KAAKN,QAAUwH,EAAOxH,QACtBM,KAAKynE,gBAAa5iD,EAClB7kB,KAAK6yC,WAAQhuB,EACb7kB,KAAKulE,gBAAa1gD,EAClB7kB,KAAKykE,UAAO5/C,EACZ7kB,KAAKwlE,eAAY3gD,EACjB7kB,KAAK0kE,YAAS7/C,EACd7kB,KAAKomE,YAASvhD,EACd7kB,KAAKkmE,YAASrhD,EACd7kB,KAAKrE,OAAIkpB,EACT7kB,KAAKoQ,OAAIyU,EACT7kB,KAAKipB,YAASpE,EACd7kB,KAAK8nB,WAAQjD,EACb7kB,KAAK0nE,YAAS7iD,EACd7kB,KAAK2nE,YAAS9iD,EACd7kB,KAAK4nE,iBAAc/iD,EACnB7kB,KAAK6nE,sBAAmBhjD,EACxB7kB,KAAK8nE,qBAAkBjjD,EAEzBzc,WAAW1I,GACTM,KAAKN,QAAUA,EACfM,KAAKunE,uBAAoB1iD,EACzB7kB,KAAKsmC,cAAWzhB,EAElBzc,qBACE,MAAMkb,EAAKtjB,KACLwlC,EAASliB,EAAGikD,kBAClB,GAAI/hC,EACF,OAAOA,EAET,MAAMtgB,EAAQ5B,EAAGwe,OACXpiC,EAAU4jB,EAAG5jB,QAAQyyB,WAAW7O,EAAGwF,cACnC4C,EAAOhsB,EAAQwkD,SAAWh/B,EAAMxlB,QAAQiD,WAAajD,EAAQgiC,WAC7DA,EAAa,IAAIG,GAAWve,EAAGwe,OAAQpW,GAI7C,OAHIA,EAAK2E,aACP/M,EAAGikD,kBAAoBxrE,OAAO+vC,OAAOpK,IAEhCA,EAETt5B,aACE,MAAMkb,EAAKtjB,KACX,OAAOsjB,EAAGgjB,WACVhjB,EAAGgjB,UAjEuBlT,EAiES9P,EAAGwe,OAAOhZ,aAjEX8pB,EAiEyBtvB,EAjEhBykD,EAiEoBzkD,EAAGkkD,cAhE7DzrE,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GAAS,CAC1Cwf,QAAAA,EACAm1B,aAAAA,EACA9jE,KAAM,cAJV,IAA8BmvB,EAAQwf,EAASm1B,EAmE7C3/D,SAASuB,EAASjK,GAChB,MAAM4jB,EAAKtjB,MACLgE,UAACA,GAAatE,EACdsoE,EAAchkE,EAAUgkE,YAAYx8D,MAAM8X,EAAI,CAAC3Z,IAC/CkpC,EAAQ7uC,EAAU6uC,MAAMrnC,MAAM8X,EAAI,CAAC3Z,IACnCs+D,EAAajkE,EAAUikE,WAAWz8D,MAAM8X,EAAI,CAAC3Z,IACnD,IAAIgiB,EAAQ,GAIZ,OAHAA,EAAQu4C,GAAav4C,EAAOy4C,GAAc4D,IAC1Cr8C,EAAQu4C,GAAav4C,EAAOy4C,GAAcvxB,IAC1ClnB,EAAQu4C,GAAav4C,EAAOy4C,GAAc6D,IACnCt8C,EAETvjB,cAAc2/D,EAAcroE,GAC1B,OAAOwnE,GAAwBxnE,EAAQsE,UAAUuhE,WAAW/5D,MAAMxL,KAAM,CAAC+nE,KAE3E3/D,QAAQ2/D,EAAcroE,GACpB,MAAM4jB,EAAKtjB,MACLgE,UAACA,GAAatE,EACdwoE,EAAY,GAalB,OAZAv7D,GAAKo7D,GAAep+D,IAClB,MAAMy7D,EAAW,CACfC,OAAQ,GACR15C,MAAO,GACP25C,MAAO,IAEH6C,EAAShB,GAAkBnjE,EAAW2F,GAC5Cu6D,GAAakB,EAASC,OAAQjB,GAAc+D,EAAOC,YAAYroE,KAAKujB,EAAI3Z,KACxEu6D,GAAakB,EAASz5C,MAAOw8C,EAAO19B,MAAM1qC,KAAKujB,EAAI3Z,IACnDu6D,GAAakB,EAASE,MAAOlB,GAAc+D,EAAOE,WAAWtoE,KAAKujB,EAAI3Z,KACtEu+D,EAAUpkE,KAAKshE,MAEV8C,EAET9/D,aAAa2/D,EAAcroE,GACzB,OAAOwnE,GAAwBxnE,EAAQsE,UAAUwhE,UAAUh6D,MAAMxL,KAAM,CAAC+nE,KAE1E3/D,UAAU2/D,EAAcroE,GACtB,MAAM4jB,EAAKtjB,MACLgE,UAACA,GAAatE,EACd4oE,EAAetkE,EAAUskE,aAAa98D,MAAM8X,EAAI,CAACykD,IACjDrD,EAAS1gE,EAAU0gE,OAAOl5D,MAAM8X,EAAI,CAACykD,IACrCQ,EAAcvkE,EAAUukE,YAAY/8D,MAAM8X,EAAI,CAACykD,IACrD,IAAIp8C,EAAQ,GAIZ,OAHAA,EAAQu4C,GAAav4C,EAAOy4C,GAAckE,IAC1C38C,EAAQu4C,GAAav4C,EAAOy4C,GAAcM,IAC1C/4C,EAAQu4C,GAAav4C,EAAOy4C,GAAcmE,IACnC58C,EAETvjB,aAAa1I,GACX,MAAM4jB,EAAKtjB,KACLkB,EAASoiB,EAAGwb,QACZ1/B,EAAOkkB,EAAGwe,OAAO1iC,KACjBwoE,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI/lE,EAAG+K,EADHi7D,EAAe,GAEnB,IAAKhmE,EAAI,EAAG+K,EAAM5L,EAAOc,OAAQD,EAAI+K,IAAO/K,EAC1CgmE,EAAajkE,KAAKwgE,GAAkBhhD,EAAGwe,OAAQ5gC,EAAOa,KAkBxD,OAhBIrC,EAAQsD,SACV+kE,EAAeA,EAAa/kE,QAAO,CAAC3E,EAASqM,EAAO6F,IAAU7Q,EAAQsD,OAAO3E,EAASqM,EAAO6F,EAAOnR,MAElGM,EAAQ8oE,WACVT,EAAeA,EAAax6B,MAAK,CAAChxC,EAAGC,IAAMkD,EAAQ8oE,SAASjsE,EAAGC,EAAG4C,MAEpEuN,GAAKo7D,GAAep+D,IAClB,MAAMw+D,EAAShB,GAAkBznE,EAAQsE,UAAW2F,GACpDi+D,EAAY9jE,KAAKqkE,EAAOM,WAAW1oE,KAAKujB,EAAI3Z,IAC5Ck+D,EAAiB/jE,KAAKqkE,EAAOO,gBAAgB3oE,KAAKujB,EAAI3Z,IACtDm+D,EAAgBhkE,KAAKqkE,EAAOQ,eAAe5oE,KAAKujB,EAAI3Z,OAEtD2Z,EAAGskD,YAAcA,EACjBtkD,EAAGukD,iBAAmBA,EACtBvkD,EAAGwkD,gBAAkBA,EACrBxkD,EAAGmkD,WAAaM,EACTA,EAET3/D,OAAO4uC,EAAS0kB,GACd,MAAMp4C,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QAAQyyB,WAAW7O,EAAGwF,cACnC5nB,EAASoiB,EAAGwb,QAClB,IAAIwC,EACAymC,EAAe,GACnB,GAAK7mE,EAAOc,OAML,CACL,MAAMm4C,EAAWypB,GAAYlkE,EAAQy6C,UAAUp6C,KAAKujB,EAAIpiB,EAAQoiB,EAAG+jD,gBACnEU,EAAezkD,EAAGslD,aAAalpE,GAC/B4jB,EAAGuvB,MAAQvvB,EAAGulD,SAASd,EAAcroE,GACrC4jB,EAAGiiD,WAAajiD,EAAGwlD,cAAcf,EAAcroE,GAC/C4jB,EAAGmhD,KAAOnhD,EAAGylD,QAAQhB,EAAcroE,GACnC4jB,EAAGkiD,UAAYliD,EAAG0lD,aAAajB,EAAcroE,GAC7C4jB,EAAGohD,OAASphD,EAAG2lD,UAAUlB,EAAcroE,GACvC,MAAMlC,EAAO8lB,EAAGgkD,MAAQ9C,GAAelhD,EAAI5jB,GACrCwpE,EAAkBntE,OAAO2mB,OAAO,GAAIy3B,EAAU38C,GAC9CopE,EAAYH,GAAmBnjD,EAAGwe,OAAQpiC,EAASwpE,GACnDC,EAAkBxC,GAAmBjnE,EAASwpE,EAAiBtC,EAAWtjD,EAAGwe,QACnFxe,EAAG8iD,OAASQ,EAAUR,OACtB9iD,EAAG4iD,OAASU,EAAUV,OACtB5kC,EAAa,CACX8lC,QAAS,EACTzrE,EAAGwtE,EAAgBxtE,EACnByU,EAAG+4D,EAAgB/4D,EACnB0X,MAAOtqB,EAAKsqB,MACZmB,OAAQzrB,EAAKyrB,OACby+C,OAAQvtB,EAASx+C,EACjBgsE,OAAQxtB,EAAS/pC,QA1BA,IAAfkT,EAAG8jD,UACL9lC,EAAa,CACX8lC,QAAS,IA2Bf9jD,EAAGkkD,cAAgBO,EACnBzkD,EAAGgjB,cAAWzhB,EACVyc,GACFhe,EAAG6oB,qBAAqBpnC,OAAOue,EAAIge,GAEjC0V,GAAWt3C,EAAQ0pE,UACrB1pE,EAAQ0pE,SAASrpE,KAAKujB,EAAI,CAAC4B,MAAO5B,EAAGwe,OAAQ8Q,QAAStvB,EAAIo4C,OAAAA,IAG9DtzD,UAAUihE,EAAc/jE,EAAK9H,EAAMkC,GACjC,MAAM4pE,EAAgBtpE,KAAKupE,iBAAiBF,EAAc7rE,EAAMkC,GAChE4F,EAAI0kB,OAAOs/C,EAAczb,GAAIyb,EAAcxb,IAC3CxoD,EAAI0kB,OAAOs/C,EAAcvb,GAAIub,EAActb,IAC3C1oD,EAAI0kB,OAAOs/C,EAAcE,GAAIF,EAAcG,IAE7CrhE,iBAAiBihE,EAAc7rE,EAAMkC,GACnC,MAAM0mE,OAACA,EAAMF,OAAEA,GAAUlmE,MACnBqpB,aAACA,EAAYi9C,UAAEA,GAAa5mE,GAC3B/D,EAAG+tE,EAAKt5D,EAAGu5D,GAAON,GACnBvhD,MAACA,EAAKmB,OAAEA,GAAUzrB,EACxB,IAAIqwD,EAAIE,EAAIyb,EAAI1b,EAAIE,EAAIyb,EAoCxB,MAnCe,WAAXvD,GACFlY,EAAK2b,EAAO1gD,EAAS,EACN,SAAXm9C,GACFvY,EAAK6b,EACL3b,EAAKF,EAAKyY,EACVxY,EAAKE,EAAKsY,EACVmD,EAAKzb,EAAKsY,IAEVzY,EAAK6b,EAAM5hD,EACXimC,EAAKF,EAAKyY,EACVxY,EAAKE,EAAKsY,EACVmD,EAAKzb,EAAKsY,GAEZkD,EAAK3b,IAGHE,EADa,SAAXqY,EACGsD,EAAMrgD,IACS,UAAX+8C,EACJsD,EAAM5hD,EAAQuB,EAAei9C,EAE7BtmE,KAAK0nE,OAEG,QAAXxB,GACFpY,EAAK6b,EACL3b,EAAKF,EAAKwY,EACVzY,EAAKE,EAAKuY,EACVkD,EAAKzb,EAAKuY,IAEVxY,EAAK6b,EAAM1gD,EACX+kC,EAAKF,EAAKwY,EACVzY,EAAKE,EAAKuY,EACVkD,EAAKzb,EAAKuY,GAEZmD,EAAK3b,GAEA,CAACD,GAAAA,EAAIE,GAAAA,EAAIyb,GAAAA,EAAI1b,GAAAA,EAAIE,GAAAA,EAAIyb,GAAAA,GAE9BrhE,UAAU2tB,EAAIzwB,EAAK5F,GACjB,MAAM4jB,EAAKtjB,KACL6yC,EAAQvvB,EAAGuvB,MACX7wC,EAAS6wC,EAAM7wC,OACrB,IAAI8iE,EAAWW,EAAc1jE,EAC7B,GAAIC,EAAQ,CACV,MAAM4nE,EAAYtuC,GAAc57B,EAAQ67B,IAAKjY,EAAG3nB,EAAG2nB,EAAGwE,OAQtD,IAPAiO,EAAGp6B,EAAIsrE,GAAY3jD,EAAI5jB,EAAQqnD,WAAYrnD,GAC3C4F,EAAI2mB,UAAY29C,EAAU39C,UAAUvsB,EAAQqnD,YAC5CzhD,EAAI4mB,aAAe,SACnB44C,EAAYz2C,GAAO3uB,EAAQolE,WAC3BW,EAAe/lE,EAAQ+lE,aACvBngE,EAAI0mB,UAAYtsB,EAAQmqE,WACxBvkE,EAAIigB,KAAOu/C,EAAUn9C,OAChB5lB,EAAI,EAAGA,EAAIC,IAAUD,EACxBuD,EAAIknB,SAASqmB,EAAM9wC,GAAI6nE,EAAUjuE,EAAEo6B,EAAGp6B,GAAIo6B,EAAG3lB,EAAI00D,EAAUr/C,WAAa,GACxEsQ,EAAG3lB,GAAK00D,EAAUr/C,WAAaggD,EAC3B1jE,EAAI,IAAMC,IACZ+zB,EAAG3lB,GAAK1Q,EAAQgmE,kBAAoBD,IAK5Cr9D,cAAc9C,EAAKywB,EAAIh0B,EAAG6nE,EAAWlqE,GACnC,MAAM4jB,EAAKtjB,KACL4nE,EAActkD,EAAGskD,YAAY7lE,GAC7B2mE,EAAkBplD,EAAGukD,iBAAiB9lE,IACtC6iE,UAACA,EAASD,SAAEA,GAAYjlE,EACxBmlE,EAAWx2C,GAAO3uB,EAAQmlE,UAC1BiF,EAAS7C,GAAY3jD,EAAI,OAAQ5jB,GACjCqqE,EAAYH,EAAUjuE,EAAEmuE,GACxBE,EAAUpF,EAAYC,EAASp/C,YAAco/C,EAASp/C,WAAam/C,GAAa,EAAI,EACpFqF,EAASl0C,EAAG3lB,EAAI45D,EACtB,GAAItqE,EAAQwqE,cAAe,CACzB,MAAMC,EAAc,CAClB3gD,OAAQ/hB,KAAKgJ,IAAIk0D,EAAUC,GAAa,EACxCt7C,WAAYo/C,EAAgBp/C,WAC5BC,SAAUm/C,EAAgBn/C,SAC1BY,YAAa,GAETmrB,EAAUs0B,EAAUluC,WAAWquC,EAAWpF,GAAYA,EAAW,EACjEpvB,EAAU00B,EAASrF,EAAY,EACrCt/D,EAAI8mB,YAAc1sB,EAAQ0qE,mBAC1B9kE,EAAI0mB,UAAYtsB,EAAQ0qE,mBACxBlhD,GAAU5jB,EAAK6kE,EAAa70B,EAASC,GACrCjwC,EAAI8mB,YAAcw7C,EAAY7iD,YAC9Bzf,EAAI0mB,UAAY47C,EAAY9iD,gBAC5BoE,GAAU5jB,EAAK6kE,EAAa70B,EAASC,OAChC,CACLjwC,EAAI+mB,UAAYu7C,EAAYz9C,aAAe,EAC3C7kB,EAAI8mB,YAAcw7C,EAAY7iD,YAC9Bzf,EAAI8pD,YAAYwY,EAAYhqC,YAAc,IAC1Ct4B,EAAI+pD,eAAiBuY,EAAY/pC,kBAAoB,EACrD,MAAMwsC,EAAST,EAAUluC,WAAWquC,EAAWpF,GACzC2F,EAASV,EAAUluC,WAAWkuC,EAAUnuC,MAAMsuC,EAAW,GAAIpF,EAAW,GACxElI,EAAetuC,GAAcy5C,EAAYnL,cAC3C1gE,OAAO2oB,OAAO+3C,GAAc5J,MAAKx9C,GAAW,IAANA,KACxC/P,EAAIskB,YACJtkB,EAAI0mB,UAAYtsB,EAAQ0qE,mBACxBj9C,GAAmB7nB,EAAK,CACtB3J,EAAG0uE,EACHj6D,EAAG65D,EACH9zD,EAAGwuD,EACHlvD,EAAGmvD,EACHp7C,OAAQizC,IAEVn3D,EAAI4D,OACJ5D,EAAI8kB,SACJ9kB,EAAI0mB,UAAY47C,EAAY9iD,gBAC5Bxf,EAAIskB,YACJuD,GAAmB7nB,EAAK,CACtB3J,EAAG2uE,EACHl6D,EAAG65D,EAAS,EACZ9zD,EAAGwuD,EAAW,EACdlvD,EAAGmvD,EAAY,EACfp7C,OAAQizC,IAEVn3D,EAAI4D,SAEJ5D,EAAI0mB,UAAYtsB,EAAQ0qE,mBACxB9kE,EAAI0pD,SAASqb,EAAQJ,EAAQtF,EAAUC,GACvCt/D,EAAIilE,WAAWF,EAAQJ,EAAQtF,EAAUC,GACzCt/D,EAAI0mB,UAAY47C,EAAY9iD,gBAC5Bxf,EAAI0pD,SAASsb,EAAQL,EAAS,EAAGtF,EAAW,EAAGC,EAAY,IAG/Dt/D,EAAI0mB,UAAY1I,EAAGwkD,gBAAgB/lE,GAErCqG,SAAS2tB,EAAIzwB,EAAK5F,GAChB,MAAM4jB,EAAKtjB,MACLykE,KAACA,GAAQnhD,GACTsiD,YAACA,EAAW4E,UAAEA,EAAS7E,cAAEA,EAAaf,UAAEA,EAASD,SAAEA,GAAYjlE,EAC/DmlE,EAAWx2C,GAAO3uB,EAAQmlE,UAChC,IAAI4F,EAAiB5F,EAASp/C,WAC1BilD,EAAe,EACnB,MAAMd,EAAYtuC,GAAc57B,EAAQ67B,IAAKjY,EAAG3nB,EAAG2nB,EAAGwE,OAChD6iD,EAAiB,SAAS7+C,GAC9BxmB,EAAIknB,SAASV,EAAM89C,EAAUjuE,EAAEo6B,EAAGp6B,EAAI+uE,GAAe30C,EAAG3lB,EAAIq6D,EAAiB,GAC7E10C,EAAG3lB,GAAKq6D,EAAiB7E,GAErBgF,EAA0BhB,EAAU39C,UAAUu+C,GACpD,IAAIpF,EAAUyF,EAAWl/C,EAAO5pB,EAAG8f,EAAG3U,EAAMkb,EAU5C,IATA9iB,EAAI2mB,UAAYu+C,EAChBllE,EAAI4mB,aAAe,SACnB5mB,EAAIigB,KAAOs/C,EAASl9C,OACpBoO,EAAGp6B,EAAIsrE,GAAY3jD,EAAIsnD,EAAyBlrE,GAChD4F,EAAI0mB,UAAYtsB,EAAQorE,UACxBn+D,GAAK2W,EAAGiiD,WAAYoF,GACpBD,EAAe/E,GAA6C,UAA5BiF,EACd,WAAdJ,EAA0B7F,EAAW,EAAI,EAAMA,EAAW,EAC1D,EACC5iE,EAAI,EAAGmL,EAAOu3D,EAAKziE,OAAQD,EAAImL,IAAQnL,EAAG,CAU7C,IATAqjE,EAAWX,EAAK1iE,GAChB8oE,EAAYvnD,EAAGwkD,gBAAgB/lE,GAC/BuD,EAAI0mB,UAAY6+C,EAChBl+D,GAAKy4D,EAASC,OAAQsF,GACtBh/C,EAAQy5C,EAASz5C,MACbg6C,GAAiBh6C,EAAM3pB,SACzBshB,EAAGynD,cAAczlE,EAAKywB,EAAIh0B,EAAG6nE,EAAWlqE,GACxC+qE,EAAiBhjE,KAAKiJ,IAAIm0D,EAASp/C,WAAYm/C,IAE5C/iD,EAAI,EAAGuG,EAAOuD,EAAM3pB,OAAQ6f,EAAIuG,IAAQvG,EAC3C8oD,EAAeh/C,EAAM9J,IACrB4oD,EAAiB5F,EAASp/C,WAE5B9Y,GAAKy4D,EAASE,MAAOqF,GAEvBD,EAAe,EACfD,EAAiB5F,EAASp/C,WAC1B9Y,GAAK2W,EAAGkiD,UAAWmF,GACnB50C,EAAG3lB,GAAKw1D,EAEVx9D,WAAW2tB,EAAIzwB,EAAK5F,GAClB,MAAM4jB,EAAKtjB,KACL0kE,EAASphD,EAAGohD,OACZ1iE,EAAS0iE,EAAO1iE,OACtB,IAAI+iE,EAAYhjE,EAChB,GAAIC,EAAQ,CACV,MAAM4nE,EAAYtuC,GAAc57B,EAAQ67B,IAAKjY,EAAG3nB,EAAG2nB,EAAGwE,OAQtD,IAPAiO,EAAGp6B,EAAIsrE,GAAY3jD,EAAI5jB,EAAQsrE,YAAatrE,GAC5Cq2B,EAAG3lB,GAAK1Q,EAAQmmE,gBAChBvgE,EAAI2mB,UAAY29C,EAAU39C,UAAUvsB,EAAQsrE,aAC5C1lE,EAAI4mB,aAAe,SACnB64C,EAAa12C,GAAO3uB,EAAQqlE,YAC5Bz/D,EAAI0mB,UAAYtsB,EAAQurE,YACxB3lE,EAAIigB,KAAOw/C,EAAWp9C,OACjB5lB,EAAI,EAAGA,EAAIC,IAAUD,EACxBuD,EAAIknB,SAASk4C,EAAO3iE,GAAI6nE,EAAUjuE,EAAEo6B,EAAGp6B,GAAIo6B,EAAG3lB,EAAI20D,EAAWt/C,WAAa,GAC1EsQ,EAAG3lB,GAAK20D,EAAWt/C,WAAa/lB,EAAQomE,eAI9C19D,eAAe2tB,EAAIzwB,EAAK4lE,EAAaxrE,GACnC,MAAM0mE,OAACA,EAAMF,OAAEA,GAAUlmE,MACnBrE,EAACA,EAACyU,EAAEA,GAAK2lB,GACTjO,MAACA,EAAKmB,OAAEA,GAAUiiD,EAClB1hD,EAAS9pB,EAAQ2pB,aACvB/jB,EAAI0mB,UAAYtsB,EAAQolB,gBACxBxf,EAAI8mB,YAAc1sB,EAAQqlB,YAC1Bzf,EAAI+mB,UAAY3sB,EAAQyqB,YACxB7kB,EAAIskB,YACJtkB,EAAIykB,OAAOpuB,EAAI6tB,EAAQpZ,GACR,QAAX81D,GACFlmE,KAAKmrE,UAAUp1C,EAAIzwB,EAAK4lE,EAAaxrE,GAEvC4F,EAAI0kB,OAAOruB,EAAImsB,EAAQ0B,EAAQpZ,GAC/B9K,EAAI8lE,iBAAiBzvE,EAAImsB,EAAO1X,EAAGzU,EAAImsB,EAAO1X,EAAIoZ,GACnC,WAAX08C,GAAkC,UAAXE,GACzBpmE,KAAKmrE,UAAUp1C,EAAIzwB,EAAK4lE,EAAaxrE,GAEvC4F,EAAI0kB,OAAOruB,EAAImsB,EAAO1X,EAAI6Y,EAASO,GACnClkB,EAAI8lE,iBAAiBzvE,EAAImsB,EAAO1X,EAAI6Y,EAAQttB,EAAImsB,EAAQ0B,EAAQpZ,EAAI6Y,GACrD,WAAXi9C,GACFlmE,KAAKmrE,UAAUp1C,EAAIzwB,EAAK4lE,EAAaxrE,GAEvC4F,EAAI0kB,OAAOruB,EAAI6tB,EAAQpZ,EAAI6Y,GAC3B3jB,EAAI8lE,iBAAiBzvE,EAAGyU,EAAI6Y,EAAQttB,EAAGyU,EAAI6Y,EAASO,GACrC,WAAX08C,GAAkC,SAAXE,GACzBpmE,KAAKmrE,UAAUp1C,EAAIzwB,EAAK4lE,EAAaxrE,GAEvC4F,EAAI0kB,OAAOruB,EAAGyU,EAAIoZ,GAClBlkB,EAAI8lE,iBAAiBzvE,EAAGyU,EAAGzU,EAAI6tB,EAAQpZ,GACvC9K,EAAIwkB,YACJxkB,EAAI4D,OACAxJ,EAAQyqB,YAAc,GACxB7kB,EAAI8kB,SAGRhiB,uBAAuB1I,GACrB,MAAM4jB,EAAKtjB,KACLklB,EAAQ5B,EAAGwe,OACX1D,EAAQ9a,EAAGgf,YACX+oC,EAAQjtC,GAASA,EAAMziC,EACvB2vE,EAAQltC,GAASA,EAAMhuB,EAC7B,GAAIi7D,GAASC,EAAO,CAClB,MAAMnxB,EAAWypB,GAAYlkE,EAAQy6C,UAAUp6C,KAAKujB,EAAIA,EAAGwb,QAASxb,EAAG+jD,gBACvE,IAAKltB,EACH,OAEF,MAAM38C,EAAO8lB,EAAGgkD,MAAQ9C,GAAelhD,EAAI5jB,GACrCwpE,EAAkBntE,OAAO2mB,OAAO,GAAIy3B,EAAU72B,EAAGgkD,OACjDV,EAAYH,GAAmBvhD,EAAOxlB,EAASwpE,GAC/C5+C,EAAQq8C,GAAmBjnE,EAASwpE,EAAiBtC,EAAW1hD,GAClEmmD,EAAM1qC,MAAQrW,EAAM3uB,GAAK2vE,EAAM3qC,MAAQrW,EAAMla,IAC/CkT,EAAG8iD,OAASQ,EAAUR,OACtB9iD,EAAG4iD,OAASU,EAAUV,OACtB5iD,EAAGwE,MAAQtqB,EAAKsqB,MAChBxE,EAAG2F,OAASzrB,EAAKyrB,OACjB3F,EAAGokD,OAASvtB,EAASx+C,EACrB2nB,EAAGqkD,OAASxtB,EAAS/pC,EACrBkT,EAAG6oB,qBAAqBpnC,OAAOue,EAAIgH,KAIzCliB,KAAK9C,GACH,MAAMge,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QAAQyyB,WAAW7O,EAAGwF,cACzC,IAAIs+C,EAAU9jD,EAAG8jD,QACjB,IAAKA,EACH,OAEF9jD,EAAGioD,uBAAuB7rE,GAC1B,MAAMwrE,EAAc,CAClBpjD,MAAOxE,EAAGwE,MACVmB,OAAQ3F,EAAG2F,QAEP8M,EAAK,CACTp6B,EAAG2nB,EAAG3nB,EACNyU,EAAGkT,EAAGlT,GAERg3D,EAAU3/D,KAAKC,IAAI0/D,GAAW,KAAO,EAAIA,EACzC,MAAMnpB,EAAU7vB,GAAU1uB,EAAQu+C,SAC5ButB,EAAoBloD,EAAGuvB,MAAM7wC,QAAUshB,EAAGiiD,WAAWvjE,QAAUshB,EAAGmhD,KAAKziE,QAAUshB,EAAGkiD,UAAUxjE,QAAUshB,EAAGohD,OAAO1iE,OACpHtC,EAAQwkD,SAAWsnB,IACrBlmE,EAAI6iB,OACJ7iB,EAAImmE,YAAcrE,EAClB9jD,EAAGssC,eAAe75B,EAAIzwB,EAAK4lE,EAAaxrE,GDpiN9C,SAA+B4F,EAAKI,GAClC,IAAIpH,EAAOotE,EACO,QAAdhmE,GAAqC,QAAdA,IACzBpH,EAAQgH,EAAIujB,OAAOvqB,MACnBotE,EAAW,CACTptE,EAAM67B,iBAAiB,aACvB77B,EAAMqtE,oBAAoB,cAE5BrtE,EAAMsC,YAAY,YAAa8E,EAAW,aAC1CJ,EAAIsmE,kBAAoBF,GC4hNtBG,CAAsBvmE,EAAK5F,EAAQosE,eACnC/1C,EAAG3lB,GAAK6tC,EAAQtzB,IAChBrH,EAAGwsC,UAAU/5B,EAAIzwB,EAAK5F,GACtB4jB,EAAGyoD,SAASh2C,EAAIzwB,EAAK5F,GACrB4jB,EAAG0oD,WAAWj2C,EAAIzwB,EAAK5F,GD7hN7B,SAA8B4F,EAAKomE,QAChB7mD,IAAb6mD,WACKpmE,EAAIsmE,kBACXtmE,EAAIujB,OAAOvqB,MAAMsC,YAAY,YAAa8qE,EAAS,GAAIA,EAAS,KC2hN9DO,CAAqB3mE,EAAK5F,EAAQosE,eAClCxmE,EAAIgjB,WAGRlgB,oBACE,OAAOpI,KAAK8+B,SAAW,GAEzB12B,kBAAkBkzD,EAAgByI,GAChC,MAAMzgD,EAAKtjB,KACLu7D,EAAaj4C,EAAGwb,QAChB59B,EAASo6D,EAAexyD,KAAI,EAAEuE,aAAAA,EAAc3C,MAAAA,MAChD,MAAM+4B,EAAOngB,EAAGwe,OAAO+F,eAAex6B,GACtC,IAAKo2B,EACH,MAAM,IAAI//B,MAAM,kCAAoC2J,GAEtD,MAAO,CACLA,aAAAA,EACAhP,QAASolC,EAAKrkC,KAAKsL,GACnBA,MAAAA,MAGEssC,GAAWjqC,GAAewuD,EAAYr6D,GACtCgrE,EAAkB5oD,EAAG6oD,iBAAiBjrE,EAAQ6iE,IAChD/sB,GAAWk1B,KACb5oD,EAAGwb,QAAU59B,EACboiB,EAAG+jD,eAAiBtD,EACpBzgD,EAAGve,QAAO,IAGdqD,YAAYrC,EAAG21D,GACb,MAAMp4C,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACb67D,EAAaj4C,EAAGwb,SAAW,GACjC,IAAIkY,GAAU,EACV91C,EAAS,GACE,aAAX6E,EAAE9B,OACJ/C,EAASoiB,EAAGwe,OAAOo6B,0BAA0Bn2D,EAAGrG,EAAQsmB,KAAMtmB,EAASg8D,GACnEh8D,EAAQmN,SACV3L,EAAO2L,WAGX,MAAMq/D,EAAkB5oD,EAAG6oD,iBAAiBjrE,EAAQ6E,GAYpD,OAXAixC,EAAU0kB,IAAW3uD,GAAe7L,EAAQq6D,IAAe2Q,EACvDl1B,IACF1zB,EAAGwb,QAAU59B,GACTxB,EAAQwkD,SAAWxkD,EAAQ0pE,YAC7B9lD,EAAG+jD,eAAiB,CAClB1rE,EAAGoK,EAAEpK,EACLyU,EAAGrK,EAAEqK,GAEPkT,EAAGve,QAAO,EAAM22D,KAGb1kB,EAET5uC,iBAAiBlH,EAAQ6E,GACvB,MAAM2hE,OAACA,EAAMC,OAAEA,EAAMjoE,QAAEA,GAAWM,KAC5Bm6C,EAAWypB,GAAYlkE,EAAQy6C,UAAUp6C,KAAKC,KAAMkB,EAAQ6E,GAClE,OAAoB,IAAbo0C,IAAuButB,IAAWvtB,EAASx+C,GAAKgsE,IAAWxtB,EAAS/pC,MAGvEwzD,YAAcA,GA4LtB,SAASwI,GAAe/iC,EAAQgC,EAAK3gC,GACnC,MAAM25C,EAAQhb,EAAOnmC,QAAQmoC,GAC7B,IAAe,IAAXgZ,EACF,MANgB,EAAChb,EAAQgC,EAAK3gC,IAAyB,iBAAR2gC,EAC/ChC,EAAOvlC,KAAKunC,GAAO,EACnBl7B,MAAMk7B,GAAO,KAAO3gC,EAIb2hE,CAAYhjC,EAAQgC,EAAK3gC,GAGlC,OAAO25C,IADMhb,EAAOijC,YAAYjhC,GACR3gC,EAAQ25C,EAGlC,MAAMkoB,WAAsBrlB,GAC1B9+C,YAAY83B,GACVqP,MAAMrP,GACNlgC,KAAKwsE,iBAAc3nD,EACnB7kB,KAAKysE,YAAc,EAErBrkE,MAAMijC,EAAK3gC,GACT,GAAIkB,GAAcy/B,GAChB,OAAO,KAET,MAAMhC,EAASrpC,KAAKspC,YAGpB,MAde,EAAC5+B,EAAOgG,IAAkB,OAAVhG,EAAiB,KAAOoH,GAAYrK,KAAKkI,MAAMjF,GAAQ,EAAGgG,GAclFi2C,CAFPj8C,EAAQyB,SAASzB,IAAU2+B,EAAO3+B,KAAW2gC,EAAM3gC,EAC/C0hE,GAAe/iC,EAAQgC,EAAK/+B,GAAe5B,EAAO2gC,IAC7BhC,EAAOrnC,OAAS,GAE3CoG,sBACE,MAAMkb,EAAKtjB,MACLmqC,WAACA,EAAUC,WAAEA,GAAc9mB,EAAG+mB,gBACpC,IAAI55B,IAACA,EAAGC,IAAEA,GAAO4S,EAAGilC,WAAU,GACJ,UAAtBjlC,EAAG5jB,QAAQ48B,SACR6N,IACH15B,EAAM,GAEH25B,IACH15B,EAAM4S,EAAGgmB,YAAYtnC,OAAS,IAGlCshB,EAAG7S,IAAMA,EACT6S,EAAG5S,IAAMA,EAEXtI,aACE,MAAMkb,EAAKtjB,KACLyQ,EAAM6S,EAAG7S,IACTC,EAAM4S,EAAG5S,IACT4hC,EAAShvB,EAAG5jB,QAAQ4yC,OACpBzE,EAAQ,GACd,IAAIxE,EAAS/lB,EAAGgmB,YAChBD,EAAkB,IAAR54B,GAAaC,IAAQ24B,EAAOrnC,OAAS,EAAKqnC,EAASA,EAAOnlC,MAAMuM,EAAKC,EAAM,GACrF4S,EAAGmpD,YAAchlE,KAAKiJ,IAAI24B,EAAOrnC,QAAUswC,EAAS,EAAI,GAAI,GAC5DhvB,EAAGkpD,YAAclpD,EAAG7S,KAAO6hC,EAAS,GAAM,GAC1C,IAAK,IAAInyC,EAAQsQ,EAAKtQ,GAASuQ,EAAKvQ,IAClC0tC,EAAM/pC,KAAK,CAAC3D,MAAAA,IAEd,OAAO0tC,EAETzlC,iBAAiBjI,GACf,MACMkpC,EADKrpC,KACOspC,YAClB,OAAInpC,GAAS,GAAKA,EAAQkpC,EAAOrnC,OACxBqnC,EAAOlpC,GAETA,EAETiI,YACE,MAAMkb,EAAKtjB,KACXuvC,MAAMvN,YACD1e,EAAGqsB,iBACNrsB,EAAG02B,gBAAkB12B,EAAG02B,gBAG5B5xC,iBAAiBjI,GACf,MAAMmjB,EAAKtjB,KAIX,MAHqB,iBAAVG,IACTA,EAAQmjB,EAAGkmB,MAAMrpC,IAEF,OAAVA,EAAiBypC,IAAMtmB,EAAGqvB,oBAAoBxyC,EAAQmjB,EAAGkpD,aAAelpD,EAAGmpD,aAEpFrkE,gBAAgBsC,GACd,MACMmjC,EADK7tC,KACM6tC,MACjB,OAAInjC,EAAQ,GAAKA,EAAQmjC,EAAM7rC,OAAS,EAC/B,KAHEhC,KAKD4tC,iBAAiBC,EAAMnjC,GAAOvK,OAE1CiI,iBAAiBqgB,GACf,MAAMnF,EAAKtjB,KACX,OAAOyH,KAAKkI,MAAM2T,EAAGkpD,YAAclpD,EAAGopD,mBAAmBjkD,GAASnF,EAAGmpD,aAEvErkE,eACE,OAAOpI,KAAK4qB,QAUhB,SAAS+hD,GAAgBC,EAAmBC,GAC1C,MAAMh/B,EAAQ,IAERvR,OAACA,EAAM96B,KAAEA,EAAIiP,IAAEA,EAAGC,IAAEA,EAAGo8D,UAAEA,EAAS3wC,MAAEA,EAAK4wC,SAAEA,EAAQC,UAAEA,EAASC,cAAEA,GAAiBL,EACjFrzB,EAAO/3C,GAAQ,EACf0rE,EAAYH,EAAW,GACtBt8D,IAAK08D,EAAMz8D,IAAK08D,GAAQP,EACzB1iC,GAAcv+B,GAAc6E,GAC5B25B,GAAcx+B,GAAc8E,GAC5B28D,GAAgBzhE,GAAcuwB,GAC9BmxC,GAAcF,EAAOD,IAASH,EAAY,GAChD,IACIntC,EAAQ0tC,EAASC,EAASC,EAD1Bn6B,EAAU9jC,IAAS49D,EAAOD,GAAQD,EAAY3zB,GAAQA,EAE1D,GAAIjG,EAXgB,QAWUnJ,IAAeC,EAC3C,MAAO,CAAC,CAACjqC,MAAOgtE,GAAO,CAAChtE,MAAOitE,IAEjCK,EAAYhmE,KAAK88C,KAAK6oB,EAAO95B,GAAW7rC,KAAKsI,MAAMo9D,EAAO75B,GACtDm6B,EAAYP,IACd55B,EAAU9jC,GAAQi+D,EAAYn6B,EAAU45B,EAAY3zB,GAAQA,GAEzD3tC,GAAckhE,KACjBjtC,EAASp4B,KAAKqI,IAAI,GAAIg9D,GACtBx5B,EAAU7rC,KAAK88C,KAAKjR,EAAUzT,GAAUA,GAE3B,UAAXvD,GACFixC,EAAU9lE,KAAKsI,MAAMo9D,EAAO75B,GAAWA,EACvCk6B,EAAU/lE,KAAK88C,KAAK6oB,EAAO95B,GAAWA,IAEtCi6B,EAAUJ,EACVK,EAAUJ,GAERjjC,GAAcC,GAAc5oC,GD90RlC,SAAqB7F,EAAG0U,GACtB,MAAMq9D,EAAUjmE,KAAKkI,MAAMhU,GAC3B,OAAS+xE,EAAUr9D,GAAY1U,GAAQ+xE,EAAUr9D,GAAY1U,EC40RrBgyE,EAAaj9D,EAAMD,GAAOjP,EAAM8xC,EAAU,MAChFm6B,EAAYhmE,KAAKkI,MAAMlI,KAAKgJ,KAAKC,EAAMD,GAAO6iC,EAASy5B,IACvDz5B,GAAW5iC,EAAMD,GAAOg9D,EACxBF,EAAU98D,EACV+8D,EAAU98D,GACD28D,GACTE,EAAUpjC,EAAa15B,EAAM88D,EAC7BC,EAAUpjC,EAAa15B,EAAM88D,EAC7BC,EAAYtxC,EAAQ,EACpBmX,GAAWk6B,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWj6B,EAEhCm6B,EADE79D,GAAa69D,EAAWhmE,KAAKkI,MAAM89D,GAAYn6B,EAAU,KAC/C7rC,KAAKkI,MAAM89D,GAEXhmE,KAAK88C,KAAKkpB,IAG1B,MAAMG,EAAgBnmE,KAAKiJ,IACzBK,GAAeuiC,GACfviC,GAAew8D,IAEjB1tC,EAASp4B,KAAKqI,IAAI,GAAIlE,GAAckhE,GAAac,EAAgBd,GACjES,EAAU9lE,KAAKkI,MAAM49D,EAAU1tC,GAAUA,EACzC2tC,EAAU/lE,KAAKkI,MAAM69D,EAAU3tC,GAAUA,EACzC,IAAIhe,EAAI,EAcR,IAbIsoB,IACE8iC,GAAiBM,IAAY98D,GAC/Bo9B,EAAM/pC,KAAK,CAAC3D,MAAOsQ,IACf88D,EAAU98D,GACZoR,IAEEjS,GAAanI,KAAKkI,OAAO49D,EAAU1rD,EAAIyxB,GAAWzT,GAAUA,EAAQpvB,EAAKo9D,GAAkBp9D,EAAK68D,EAAYV,KAC9G/qD,KAEO0rD,EAAU98D,GACnBoR,KAGGA,EAAI4rD,IAAa5rD,EACtBgsB,EAAM/pC,KAAK,CAAC3D,MAAOsH,KAAKkI,OAAO49D,EAAU1rD,EAAIyxB,GAAWzT,GAAUA,IAWpE,OATIuK,GAAc6iC,GAAiBO,IAAY98D,EACzCd,GAAai+B,EAAMA,EAAM7rC,OAAS,GAAG7B,MAAOuQ,EAAKm9D,GAAkBn9D,EAAK48D,EAAYV,IACtF/+B,EAAMA,EAAM7rC,OAAS,GAAG7B,MAAQuQ,EAEhCm9B,EAAM/pC,KAAK,CAAC3D,MAAOuQ,IAEX05B,GAAcojC,IAAY98D,GACpCm9B,EAAM/pC,KAAK,CAAC3D,MAAOqtE,IAEd3/B,EAET,SAASggC,GAAkB1tE,EAAOmtE,GAAYz+B,WAACA,EAAU2W,YAAEA,IACzD,MAAM/7B,EAAM9Y,GAAU60C,GAChBljC,GAASusB,EAAapnC,KAAKwK,IAAIwX,GAAOhiB,KAAKyL,IAAIuW,KAAS,KACxDznB,EAAS,IAAOsrE,GAAc,GAAKntE,GAAO6B,OAChD,OAAOyF,KAAKgJ,IAAI68D,EAAahrD,EAAOtgB,GA/FtCuqE,GAAc5gE,GAAK,WACnB4gE,GAAc5nD,SAAW,CACvBkpB,MAAO,CACL5oC,SAAUsnE,GAAcjhE,UAAUo/B,mBA8FtC,MAAMojC,WAAwB5mB,GAC5B9+C,YAAY83B,GACVqP,MAAMrP,GACNlgC,KAAK2H,WAAQkd,EACb7kB,KAAK4H,SAAMid,EACX7kB,KAAKwsE,iBAAc3nD,EACnB7kB,KAAK+tE,eAAYlpD,EACjB7kB,KAAKysE,YAAc,EAErBrkE,MAAMijC,EAAK3gC,GACT,OAAIkB,GAAcy/B,KAGE,iBAARA,GAAoBA,aAAen/B,UAAYC,UAAUk/B,GAF5D,MAKDA,EAEVjjC,yBACE,MAAMkb,EAAKtjB,MACLyyC,YAACA,GAAenvB,EAAG5jB,SACnByqC,WAACA,EAAUC,WAAEA,GAAc9mB,EAAG+mB,gBACpC,IAAI55B,IAACA,EAAGC,IAAEA,GAAO4S,EACjB,MAAM0qD,EAAS34D,GAAM5E,EAAM05B,EAAa15B,EAAM4E,EACxC44D,EAAS54D,GAAM3E,EAAM05B,EAAa15B,EAAM2E,EAC9C,GAAIo9B,EAAa,CACf,MAAMy7B,EAAU3+D,GAAKkB,GACf09D,EAAU5+D,GAAKmB,GACjBw9D,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAGX,GAAIv9D,IAAQC,EAAK,CACf,IAAI4hC,EAAS,GACT5hC,GAAOxE,OAAOkiE,kBAAoB39D,GAAOvE,OAAOmiE,oBAClD/7B,EAAS7qC,KAAKC,IAAU,IAANgJ,IAEpBu9D,EAAOv9D,EAAM4hC,GACRG,GACHu7B,EAAOv9D,EAAM6hC,GAGjBhvB,EAAG7S,IAAMA,EACT6S,EAAG5S,IAAMA,EAEXtI,eACE,MAAMkb,EAAKtjB,KACLujD,EAAWjgC,EAAG5jB,QAAQmuC,MAC5B,IACIk/B,GADAtpB,cAACA,EAAa6qB,SAAEA,GAAY/qB,EAWhC,OATI+qB,EACFvB,EAAWtlE,KAAK88C,KAAKjhC,EAAG5S,IAAM49D,GAAY7mE,KAAKsI,MAAMuT,EAAG7S,IAAM69D,GAAY,GAE1EvB,EAAWzpD,EAAGirD,mBACd9qB,EAAgBA,GAAiB,IAE/BA,IACFspB,EAAWtlE,KAAKgJ,IAAIgzC,EAAespB,IAE9BA,EAET3kE,mBACE,OAAO8D,OAAO+C,kBAEhB7G,aACE,MAAMkb,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QACV6jD,EAAW73B,EAAKmiB,MACtB,IAAIk/B,EAAWzpD,EAAGkrD,eAClBzB,EAAWtlE,KAAKiJ,IAAI,EAAGq8D,GACvB,MAcMl/B,EAAQ8+B,GAdkB,CAC9BI,SAAAA,EACAzwC,OAAQ5Q,EAAK4Q,OACb7rB,IAAKib,EAAKjb,IACVC,IAAKgb,EAAKhb,IACVo8D,UAAWvpB,EAASupB,UACpBtrE,KAAM+hD,EAAS+qB,SACfnyC,MAAOonB,EAASpnB,MAChB6wC,UAAW1pD,EAAGmrD,aACd5/B,WAAYvrB,EAAGqsB,eACf6V,YAAajC,EAASiC,aAAe,EACrCynB,eAA0C,IAA3B1pB,EAAS0pB,eAER3pD,EAAGmkC,QAAUnkC,GAa/B,MAXoB,UAAhBoI,EAAK4Q,QACPhsB,GAAmBu9B,EAAOvqB,EAAI,SAE5BoI,EAAK7e,SACPghC,EAAMhhC,UACNyW,EAAG3b,MAAQ2b,EAAG5S,IACd4S,EAAG1b,IAAM0b,EAAG7S,MAEZ6S,EAAG3b,MAAQ2b,EAAG7S,IACd6S,EAAG1b,IAAM0b,EAAG5S,KAEPm9B,EAETzlC,YACE,MAAMkb,EAAKtjB,KACL6tC,EAAQvqB,EAAGuqB,MACjB,IAAIlmC,EAAQ2b,EAAG7S,IACX7I,EAAM0b,EAAG5S,IAEb,GADA6+B,MAAMvN,YACF1e,EAAG5jB,QAAQ4yC,QAAUzE,EAAM7rC,OAAQ,CACrC,MAAMswC,GAAU1qC,EAAMD,GAASF,KAAKiJ,IAAIm9B,EAAM7rC,OAAS,EAAG,GAAK,EAC/D2F,GAAS2qC,EACT1qC,GAAO0qC,EAEThvB,EAAGkpD,YAAc7kE,EACjB2b,EAAGyqD,UAAYnmE,EACf0b,EAAGmpD,YAAc7kE,EAAMD,EAEzBS,iBAAiBjI,GACf,OAAOw6B,GAAax6B,EAAOH,KAAKklB,MAAMxlB,QAAQm7B,SAIlD,MAAM6zC,WAAoBZ,GACxB1lE,sBACE,MAAMkb,EAAKtjB,MACLyQ,IAACA,EAAGC,IAAEA,GAAO4S,EAAGilC,WAAU,GAChCjlC,EAAG7S,IAAMxE,GAAewE,GAAOA,EAAM,EACrC6S,EAAG5S,IAAMzE,GAAeyE,GAAOA,EAAM,EACrC4S,EAAGqrD,yBAELvmE,mBACE,MAAMkb,EAAKtjB,KACL6uC,EAAavrB,EAAGqsB,eAChB3tC,EAAS6sC,EAAavrB,EAAGwE,MAAQxE,EAAG2F,OACpCu8B,EAAc70C,GAAU2S,EAAG5jB,QAAQmuC,MAAM2X,aACzCljC,GAASusB,EAAapnC,KAAKwK,IAAIuzC,GAAe/9C,KAAKyL,IAAIsyC,KAAiB,KACxE6G,EAAW/oC,EAAGopC,wBAAwB,GAC5C,OAAOjlD,KAAK88C,KAAKviD,EAASyF,KAAKgJ,IAAI,GAAI47C,EAAS5mC,WAAanD,IAE/Dla,iBAAiBjI,GACf,OAAiB,OAAVA,EAAiBypC,IAAM5pC,KAAK2yC,oBAAoBxyC,EAAQH,KAAKwsE,aAAexsE,KAAKysE,aAE1FrkE,iBAAiBqgB,GACf,OAAOzoB,KAAKwsE,YAAcxsE,KAAK0sE,mBAAmBjkD,GAASzoB,KAAKysE,aAUpE,SAASmC,GAAQC,GAEf,OAAkB,IADHA,EAAWpnE,KAAKqI,IAAI,GAAIrI,KAAKsI,MAAMT,GAAMu/D,KAR1DH,GAAY/iE,GAAK,SACjB+iE,GAAY/pD,SAAW,CACrBkpB,MAAO,CACL5oC,SAAUo+C,GAAMV,WAAWS,UA8B/B,MAAM0rB,WAAyB5nB,GAC7B9+C,YAAY83B,GACVqP,MAAMrP,GACNlgC,KAAK2H,WAAQkd,EACb7kB,KAAK4H,SAAMid,EACX7kB,KAAKwsE,iBAAc3nD,EACnB7kB,KAAKysE,YAAc,EAErBrkE,MAAMijC,EAAK3gC,GACT,MAAMvK,EAAQ2tE,GAAgBxiE,UAAUk+B,MAAMh+B,MAAMxL,KAAM,CAACqrC,EAAK3gC,IAChE,GAAc,IAAVvK,EAIJ,OAAO8L,GAAe9L,IAAUA,EAAQ,EAAIA,EAAQ,KAHlDH,KAAK+uE,OAAQ,EAKjB3mE,sBACE,MAAMkb,EAAKtjB,MACLyQ,IAACA,EAAGC,IAAEA,GAAO4S,EAAGilC,WAAU,GAChCjlC,EAAG7S,IAAMxE,GAAewE,GAAOhJ,KAAKiJ,IAAI,EAAGD,GAAO,KAClD6S,EAAG5S,IAAMzE,GAAeyE,GAAOjJ,KAAKiJ,IAAI,EAAGA,GAAO,KAC9C4S,EAAG5jB,QAAQ+yC,cACbnvB,EAAGyrD,OAAQ,GAEbzrD,EAAGqrD,yBAELvmE,yBACE,MAAMkb,EAAKtjB,MACLmqC,WAACA,EAAUC,WAAEA,GAAc9mB,EAAG+mB,gBACpC,IAAI55B,EAAM6S,EAAG7S,IACTC,EAAM4S,EAAG5S,IACb,MAAMs9D,EAAS34D,GAAM5E,EAAM05B,EAAa15B,EAAM4E,EACxC44D,EAAS54D,GAAM3E,EAAM05B,EAAa15B,EAAM2E,EACxC25D,EAAM,CAAC35D,EAAGzM,IAAMnB,KAAKqI,IAAI,GAAIrI,KAAKsI,MAAMT,GAAM+F,IAAMzM,GACtD6H,IAAQC,IACND,GAAO,GACTu9D,EAAO,GACPC,EAAO,MAEPD,EAAOgB,EAAIv+D,GAAM,IACjBw9D,EAAOe,EAAIt+D,EAAK,MAGhBD,GAAO,GACTu9D,EAAOgB,EAAIt+D,GAAM,IAEfA,GAAO,GACTu9D,EAAOe,EAAIv+D,EAAK,IAEd6S,EAAGyrD,OAASzrD,EAAG7S,MAAQ6S,EAAG2kC,eAAiBx3C,IAAQu+D,EAAI1rD,EAAG7S,IAAK,IACjEu9D,EAAOgB,EAAIv+D,GAAM,IAEnB6S,EAAG7S,IAAMA,EACT6S,EAAG5S,IAAMA,EAEXtI,aACE,MAAMkb,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QAKVmuC,EApFV,SAAuB++B,EAAmBC,GACxC,MAAMoC,EAASxnE,KAAKsI,MAAMT,GAAMu9D,EAAUn8D,MACpCw+D,EAAiBznE,KAAK88C,KAAKsoB,EAAUn8D,IAAMjJ,KAAKqI,IAAI,GAAIm/D,IACxDphC,EAAQ,GACd,IAAIghC,EAAUziE,GAAgBwgE,EAAkBn8D,IAAKhJ,KAAKqI,IAAI,GAAIrI,KAAKsI,MAAMT,GAAMu9D,EAAUp8D,QACzFu+D,EAAMvnE,KAAKsI,MAAMT,GAAMu/D,IACvBM,EAAc1nE,KAAKsI,MAAM8+D,EAAUpnE,KAAKqI,IAAI,GAAIk/D,IAChDlC,EAAYkC,EAAM,EAAIvnE,KAAKqI,IAAI,GAAIrI,KAAKC,IAAIsnE,IAAQ,EACxD,GACEnhC,EAAM/pC,KAAK,CAAC3D,MAAO0uE,EAAS5qB,MAAO2qB,GAAQC,OACzCM,EACkB,KAAhBA,IACFA,EAAc,IACZH,EACFlC,EAAYkC,GAAO,EAAI,EAAIlC,GAE7B+B,EAAUpnE,KAAKkI,MAAMw/D,EAAc1nE,KAAKqI,IAAI,GAAIk/D,GAAOlC,GAAaA,QAC7DkC,EAAMC,GAAWD,IAAQC,GAAUE,EAAcD,GAC1D,MAAME,EAAWhjE,GAAgBwgE,EAAkBl8D,IAAKm+D,GAExD,OADAhhC,EAAM/pC,KAAK,CAAC3D,MAAOivE,EAAUnrB,MAAO2qB,GAAQC,KACrChhC,EAgESwhC,CAJY,CACxB5+D,IAAK6S,EAAGykC,SACRr3C,IAAK4S,EAAGwkC,UAEqCxkC,GAY/C,MAXoB,UAAhBoI,EAAK4Q,QACPhsB,GAAmBu9B,EAAOvqB,EAAI,SAE5BoI,EAAK7e,SACPghC,EAAMhhC,UACNyW,EAAG3b,MAAQ2b,EAAG5S,IACd4S,EAAG1b,IAAM0b,EAAG7S,MAEZ6S,EAAG3b,MAAQ2b,EAAG7S,IACd6S,EAAG1b,IAAM0b,EAAG5S,KAEPm9B,EAETzlC,iBAAiBjI,GACf,YAAiB0kB,IAAV1kB,EAAsB,IAAMw6B,GAAax6B,EAAOH,KAAKklB,MAAMxlB,QAAQm7B,QAE5EzyB,YACE,MAAMkb,EAAKtjB,KACL2H,EAAQ2b,EAAG7S,IACjB8+B,MAAMvN,YACN1e,EAAGkpD,YAAcl9D,GAAM3H,GACvB2b,EAAGmpD,YAAcn9D,GAAMgU,EAAG5S,KAAOpB,GAAM3H,GAEzCS,iBAAiBjI,GACf,MAAMmjB,EAAKtjB,KAIX,YAHc6kB,IAAV1kB,GAAiC,IAAVA,IACzBA,EAAQmjB,EAAG7S,KAEC,OAAVtQ,GAAkBgQ,MAAMhQ,GACnBypC,IAEFtmB,EAAGqvB,mBAAmBxyC,IAAUmjB,EAAG7S,IACtC,GACCnB,GAAMnP,GAASmjB,EAAGkpD,aAAelpD,EAAGmpD,aAE3CrkE,iBAAiBqgB,GACf,MAAMnF,EAAKtjB,KACL4sD,EAAUtpC,EAAGopD,mBAAmBjkD,GACtC,OAAOhhB,KAAKqI,IAAI,GAAIwT,EAAGkpD,YAAc5f,EAAUtpC,EAAGmpD,cAatD,SAAS6C,GAAsB5jD,GAC7B,MAAM63B,EAAW73B,EAAKmiB,MACtB,GAAI0V,EAAS7K,SAAWhtB,EAAKgtB,QAAS,CACpC,MAAMuF,EAAU7vB,GAAUm1B,EAAS4C,iBACnC,OAAO75C,GAAei3C,EAASh+B,MAAQg+B,EAASh+B,KAAK/nB,KAAMmnB,GAASY,KAAK/nB,MAAQygD,EAAQh1B,OAE3F,OAAO,EAST,SAASsmD,GAAgBh+D,EAAOhD,EAAK/Q,EAAMiT,EAAKC,GAC9C,OAAIa,IAAUd,GAAOc,IAAUb,EACtB,CACL/I,MAAO4G,EAAO/Q,EAAO,EACrBoK,IAAK2G,EAAO/Q,EAAO,GAEZ+T,EAAQd,GAAOc,EAAQb,EACzB,CACL/I,MAAO4G,EAAM/Q,EACboK,IAAK2G,GAGF,CACL5G,MAAO4G,EACP3G,IAAK2G,EAAM/Q,GAGf,SAASgyE,GAAmBhpD,GAC1B,MAAMipD,EAAiB,CACrBllE,EAAG,EACHjE,EAAGkgB,EAAMsB,MACTnmB,EAAG,EACHnF,EAAGgqB,EAAMyC,OAASzC,EAAM4gC,YAEpBsoB,EAAiB,GACjB9kB,EAAa,GACb3M,EAAU,GACV0xB,EAAanpD,EAAM8iB,YAAYtnC,OACrC,IAAK,IAAID,EAAI,EAAGA,EAAI4tE,EAAY5tE,IAAK,CACnC,MAAM2pB,EAAOlF,EAAM9mB,QAAQk5C,YAAYzmB,WAAW3L,EAAMopD,qBAAqB7tE,IAC7Ek8C,EAAQl8C,GAAK2pB,EAAKuyB,QAClB,MAAMjF,EAAgBxyB,EAAMqpD,iBAAiB9tE,EAAGykB,EAAMspD,YAAc7xB,EAAQl8C,IACtEguE,EAAS1hD,GAAO3C,EAAKnG,MACrByqD,GAxCgB1qE,EAwCYkhB,EAAMlhB,IAxCbigB,EAwCkBwqD,EAvC/CtlC,EAAQ5+B,GAD2B4+B,EAwCoBjkB,EAAMypD,aAAaluE,IAvCjD0oC,EAAQ,CAACA,GAC3B,CACLt0B,EAAG4R,GAAaziB,EAAKigB,EAAKoC,OAAQ8iB,GAClCh1B,EAAGg1B,EAAMzoC,OAASujB,EAAKE,aAqCvBmlC,EAAW7oD,GAAKiuE,EAChB,MAAMzkB,EAAe/kC,EAAM4xB,cAAcr2C,GACnCwP,EAAQV,GAAU06C,GAClB2kB,EAAUX,GAAgBh+D,EAAOynC,EAAcr9C,EAAGq0E,EAAS75D,EAAG,EAAG,KACjEg6D,EAAUZ,GAAgBh+D,EAAOynC,EAAc5oC,EAAG4/D,EAASv6D,EAAG,GAAI,KACpEy6D,EAAQvoE,MAAQ8nE,EAAellE,IACjCklE,EAAellE,EAAI2lE,EAAQvoE,MAC3B+nE,EAAenlE,EAAIghD,GAEjB2kB,EAAQtoE,IAAM6nE,EAAenpE,IAC/BmpE,EAAenpE,EAAI4pE,EAAQtoE,IAC3B8nE,EAAeppE,EAAIilD,GAEjB4kB,EAAQxoE,MAAQ8nE,EAAe9tE,IACjC8tE,EAAe9tE,EAAIwuE,EAAQxoE,MAC3B+nE,EAAe/tE,EAAI4pD,GAEjB4kB,EAAQvoE,IAAM6nE,EAAejzE,IAC/BizE,EAAejzE,EAAI2zE,EAAQvoE,IAC3B8nE,EAAelzE,EAAI+uD,GA5DzB,IAA0BjmD,EAAKigB,EAAMklB,EA+DnCjkB,EAAM4pD,eAAe5pD,EAAMspD,YAAaL,EAAgBC,GACxDlpD,EAAM6pD,iBAER,SAA8B7pD,EAAOokC,EAAY3M,GAC/C,MAAMruB,EAAQ,GACR+/C,EAAanpD,EAAM8iB,YAAYtnC,OAC/B0pB,EAAOlF,EAAM9mB,QACb4wE,EAAqBhB,GAAsB5jD,GAC3C6kD,EAAgB/pD,EAAMgyB,8BAA8B9sB,EAAKmiB,MAAMhhC,QAAU2Z,EAAM/V,IAAM+V,EAAM9V,KACjG,IAAK,IAAI3O,EAAI,EAAGA,EAAI4tE,EAAY5tE,IAAK,CACnC,MAAMyuE,EAAe,IAANzuE,EAAUuuE,EAAqB,EAAI,EAC5CG,EAAqBjqD,EAAMqpD,iBAAiB9tE,EAAGwuE,EAAgBC,EAAQvyB,EAAQl8C,IAC/EwP,EAAQV,GAAU2V,EAAM4xB,cAAcr2C,IACtCvE,EAAOotD,EAAW7oD,GAClBqO,EAAIsgE,GAAUD,EAAmBrgE,EAAG5S,EAAKiY,EAAGlE,GAC5C0a,EAAY0kD,GAAqBp/D,GACjCkZ,EAAOmmD,GAAiBH,EAAmB90E,EAAG6B,EAAK2Y,EAAG8V,GAC5D2D,EAAM9rB,KAAK,CACTnI,EAAG80E,EAAmB90E,EACtByU,EAAAA,EACA6b,UAAAA,EACAxB,KAAAA,EACAE,IAAKva,EACLsa,MAAOD,EAAOjtB,EAAK2Y,EACnByU,OAAQxa,EAAI5S,EAAKiY,IAGrB,OAAOma,EA1BkBihD,CAAqBrqD,EAAOokC,EAAY3M,GA4BnE,SAAS0yB,GAAqBp/D,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,QAET,SAASq/D,GAAiBj1E,EAAGwa,EAAGzK,GAM9B,MALc,UAAVA,EACF/P,GAAKwa,EACc,WAAVzK,IACT/P,GAAMwa,EAAI,GAELxa,EAET,SAAS+0E,GAAUtgE,EAAGqF,EAAGlE,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBnB,GAAMqF,EAAI,GACDlE,EAAQ,KAAOA,EAAQ,MAChCnB,GAAKqF,GAEArF,EA4BT,SAAS0gE,GAAetqD,EAAOgD,EAAQmvB,EAAUo4B,GAC/C,MAAMzrE,IAACA,GAAOkhB,EACd,GAAImyB,EACFrzC,EAAIukB,IAAIrD,EAAMyxB,QAASzxB,EAAM0xB,QAAS1uB,EAAQ,EAAG1a,QAC5C,CACL,IAAIkqC,EAAgBxyB,EAAMqpD,iBAAiB,EAAGrmD,GAC9ClkB,EAAIykB,OAAOivB,EAAcr9C,EAAGq9C,EAAc5oC,GAC1C,IAAK,IAAIrO,EAAI,EAAGA,EAAIgvE,EAAYhvE,IAC9Bi3C,EAAgBxyB,EAAMqpD,iBAAiB9tE,EAAGynB,GAC1ClkB,EAAI0kB,OAAOgvB,EAAcr9C,EAAGq9C,EAAc5oC,IAsBhD,SAAS4gE,GAAaC,GACpB,OAAOhhE,GAASghE,GAASA,EAAQ,EAhMnCnC,GAAiBnjE,GAAK,cACtBmjE,GAAiBnqD,SAAW,CAC1BkpB,MAAO,CACL5oC,SAAUo+C,GAAMV,WAAWuuB,YAC3BjtB,MAAO,CACLC,SAAS,KAoMf,MAAMitB,WAA0BrD,GAC9B1lE,YAAY83B,GACVqP,MAAMrP,GACNlgC,KAAKi4C,aAAUpzB,EACf7kB,KAAKk4C,aAAUrzB,EACf7kB,KAAK8vE,iBAAcjrD,EACnB7kB,KAAKiwE,aAAe,GACpBjwE,KAAKqwE,iBAAmB,GAE1BjoE,gBACE,MAAMkb,EAAKtjB,KACXsjB,EAAGwE,MAAQxE,EAAGiJ,SACdjJ,EAAG2F,OAAS3F,EAAGwV,UACfxV,EAAG8jC,WAAakoB,GAAsBhsD,EAAG5jB,SAAW,EACpD4jB,EAAG20B,QAAUxwC,KAAKsI,MAAMuT,EAAGwE,MAAQ,GACnCxE,EAAG40B,QAAUzwC,KAAKsI,OAAOuT,EAAG2F,OAAS3F,EAAG8jC,YAAc,GACtD9jC,EAAGwsD,YAAcroE,KAAKgJ,IAAI6S,EAAG2F,OAAS3F,EAAG8jC,WAAY9jC,EAAGwE,OAAS,EAEnE1f,sBACE,MAAMkb,EAAKtjB,MACLyQ,IAACA,EAAGC,IAAEA,GAAO4S,EAAGilC,WAAU,GAChCjlC,EAAG7S,IAAMxE,GAAewE,KAASN,MAAMM,GAAOA,EAAM,EACpD6S,EAAG5S,IAAMzE,GAAeyE,KAASP,MAAMO,GAAOA,EAAM,EACpD4S,EAAGqrD,yBAELvmE,mBACE,OAAOX,KAAK88C,KAAKvkD,KAAK8vE,YAAcR,GAAsBtvE,KAAKN,UAEjE0I,mBAAmBylC,GACjB,MAAMvqB,EAAKtjB,KACX8tE,GAAgBxiE,UAAU0gD,mBAAmBjsD,KAAKujB,EAAIuqB,GACtDvqB,EAAG2sD,aAAe3sD,EAAGgmB,YAAYxgC,KAAI,CAAC3I,EAAOuK,KAC3C,MAAM+/B,EAAQxlC,GAASqe,EAAG5jB,QAAQk5C,YAAY3zC,SAAU,CAAC9E,EAAOuK,GAAQ4Y,GACxE,OAAOmnB,GAAmB,IAAVA,EAAcA,EAAQ,MAG1CriC,MACE,MAAMkb,EAAKtjB,KACL0rB,EAAOpI,EAAG5jB,QACZgsB,EAAKgtB,SAAWhtB,EAAKktB,YAAYF,QACnC82B,GAAmBlsD,GAEnBA,EAAG8tD,eAAe,EAAG,EAAG,EAAG,GAG/BhpE,eAAeipE,EAAuB5B,EAAgBC,GACpD,MAAMpsD,EAAKtjB,KACX,IAAIsxE,EAAsB7B,EAAellE,EAAI9C,KAAKwK,IAAIy9D,EAAenlE,GACjEgnE,EAAuB9pE,KAAKiJ,IAAI++D,EAAenpE,EAAIgd,EAAGwE,MAAO,GAAKrgB,KAAKwK,IAAIy9D,EAAeppE,GAC1FkrE,GAAsB/B,EAAe9tE,EAAI8F,KAAKyL,IAAIw8D,EAAe/tE,GACjE8vE,GAAyBhqE,KAAKiJ,IAAI++D,EAAejzE,GAAK8mB,EAAG2F,OAAS3F,EAAG8jC,YAAa,GAAK3/C,KAAKyL,IAAIw8D,EAAelzE,GACnH80E,EAAsBN,GAAaM,GACnCC,EAAuBP,GAAaO,GACpCC,EAAqBR,GAAaQ,GAClCC,EAAwBT,GAAaS,GACrCnuD,EAAGwsD,YAAcroE,KAAKiJ,IAAI2gE,EAAwB,EAAG5pE,KAAKgJ,IACxDhJ,KAAKsI,MAAMshE,GAAyBC,EAAsBC,GAAwB,GAClF9pE,KAAKsI,MAAMshE,GAAyBG,EAAqBC,GAAyB,KACpFnuD,EAAG8tD,eAAeE,EAAqBC,EAAsBC,EAAoBC,GAEnFrpE,eAAespE,EAAcC,EAAeC,EAAaC,GACvD,MAAMvuD,EAAKtjB,KACL8xE,EAAWxuD,EAAGwE,MAAQ6pD,EAAgBruD,EAAGwsD,YACzCiC,EAAUL,EAAepuD,EAAGwsD,YAC5BkC,EAASJ,EAActuD,EAAGwsD,YAC1BmC,EAAa3uD,EAAG2F,OAAS3F,EAAG8jC,WAAcyqB,EAAiBvuD,EAAGwsD,YACpExsD,EAAG20B,QAAUxwC,KAAKsI,OAAQgiE,EAAUD,GAAY,EAAKxuD,EAAGmH,MACxDnH,EAAG40B,QAAUzwC,KAAKsI,OAAQiiE,EAASC,GAAa,EAAK3uD,EAAGqH,IAAMrH,EAAG8jC,YAEnEh/C,cAAcsC,GAGZ,OAAO2G,GAAgB3G,GAFCoE,GAAM9O,KAAKspC,YAAYtnC,QAEE2O,GAD9B3Q,KAAKN,QAAQs0C,YAAc,IAGhD5rC,8BAA8BjI,GAC5B,MAAMmjB,EAAKtjB,KACX,GAAI4L,GAAczL,GAChB,OAAOypC,IAET,MAAMsoC,EAAgB5uD,EAAGwsD,aAAexsD,EAAG5S,IAAM4S,EAAG7S,KACpD,OAAI6S,EAAG5jB,QAAQmN,SACLyW,EAAG5S,IAAMvQ,GAAS+xE,GAEpB/xE,EAAQmjB,EAAG7S,KAAOyhE,EAE5B9pE,8BAA8B8yC,GAC5B,GAAItvC,GAAcsvC,GAChB,OAAOtR,IAET,MAAMtmB,EAAKtjB,KACLmyE,EAAiBj3B,GAAY53B,EAAGwsD,aAAexsD,EAAG5S,IAAM4S,EAAG7S,MACjE,OAAO6S,EAAG5jB,QAAQmN,QAAUyW,EAAG5S,IAAMyhE,EAAiB7uD,EAAG7S,IAAM0hE,EAEjE/pE,qBAAqBsC,GACnB,MAAM4Y,EAAKtjB,KACL44C,EAAct1B,EAAG2sD,cAAgB,GACvC,GAAIvlE,GAAS,GAAKA,EAAQkuC,EAAY52C,OAAQ,CAC5C,MAAMowE,EAAax5B,EAAYluC,GAC/B,OAzGN,SAAiC0oB,EAAQ1oB,EAAO+/B,GAC9C,OAAO1uC,OAAO2mB,OAAO3mB,OAAOC,OAAOo3B,GAAS,CAC1CqX,MAAAA,EACA//B,MAAAA,EACAzG,KAAM,eAqGGouE,CAAwB/uD,EAAGwF,aAAcpe,EAAO0nE,IAG3DhqE,iBAAiBsC,EAAO4nE,GACtB,MAAMhvD,EAAKtjB,KACLuR,EAAQ+R,EAAG80B,cAAc1tC,GAASyE,GACxC,MAAO,CACLxT,EAAG8L,KAAKyL,IAAI3B,GAAS+gE,EAAqBhvD,EAAG20B,QAC7C7nC,EAAG3I,KAAKwK,IAAIV,GAAS+gE,EAAqBhvD,EAAG40B,QAC7C3mC,MAAAA,GAGJnJ,yBAAyBsC,EAAOvK,GAC9B,OAAOH,KAAK6vE,iBAAiBnlE,EAAO1K,KAAKw4C,8BAA8Br4C,IAEzEiI,gBAAgBsC,GACd,OAAO1K,KAAKi5C,yBAAyBvuC,GAAS,EAAG1K,KAAK6sD,gBAExDzkD,sBAAsBsC,GACpB,MAAM+f,KAACA,EAAIE,IAAEA,EAAGD,MAAEA,EAAKE,OAAEA,GAAU5qB,KAAKqwE,iBAAiB3lE,GACzD,MAAO,CACL+f,KAAAA,EACAE,IAAAA,EACAD,MAAAA,EACAE,OAAAA,GAGJxiB,iBACE,MAAMkb,EAAKtjB,MACL8kB,gBAACA,EAAiBytB,MAAMoG,SAACA,IAAar1B,EAAG5jB,QAC/C,GAAIolB,EAAiB,CACnB,MAAMxf,EAAMge,EAAGhe,IACfA,EAAI6iB,OACJ7iB,EAAIskB,YACJknD,GAAextD,EAAIA,EAAGk1B,8BAA8Bl1B,EAAGyqD,WAAYp1B,EAAUr1B,EAAGgmB,YAAYtnC,QAC5FsD,EAAIwkB,YACJxkB,EAAI0mB,UAAYlH,EAChBxf,EAAI4D,OACJ5D,EAAIgjB,WAGRlgB,WACE,MAAMkb,EAAKtjB,KACLsF,EAAMge,EAAGhe,IACTomB,EAAOpI,EAAG5jB,SACV+4C,WAACA,EAAUlG,KAAEA,GAAQ7mB,EACrBqlD,EAAaztD,EAAGgmB,YAAYtnC,OAClC,IAAID,EAAGuwC,EAAQ6H,EAaf,GAZIzuB,EAAKktB,YAAYF,SArNzB,SAAyBlyB,EAAOuqD,GAC9B,MAAMzrE,IAACA,EAAK5F,SAASk5C,YAACA,IAAgBpyB,EACtC,IAAK,IAAIzkB,EAAIgvE,EAAa,EAAGhvE,GAAK,EAAGA,IAAK,CACxC,MAAMosD,EAAcvV,EAAYzmB,WAAW3L,EAAMopD,qBAAqB7tE,IAChEguE,EAAS1hD,GAAO8/B,EAAY5oC,OAC5B5pB,EAACA,EAACyU,EAAEA,EAAC6b,UAAEA,EAASxB,KAAEA,EAAIE,IAAEA,EAAGD,MAAEA,EAAKE,OAAEA,GAAUpE,EAAM6pD,iBAAiBtuE,IACrEmkD,cAACA,GAAiBiI,EACxB,IAAKviD,GAAcs6C,GAAgB,CACjC,MAAMjI,EAAU7vB,GAAU+/B,EAAYhI,iBACtC7gD,EAAI0mB,UAAYk6B,EAChB5gD,EAAI0pD,SAASvkC,EAAOwzB,EAAQxzB,KAAME,EAAMszB,EAAQtzB,IAAKD,EAAQD,EAAOwzB,EAAQn2B,MAAO8C,EAASD,EAAMszB,EAAQh1B,QAE5GwC,GACEnmB,EACAkhB,EAAMypD,aAAaluE,GACnBpG,EACAyU,EAAK2/D,EAAOtqD,WAAa,EACzBsqD,EACA,CACE3sD,MAAO+qC,EAAY/qC,MACnB6I,UAAWA,EACXC,aAAc,YAiMhBqmD,CAAgBjvD,EAAIytD,GAElBx+B,EAAKmG,SACPp1B,EAAGuqB,MAAM1xC,SAAQ,CAAC6L,EAAM0C,KACtB,GAAc,IAAVA,EAAa,CACf4nC,EAAShvB,EAAGk1B,8BAA8BxwC,EAAK7H,OAC/C,MAAMguD,EAAc5b,EAAKpgB,WAAW7O,EAAGwF,WAAWpe,EAAQ,KArLpE,SAAwB8b,EAAOgsD,EAAchpD,EAAQunD,GACnD,MAAMzrE,EAAMkhB,EAAMlhB,IACZqzC,EAAW65B,EAAa75B,UACxBv1B,MAACA,EAAKiJ,UAAEA,GAAammD,GACrB75B,IAAao4B,IAAgB3tD,IAAUiJ,GAAa7C,EAAS,IAGnElkB,EAAI6iB,OACJ7iB,EAAI8mB,YAAchJ,EAClB9d,EAAI+mB,UAAYA,EAChB/mB,EAAI8pD,YAAYojB,EAAa50C,YAC7Bt4B,EAAI+pD,eAAiBmjB,EAAa30C,iBAClCv4B,EAAIskB,YACJknD,GAAetqD,EAAOgD,EAAQmvB,EAAUo4B,GACxCzrE,EAAIwkB,YACJxkB,EAAI8kB,SACJ9kB,EAAIgjB,WAsKImqD,CAAenvD,EAAI6qC,EAAa7b,EAAQy+B,OAI1Ct4B,EAAWC,QAAS,CAEtB,IADApzC,EAAI6iB,OACCpmB,EAAIuhB,EAAGgmB,YAAYtnC,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC/C,MAAMosD,EAAc1V,EAAWtmB,WAAW7O,EAAGssD,qBAAqB7tE,KAC5DqhB,MAACA,EAAKiJ,UAAEA,GAAa8hC,EACtB9hC,GAAcjJ,IAGnB9d,EAAI+mB,UAAYA,EAChB/mB,EAAI8mB,YAAchJ,EAClB9d,EAAI8pD,YAAYjB,EAAYvwB,YAC5Bt4B,EAAI+pD,eAAiBlB,EAAYtwB,iBACjCyU,EAAShvB,EAAGk1B,8BAA8B9sB,EAAKmiB,MAAMhhC,QAAUyW,EAAG7S,IAAM6S,EAAG5S,KAC3EypC,EAAW72B,EAAGusD,iBAAiB9tE,EAAGuwC,GAClChtC,EAAIskB,YACJtkB,EAAIykB,OAAOzG,EAAG20B,QAAS30B,EAAG40B,SAC1B5yC,EAAI0kB,OAAOmwB,EAASx+C,EAAGw+C,EAAS/pC,GAChC9K,EAAI8kB,UAEN9kB,EAAIgjB,WAGRlgB,cACAA,aACE,MAAMkb,EAAKtjB,KACLsF,EAAMge,EAAGhe,IACTomB,EAAOpI,EAAG5jB,QACV6jD,EAAW73B,EAAKmiB,MACtB,IAAK0V,EAAS7K,QACZ,OAEF,MAAM1E,EAAa1wB,EAAG80B,cAAc,GACpC,IAAI9F,EAAQxqB,EACZxiB,EAAI6iB,OACJ7iB,EAAIokB,UAAUpG,EAAG20B,QAAS30B,EAAG40B,SAC7B5yC,EAAIue,OAAOmwB,GACX1uC,EAAI2mB,UAAY,SAChB3mB,EAAI4mB,aAAe,SACnB5I,EAAGuqB,MAAM1xC,SAAQ,CAAC6L,EAAM0C,KACtB,GAAc,IAAVA,IAAgBghB,EAAK7e,QACvB,OAEF,MAAMshD,EAAc5K,EAASpxB,WAAW7O,EAAGwF,WAAWpe,IAChD2hD,EAAWh+B,GAAO8/B,EAAY5oC,MAEpC,GADA+sB,EAAShvB,EAAGk1B,8BAA8Bl1B,EAAGuqB,MAAMnjC,GAAOvK,OACtDguD,EAAYlI,kBAAmB,CACjC3gD,EAAIigB,KAAO8mC,EAAS1kC,OACpBG,EAAQxiB,EAAIuiB,YAAY7f,EAAKyiC,OAAO3iB,MACpCxiB,EAAI0mB,UAAYmiC,EAAYjI,cAC5B,MAAMjI,EAAU7vB,GAAU+/B,EAAYhI,iBACtC7gD,EAAI0pD,UACDlnC,EAAQ,EAAIm2B,EAAQxzB,MACpB6nB,EAAS+Z,EAAS7uD,KAAO,EAAIygD,EAAQtzB,IACtC7C,EAAQm2B,EAAQn2B,MAChBukC,EAAS7uD,KAAOygD,EAAQh1B,QAG5BwC,GAAWnmB,EAAK0C,EAAKyiC,MAAO,GAAI6H,EAAQ+Z,EAAU,CAChDjpC,MAAO+qC,EAAY/qC,WAGvB9d,EAAIgjB,UAENlgB,cAEF+oE,GAAkBxlE,GAAK,eACvBwlE,GAAkBxsD,SAAW,CAC3B+zB,SAAS,EACTg6B,SAAS,EACTv4B,SAAU,YACV1B,WAAY,CACVC,SAAS,EACTrsB,UAAW,EACXuR,WAAY,GACZC,iBAAkB,GAEpB0U,KAAM,CACJoG,UAAU,GAEZ3E,WAAY,EACZnG,MAAO,CACLoY,mBAAmB,EACnBhhD,SAAUo+C,GAAMV,WAAWS,SAE7BxK,YAAa,CACXsN,mBAAerhC,EACfshC,gBAAiB,EACjBzN,SAAS,EACTnzB,KAAM,CACJ/nB,KAAM,IAERyH,SAASwlC,GACAA,EAETwT,QAAS,IAGbkzB,GAAkBzuB,cAAgB,CAChCiwB,mBAAoB,cACpBC,oBAAqB,QACrBC,cAAe,SAEjB1B,GAAkB7sD,YAAc,CAC9Bm0B,WAAY,CACVlxB,UAAW,SAIf,MAAMurD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMx1E,KAAM,EAAGy1E,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAMx1E,KAAM,IAAMy1E,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAMx1E,KAAM,IAAOy1E,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAMx1E,KAAM,KAASy1E,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAMx1E,KAAM,MAAUy1E,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAOx1E,KAAM,OAAWy1E,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAMx1E,KAAM,OAASy1E,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAOx1E,KAAM,OAASy1E,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAMx1E,KAAM,SAEvBk2E,GAAS33E,OAAOgP,KAAK+nE,IAC3B,SAASa,GAAOp3E,EAAGC,GACjB,OAAOD,EAAIC,EAEb,SAASgtC,GAAMhjB,EAAO5D,GACpB,GAAIhX,GAAcgX,GAChB,OAAO,KAET,MAAMgxD,EAAUptD,EAAMqtD,UAChBC,OAACA,EAAMnkE,MAAEA,EAAKokE,WAAEA,GAAcvtD,EAAMwtD,WAC1C,IAAI7zE,EAAQyiB,EASZ,MARsB,mBAAXkxD,IACT3zE,EAAQ2zE,EAAO3zE,IAEZ8L,GAAe9L,KAClBA,EAA0B,iBAAX2zE,EACXF,EAAQpqC,MAAMrpC,EAAO2zE,GACrBF,EAAQpqC,MAAMrpC,IAEN,OAAVA,EACK,MAELwP,IACFxP,EAAkB,SAAVwP,IAAqBM,GAAS8jE,KAA8B,IAAfA,EAEjDH,EAAQK,QAAQ9zE,EAAOwP,GADvBikE,EAAQK,QAAQ9zE,EAAO,UAAW4zE,KAGhC5zE,GAEV,SAAS+zE,GAA0BC,EAAS1jE,EAAKC,EAAK0jE,GACpD,MAAMlnE,EAAOwmE,GAAM1xE,OACnB,IAAK,IAAID,EAAI2xE,GAAMxwE,QAAQixE,GAAUpyE,EAAImL,EAAO,IAAKnL,EAAG,CACtD,MAAMsyE,EAAWvB,GAAUY,GAAM3xE,IAC3B89B,EAASw0C,EAASpB,MAAQoB,EAASpB,MAAQ/mE,OAAOkiE,iBACxD,GAAIiG,EAASrB,QAAUvrE,KAAK88C,MAAM7zC,EAAMD,IAAQovB,EAASw0C,EAAS72E,QAAU42E,EAC1E,OAAOV,GAAM3xE,GAGjB,OAAO2xE,GAAMxmE,EAAO,GAkBtB,SAASonE,GAAQzmC,EAAO0mC,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWxyE,OAAQ,CAC5B,MAAMktB,GAACA,EAAED,GAAEA,GAAMJ,GAAQ2lD,EAAYD,GAErC1mC,EADkB2mC,EAAWtlD,IAAOqlD,EAAOC,EAAWtlD,GAAMslD,EAAWvlD,KACpD,QAJnB4e,EAAM0mC,IAAQ,EAoBlB,SAASE,GAAoBjuD,EAAO9B,EAAQgwD,GAC1C,MAAM7mC,EAAQ,GACR/kC,EAAM,GACNoE,EAAOwX,EAAO1iB,OACpB,IAAID,EAAG5B,EACP,IAAK4B,EAAI,EAAGA,EAAImL,IAAQnL,EACtB5B,EAAQukB,EAAO3iB,GACf+G,EAAI3I,GAAS4B,EACb8rC,EAAM/pC,KAAK,CACT3D,MAAAA,EACA8jD,OAAO,IAGX,OAAiB,IAAT/2C,GAAewnE,EA1BzB,SAAuBluD,EAAOqnB,EAAO/kC,EAAK4rE,GACxC,MAAMd,EAAUptD,EAAMqtD,SAChBxvB,GAASuvB,EAAQK,QAAQpmC,EAAM,GAAG1tC,MAAOu0E,GACzCnkC,EAAO1C,EAAMA,EAAM7rC,OAAS,GAAG7B,MACrC,IAAI8jD,EAAOv5C,EACX,IAAKu5C,EAAQI,EAAOJ,GAAS1T,EAAM0T,GAAS2vB,EAAQzxE,IAAI8hD,EAAO,EAAGywB,GAChEhqE,EAAQ5B,EAAIm7C,GACRv5C,GAAS,IACXmjC,EAAMnjC,GAAOu5C,OAAQ,GAGzB,OAAOpW,EAeqC8mC,CAAcnuD,EAAOqnB,EAAO/kC,EAAK4rE,GAAzC7mC,EAEtC,MAAM+mC,WAAkB1tB,GACtB9+C,YAAYkB,GACVimC,MAAMjmC,GACNtJ,KAAKktC,OAAS,CACZ9tC,KAAM,GACNiqC,OAAQ,GACR3G,IAAK,IAEP1iC,KAAK60E,MAAQ,MACb70E,KAAK80E,gBAAajwD,EAClB7kB,KAAK+0E,SAAW,GAChB/0E,KAAKg1E,aAAc,EACnBh1E,KAAKg0E,gBAAanvD,EAEpBzc,KAAKgwD,EAAW1sC,GACd,MAAM6oD,EAAOnc,EAAUmc,OAASnc,EAAUmc,KAAO,IAC3CX,EAAU5zE,KAAK6zE,SAAW,IAAIn6B,GAASC,MAAMye,EAAU1e,SAASrb,MACtEpwB,GAAQsmE,EAAKU,eAAgBrB,EAAQsB,WACrCl1E,KAAKg0E,WAAa,CAChBF,OAAQS,EAAKT,OACbnkE,MAAO4kE,EAAK5kE,MACZokE,WAAYQ,EAAKR,YAEnBxkC,MAAMhoC,KAAK6wD,GACXp4D,KAAKg1E,YAActpD,EAAKypD,WAE1B/sE,MAAMijC,EAAK3gC,GACT,YAAYma,IAARwmB,EACK,KAEF7B,GAAMxpC,KAAMqrC,GAErBjjC,eACEmnC,MAAMyP,eACNh/C,KAAKktC,OAAS,CACZ9tC,KAAM,GACNiqC,OAAQ,GACR3G,IAAK,IAGTt6B,sBACE,MAAMkb,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACbk0E,EAAUtwD,EAAGuwD,SACbt6B,EAAO75C,EAAQ60E,KAAKh7B,MAAQ,MAClC,IAAI9oC,IAACA,EAAGC,IAAEA,EAAGy5B,WAAEA,EAAUC,WAAEA,GAAc9mB,EAAG+mB,gBAC5C,SAAS+qC,EAAa94C,GACf6N,GAAeh6B,MAAMmsB,EAAO7rB,OAC/BA,EAAMhJ,KAAKgJ,IAAIA,EAAK6rB,EAAO7rB,MAExB25B,GAAej6B,MAAMmsB,EAAO5rB,OAC/BA,EAAMjJ,KAAKiJ,IAAIA,EAAK4rB,EAAO5rB,MAG1By5B,GAAeC,IAClBgrC,EAAa9xD,EAAG+xD,mBACO,UAAnB31E,EAAQ48B,QAA+C,WAAzB58B,EAAQmuC,MAAMtgC,QAC9C6nE,EAAa9xD,EAAGilC,WAAU,KAG9B93C,EAAMxE,GAAewE,KAASN,MAAMM,GAAOA,GAAOmjE,EAAQK,QAAQp3E,KAAKF,MAAO48C,GAC9E7oC,EAAMzE,GAAeyE,KAASP,MAAMO,GAAOA,GAAOkjE,EAAQ0B,MAAMz4E,KAAKF,MAAO48C,GAAQ,EACpFj2B,EAAG7S,IAAMhJ,KAAKgJ,IAAIA,EAAKC,EAAM,GAC7B4S,EAAG5S,IAAMjJ,KAAKiJ,IAAID,EAAM,EAAGC,GAE7BtI,kBACE,MAAMoqB,EAAMxyB,KAAKu1E,qBACjB,IAAI9kE,EAAMvE,OAAO+C,kBACbyB,EAAMxE,OAAO89B,kBAKjB,OAJIxX,EAAIxwB,SACNyO,EAAM+hB,EAAI,GACV9hB,EAAM8hB,EAAIA,EAAIxwB,OAAS,IAElB,CAACyO,IAAAA,EAAKC,IAAAA,GAEftI,aACE,MAAMkb,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACb81E,EAAW91E,EAAQ60E,KACnBhxB,EAAW7jD,EAAQmuC,MACnB2mC,EAAiC,WAApBjxB,EAASh2C,OAAsB+V,EAAGiyD,qBAAuBjyD,EAAGmyD,YACxD,UAAnB/1E,EAAQ48B,QAAsBk4C,EAAWxyE,SAC3CshB,EAAG7S,IAAM6S,EAAGykC,UAAYysB,EAAW,GACnClxD,EAAG5S,IAAM4S,EAAGwkC,UAAY0sB,EAAWA,EAAWxyE,OAAS,IAEzD,MAAMyO,EAAM6S,EAAG7S,IAETo9B,EDrmRV,SAAwBnpB,EAAQjU,EAAKC,GACnC,IAAI/I,EAAQ,EACRC,EAAM8c,EAAO1iB,OACjB,KAAO2F,EAAQC,GAAO8c,EAAO/c,GAAS8I,GACpC9I,IAEF,KAAOC,EAAMD,GAAS+c,EAAO9c,EAAM,GAAK8I,GACtC9I,IAEF,OAAOD,EAAQ,GAAKC,EAAM8c,EAAO1iB,OAC7B0iB,EAAOxgB,MAAMyD,EAAOC,GACpB8c,EC0lRYgxD,CAAelB,EAAY/jE,EAD7B6S,EAAG5S,KAWf,OATA4S,EAAGuxD,MAAQW,EAASj8B,OAASgK,EAASD,SAClC4wB,GAA0BsB,EAASrB,QAAS7wD,EAAG7S,IAAK6S,EAAG5S,IAAK4S,EAAGqyD,kBAAkBllE,IA9IzF,SAAoC+V,EAAOikC,EAAU0pB,EAAS1jE,EAAKC,GACjE,IAAK,IAAI3O,EAAI2xE,GAAM1xE,OAAS,EAAGD,GAAK2xE,GAAMxwE,QAAQixE,GAAUpyE,IAAK,CAC/D,MAAMw3C,EAAOm6B,GAAM3xE,GACnB,GAAI+wE,GAAUv5B,GAAMy5B,QAAUxsD,EAAMqtD,SAASnvB,KAAKh0C,EAAKD,EAAK8oC,IAASkR,EAAW,EAC9E,OAAOlR,EAGX,OAAOm6B,GAAMS,EAAUT,GAAMxwE,QAAQixE,GAAW,GAwI1CyB,CAA2BtyD,EAAIuqB,EAAM7rC,OAAQwzE,EAASrB,QAAS7wD,EAAG7S,IAAK6S,EAAG5S,MAC9E4S,EAAGwxD,WAAcvxB,EAASU,MAAMC,SAAwB,SAAb5gC,EAAGuxD,MAvIlD,SAA4Bt7B,GAC1B,IAAK,IAAIx3C,EAAI2xE,GAAMxwE,QAAQq2C,GAAQ,EAAGrsC,EAAOwmE,GAAM1xE,OAAQD,EAAImL,IAAQnL,EACrE,GAAI+wE,GAAUY,GAAM3xE,IAAIixE,OACtB,OAAOU,GAAM3xE,GAqIX8zE,CAAmBvyD,EAAGuxD,YADuChwD,EAEjEvB,EAAGwyD,YAAYtB,GACX90E,EAAQmN,SACVghC,EAAMhhC,UAED4nE,GAAoBnxD,EAAIuqB,EAAOvqB,EAAGwxD,YAE3C1sE,YAAYosE,GACV,MAAMlxD,EAAKtjB,KACX,IAEIqkD,EAAO9T,EAFP5oC,EAAQ,EACRC,EAAM,EAEN0b,EAAG5jB,QAAQ4yC,QAAUkiC,EAAWxyE,SAClCqiD,EAAQ/gC,EAAGyyD,mBAAmBvB,EAAW,IAEvC7sE,EADwB,IAAtB6sE,EAAWxyE,OACL,EAAIqiD,GAEH/gC,EAAGyyD,mBAAmBvB,EAAW,IAAMnwB,GAAS,EAE3D9T,EAAOjtB,EAAGyyD,mBAAmBvB,EAAWA,EAAWxyE,OAAS,IAE1D4F,EADwB,IAAtB4sE,EAAWxyE,OACPuuC,GAECA,EAAOjtB,EAAGyyD,mBAAmBvB,EAAWA,EAAWxyE,OAAS,KAAO,GAG9E,MAAMksD,EAAQsmB,EAAWxyE,OAAS,EAAI,GAAM,IAC5C2F,EAAQmK,GAAYnK,EAAO,EAAGumD,GAC9BtmD,EAAMkK,GAAYlK,EAAK,EAAGsmD,GAC1B5qC,EAAGyxD,SAAW,CAACptE,MAAAA,EAAOC,IAAAA,EAAKi4B,OAAQ,GAAKl4B,EAAQ,EAAIC,IAEtDQ,YACE,MAAMkb,EAAKtjB,KACL4zE,EAAUtwD,EAAGuwD,SACbpjE,EAAM6S,EAAG7S,IACTC,EAAM4S,EAAG5S,IACThR,EAAU4jB,EAAG5jB,QACb81E,EAAW91E,EAAQ60E,KACnBxuB,EAAQyvB,EAASj8B,MAAQ26B,GAA0BsB,EAASrB,QAAS1jE,EAAKC,EAAK4S,EAAGqyD,kBAAkBllE,IACpG69D,EAAWhiE,GAAekpE,EAASlH,SAAU,GAC7C90B,EAAoB,SAAVuM,GAAmByvB,EAASzB,WACtCiC,EAAa/lE,GAASupC,KAAwB,IAAZA,EAClC3L,EAAQ,GACd,IACI0mC,EAAMp4C,EADNkoB,EAAQ5zC,EAMZ,GAJIulE,IACF3xB,GAASuvB,EAAQK,QAAQ5vB,EAAO,UAAW7K,IAE7C6K,GAASuvB,EAAQK,QAAQ5vB,EAAO2xB,EAAa,MAAQjwB,GACjD6tB,EAAQlvB,KAAKh0C,EAAKD,EAAKs1C,GAAS,IAASuoB,EAC3C,MAAM,IAAI5qE,MAAM+M,EAAM,QAAUC,EAAM,uCAAyC49D,EAAW,IAAMvoB,GAElG,MAAMyuB,EAAsC,SAAzB90E,EAAQmuC,MAAMtgC,QAAqB+V,EAAG2yD,oBACzD,IAAK1B,EAAOlwB,EAAOloB,EAAQ,EAAGo4C,EAAO7jE,EAAK6jE,GAAQX,EAAQzxE,IAAIoyE,EAAMjG,EAAUvoB,GAAQ5pB,IACpFm4C,GAAQzmC,EAAO0mC,EAAMC,GAKvB,OAHID,IAAS7jE,GAA0B,UAAnBhR,EAAQ48B,QAAgC,IAAVH,GAChDm4C,GAAQzmC,EAAO0mC,EAAMC,GAEhBz4E,OAAOgP,KAAK8iC,GAAON,MAAK,CAAChxC,EAAGC,IAAMD,EAAIC,IAAGsM,KAAInN,IAAMA,IAE5DyM,iBAAiBjI,GACf,MACMyzE,EADK5zE,KACQ6zE,SACb2B,EAFKx1E,KAESN,QAAQ60E,KAC5B,OAAIiB,EAASU,cACJtC,EAAQv4C,OAAOl7B,EAAOq1E,EAASU,eAEjCtC,EAAQv4C,OAAOl7B,EAAOq1E,EAASP,eAAekB,UAEvD/tE,oBAAoBmsE,EAAM7pE,EAAOmjC,EAAOxS,GACtC,MAAM/X,EAAKtjB,KACLN,EAAU4jB,EAAG5jB,QACbw1E,EAAUx1E,EAAQ60E,KAAKU,eACvB17B,EAAOj2B,EAAGuxD,MACVH,EAAYpxD,EAAGwxD,WACfsB,EAAc78B,GAAQ27B,EAAQ37B,GAC9B88B,EAAc3B,GAAaQ,EAAQR,GACnC1sE,EAAO6lC,EAAMnjC,GACbu5C,EAAQywB,GAAa2B,GAAeruE,GAAQA,EAAKi8C,MACjDxZ,EAAQnnB,EAAGuwD,SAASx4C,OAAOk5C,EAAMl5C,IAAW4oB,EAAQoyB,EAAcD,IAClEn7C,EAAYv7B,EAAQmuC,MAAM5oC,SAChC,OAAOg2B,EAAYh2B,GAASg2B,EAAW,CAACwP,EAAO//B,EAAOmjC,GAAQvqB,GAAMmnB,EAEtEriC,mBAAmBylC,GACjB,IAAI9rC,EAAGmL,EAAMlF,EACb,IAAKjG,EAAI,EAAGmL,EAAO2gC,EAAM7rC,OAAQD,EAAImL,IAAQnL,EAC3CiG,EAAO6lC,EAAM9rC,GACbiG,EAAKyiC,MAAQzqC,KAAKs2E,oBAAoBtuE,EAAK7H,MAAO4B,EAAG8rC,GAGzDzlC,mBAAmBjI,GACjB,MAAMmjB,EAAKtjB,KACX,OAAiB,OAAVG,EAAiBypC,KAAOzpC,EAAQmjB,EAAG7S,MAAQ6S,EAAG5S,IAAM4S,EAAG7S,KAEhErI,iBAAiBjI,GACf,MAAMmjB,EAAKtjB,KACLu2E,EAAUjzD,EAAGyxD,SACbxmE,EAAM+U,EAAGyyD,mBAAmB51E,GAClC,OAAOmjB,EAAGqvB,oBAAoB4jC,EAAQ5uE,MAAQ4G,GAAOgoE,EAAQ12C,QAE/Dz3B,iBAAiBqgB,GACf,MAAMnF,EAAKtjB,KACLu2E,EAAUjzD,EAAGyxD,SACbxmE,EAAM+U,EAAGopD,mBAAmBjkD,GAAS8tD,EAAQ12C,OAAS02C,EAAQ3uE,IACpE,OAAO0b,EAAG7S,IAAMlC,GAAO+U,EAAG5S,IAAM4S,EAAG7S,KAErCrI,cAAcqiC,GACZ,MAAMnnB,EAAKtjB,KACLw2E,EAAYlzD,EAAG5jB,QAAQmuC,MACvB4oC,EAAiBnzD,EAAGhe,IAAIuiB,YAAY4iB,GAAO3iB,MAC3CvW,EAAQZ,GAAU2S,EAAGqsB,eAAiB6mC,EAAU/wB,YAAc+wB,EAAUhxB,aACxEkxB,EAAcjvE,KAAKyL,IAAI3B,GACvBolE,EAAclvE,KAAKwK,IAAIV,GACvBqlE,EAAetzD,EAAGopC,wBAAwB,GAAGlvD,KACnD,MAAO,CACL2Y,EAAIsgE,EAAiBC,EAAgBE,EAAeD,EACpDlhE,EAAIghE,EAAiBE,EAAgBC,EAAeF,GAGxDtuE,kBAAkByuE,GAChB,MAAMvzD,EAAKtjB,KACLw1E,EAAWlyD,EAAG5jB,QAAQ60E,KACtBU,EAAiBO,EAASP,eAC1B55C,EAAS45C,EAAeO,EAASj8B,OAAS07B,EAAelC,YACzD+D,EAAexzD,EAAGgzD,oBAAoBO,EAAa,EAAGpC,GAAoBnxD,EAAI,CAACuzD,GAAcvzD,EAAGwxD,YAAaz5C,GAC7G79B,EAAO8lB,EAAGyzD,cAAcD,GACxB1C,EAAW3sE,KAAKsI,MAAMuT,EAAGqsB,eAAiBrsB,EAAGwE,MAAQtqB,EAAK2Y,EAAImN,EAAG2F,OAASzrB,EAAKiY,GAAK,EAC1F,OAAO2+D,EAAW,EAAIA,EAAW,EAEnChsE,oBACE,MAAMkb,EAAKtjB,KACX,IACI+B,EAAGmL,EADHsnE,EAAalxD,EAAG4pB,OAAO9tC,MAAQ,GAEnC,GAAIo1E,EAAWxyE,OACb,OAAOwyE,EAET,MAAMpnC,EAAQ9pB,EAAG6gB,0BACjB,GAAI7gB,EAAG0xD,aAAe5nC,EAAMprC,OAC1B,OAAQshB,EAAG4pB,OAAO9tC,KAAOguC,EAAM,GAAG/I,WAAWiJ,mBAAmBhqB,GAElE,IAAKvhB,EAAI,EAAGmL,EAAOkgC,EAAMprC,OAAQD,EAAImL,IAAQnL,EAC3CyyE,EAAaA,EAAWnnC,OAAOD,EAAMrrC,GAAGsiC,WAAWiJ,mBAAmBhqB,IAExE,OAAQA,EAAG4pB,OAAO9tC,KAAOkkB,EAAG2Y,UAAUu4C,GAExCpsE,qBACE,MAAMkb,EAAKtjB,KACLw0E,EAAalxD,EAAG4pB,OAAO7D,QAAU,GACvC,IAAItnC,EAAGmL,EACP,GAAIsnE,EAAWxyE,OACb,OAAOwyE,EAET,MAAMnrC,EAAS/lB,EAAGgmB,YAClB,IAAKvnC,EAAI,EAAGmL,EAAOm8B,EAAOrnC,OAAQD,EAAImL,IAAQnL,EAC5CyyE,EAAW1wE,KAAK0lC,GAAMlmB,EAAI+lB,EAAOtnC,KAEnC,OAAQuhB,EAAG4pB,OAAO7D,OAAS/lB,EAAG0xD,YAAcR,EAAalxD,EAAG2Y,UAAUu4C,GAExEpsE,UAAUsc,GACR,OAAOiL,GAAajL,EAAO6oB,KAAKomC,MAuBpC,SAASqD,GAAYloD,EAAOnL,EAAK9W,GAC/B,IAEIoqE,EAAYC,EAAYC,EAAYC,EAFpCloD,EAAK,EACLD,EAAKH,EAAM9sB,OAAS,EAEpB6K,GACE8W,GAAOmL,EAAMI,GAAI3gB,KAAOoV,GAAOmL,EAAMG,GAAI1gB,OACzC2gB,GAAAA,EAAID,GAAAA,GAAME,GAAaL,EAAO,MAAOnL,MAEvCpV,IAAK0oE,EAAY1C,KAAM4C,GAAcroD,EAAMI,MAC3C3gB,IAAK2oE,EAAY3C,KAAM6C,GAActoD,EAAMG,MAEzCtL,GAAOmL,EAAMI,GAAIqlD,MAAQ5wD,GAAOmL,EAAMG,GAAIslD,QAC1CrlD,GAAAA,EAAID,GAAAA,GAAME,GAAaL,EAAO,OAAQnL,MAExC4wD,KAAM0C,EAAY1oE,IAAK4oE,GAAcroD,EAAMI,MAC3CqlD,KAAM2C,EAAY3oE,IAAK6oE,GAActoD,EAAMG,KAE/C,MAAMooD,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAexzD,EAAMszD,GAAcI,EAAOF,EAtCrFvC,GAAUjpE,GAAK,OACfipE,GAAUjwD,SAAW,CACnB2X,OAAQ,OACRod,SAAU,GACV66B,KAAM,CACJT,QAAQ,EACRv6B,MAAM,EACN5pC,OAAO,EACPokE,YAAY,EACZI,QAAS,cACTc,eAAgB,IAElBpnC,MAAO,CACLtgC,OAAQ,OACR02C,MAAO,CACLC,SAAS,KAyBf,MAAMozB,WAAwB1C,GAC5BxsE,YAAYkB,GACVimC,MAAMjmC,GACNtJ,KAAKu3E,OAAS,GACdv3E,KAAKw3E,aAAU3yD,EACf7kB,KAAKy3E,iBAAc5yD,EAErBzc,cACE,MAAMkb,EAAKtjB,KACLw0E,EAAalxD,EAAGo0D,yBAChB5oD,EAAQxL,EAAGi0D,OAASj0D,EAAGq0D,iBAAiBnD,GAC9ClxD,EAAGk0D,QAAUR,GAAYloD,EAAOxL,EAAG7S,KACnC6S,EAAGm0D,YAAcT,GAAYloD,EAAOxL,EAAG5S,KAAO4S,EAAGk0D,QACjDjoC,MAAMumC,YAAYtB,GAEpBpsE,iBAAiBosE,GACf,MAAM/jE,IAACA,EAAGC,IAAEA,GAAO1Q,KACb4vB,EAAQ,GACRd,EAAQ,GACd,IAAI/sB,EAAGmL,EAAMkpB,EAAMqX,EAAM1qC,EACzB,IAAKhB,EAAI,EAAGmL,EAAOsnE,EAAWxyE,OAAQD,EAAImL,IAAQnL,EAChD0rC,EAAO+mC,EAAWzyE,GACd0rC,GAAQh9B,GAAOg9B,GAAQ/8B,GACzBkf,EAAM9rB,KAAK2pC,GAGf,GAAI7d,EAAM5tB,OAAS,EACjB,MAAO,CACL,CAACuyE,KAAM9jE,EAAKlC,IAAK,GACjB,CAACgmE,KAAM7jE,EAAKnC,IAAK,IAGrB,IAAKxM,EAAI,EAAGmL,EAAO0iB,EAAM5tB,OAAQD,EAAImL,IAAQnL,EAC3CgB,EAAO6sB,EAAM7tB,EAAI,GACjBq0B,EAAOxG,EAAM7tB,EAAI,GACjB0rC,EAAO7d,EAAM7tB,GACT0F,KAAKkI,OAAO5M,EAAOqzB,GAAQ,KAAOqX,GACpC3e,EAAMhrB,KAAK,CAACywE,KAAM9mC,EAAMl/B,IAAKxM,GAAKmL,EAAO,KAG7C,OAAO4hB,EAET1mB,yBACE,MAAMkb,EAAKtjB,KACX,IAAIw0E,EAAalxD,EAAG4pB,OAAOxK,KAAO,GAClC,GAAI8xC,EAAWxyE,OACb,OAAOwyE,EAET,MAAMp1E,EAAOkkB,EAAG2yD,oBACVxrC,EAAQnnB,EAAGiyD,qBAOjB,OALEf,EADEp1E,EAAK4C,QAAUyoC,EAAMzoC,OACVshB,EAAG2Y,UAAU78B,EAAKiuC,OAAO5C,IAEzBrrC,EAAK4C,OAAS5C,EAAOqrC,EAEpC+pC,EAAalxD,EAAG4pB,OAAOxK,IAAM8xC,EACtBA,EAETpsE,mBAAmBjI,GACjB,OAAQ62E,GAAYh3E,KAAKu3E,OAAQp3E,GAASH,KAAKw3E,SAAWx3E,KAAKy3E,YAEjErvE,iBAAiBqgB,GACf,MAAMnF,EAAKtjB,KACLu2E,EAAUjzD,EAAGyxD,SACbnoB,EAAUtpC,EAAGopD,mBAAmBjkD,GAAS8tD,EAAQ12C,OAAS02C,EAAQ3uE,IACxE,OAAOovE,GAAY1zD,EAAGi0D,OAAQ3qB,EAAUtpC,EAAGm0D,YAAcn0D,EAAGk0D,SAAS,ICv1UlE,SAASI,GAAaC,EAAUC,EAAY,GAC/C,IAAK3tE,MAAM0B,QAAQgsE,GACf,MAAM,IAAIE,UAAU,4FAA4Fh9C,KAAKC,UAAU68C,MAGnI,IAAIG,EAAY,EACZC,EAAUH,EA0Bd,OAxBAD,EAAShlB,MAAK,CAACqlB,EAAMxtE,KAEjB,GAAIutE,GAAW,EACX,OAAO,EAGX,GAAIvtE,IAAUmtE,EAAS71E,OAAS,EAAG,CAG/B,MACMm2E,EADY1wE,KAAK88C,KAAK0zB,EAAUC,EAAKE,KACZF,EAAKG,KAKpC,OAJAL,GAAaG,EACbF,EAAU,GAGH,EAOX,OAJAD,GAAaE,EAAKG,KAElBJ,EAAUxwE,KAAKiJ,IAAIunE,EAAUC,EAAKE,IAAK,IAEhC,KAEJJ,ED0zUXV,GAAgB3rE,GAAK,aACrB2rE,GAAgB3yD,SAAWiwD,GAAUjwD,SCzzU9B,MAAM2zD,GAAU,CACnB53E,IAAK,qBACL63E,MAAO,SAAUn5E,GACb,MAAMo5E,EAAWx4E,KAAKy4E,UACtBC,aAAaC,QAAQ34E,KAAKU,IAAKq6B,KAAKC,UAAUj/B,OAAO2mB,OAAO3mB,OAAO2mB,OAAO,GAAI81D,GAAWp5E,MAE7Fq5E,QAAS,WACL,MAAMG,EAAUF,aAAaG,QAAQ74E,KAAKU,KAC1C,IAAKk4E,EACD,OAAO,KACX,MAAME,EAAa/9C,KAAKyO,MAAMovC,GAI9B,OAHIE,EAAWnxE,QACXmxE,EAAWnxE,MAAQ,IAAI9K,KAAKi8E,EAAWnxE,QAEpCmxE,GAEXrpC,MAAO,WACHipC,aAAaK,WAAW/4E,KAAKU,OCtD/Bs4E,GACG,UADHA,GAGM,UAHNA,GAIK,UAJLA,GAMI,UANJA,GAOM,UAPNA,GASI,2BCRGC,GAAa,CACtBC,KAAM,CACFn6E,KAAM,YACNqkB,MAAO41D,GACPnB,SAAU,IAAIh7E,KAAS,IAAIA,KAAK,oBAC1B,CACE,CAAEu7E,IAAK,EAAGC,KAAM,GAChB,CAAED,IAAK,EAAGC,KAAM,KAElB,CACE,CAAED,IAAK,EAAGC,KAAM,GAChB,CAAED,IAAK,EAAGC,KAAM,MAG5Bc,OAAQ,CACJp6E,KAAM,kBACNqkB,MAAO41D,GACPnB,SAAU,CACN,CAAEO,IAAK,EAAGC,KAAM,GAChB,CAAED,IAAK,EAAGC,KAAM,IAChB,CAAED,IAAK,EAAGC,KAAM,IAChB,CAAED,IAAK,EAAGC,KAAM,MAGxBe,IAAK,CACDr6E,KAAM,MACNqkB,MAAO41D,GACPnB,SAAU,CACN,CAAEO,IAAK,EAAGC,KAAM,IAChB,CAAED,IAAK,EAAGC,KAAM,MAGxBgB,IAAK,CACDt6E,KAAM,MACNqkB,MAAO41D,GACPnB,SAAU,CACN,CAAEO,IAAK,EAAGC,KAAM,IAChB,CAAED,IAAK,EAAGC,KAAM,MAGxBiB,SAAU,CACNv6E,KAAM,cACNqkB,MAAO41D,GACPnB,SAAU,CACN,CAAEO,IAAK,EAAGC,KAAM,IAChB,CAAED,IAAK,EAAGC,KAAM,OAIfkB,GAAoBx9E,OAAOwkD,QAAQ04B,IC9ChD/iB,GAAM1F,SAASke,GAAanC,GAAel2B,GAAgB+rB,GAAcd,IACzE,MACakY,GAAuBrvE,MAAMC,KAE1C,CAAEpI,OAHyB,IAM3B,CAACy3E,EAAQ/uE,IAAUA,EAAQ,IAIdgvE,GAAc39E,OAAO2oB,OAAOu0D,IAAYnwE,KAAI6wE,KACrDlvC,MAAOkvC,EAAK56E,KACZK,KAAMo6E,GAAqB1wE,KAAI8wE,GAAShC,GAAa+B,EAAK9B,SAAU+B,KACpE70D,YAAa40D,EAAKv2D,MAClB0B,gBAAiB60D,EAAKv2D,MACtBla,MAAM,MAEG2wE,GAAY,CACrBxwC,OAAQmwC,GAAqB1wE,KAAIsqE,GAAQ,GAAGA,OAAUA,EAAO,EAAI,IAAM,OACvEpuD,SAAU00D,IAEDI,GAAe,CACxB5zD,qBAAqB,EACrBI,QAAS,CACLssB,QAAS,CAEL5sB,KAAM,QACNC,WAAW,EAEXuiD,SAAU,CAACjsE,EAAGC,IAAMD,EAAE+nC,OAAOl0B,EAAI5T,EAAE8nC,OAAOl0B,GAE9C2lC,OAAQ,CACJoE,SAAU,SACV9Q,OAAQ,CACJs7B,SAAU,EACV1mB,QAAS,GACTisB,eAAe,KAI3BxkD,MAAO,CACHM,KAAM,UACNC,WAAW,GAEfQ,OAAQ,CACJrW,EAAG,CACCqiC,aAAa,EACbF,KAAM,CACFnvB,MAAO41D,GACPj0D,YAAai0D,KAGrBr9E,EAAG,CACC42C,KAAM,CACFnvB,MAAO41D,GACPj0D,YAAai0D,2IC7C7Bv6E,SACEhB,6EAXFs8E,SACAp2E,YACAuyD,GAAA6jB,GACA91E,KAAA,OACA7E,KAAAy6E,GACAn6E,QAAAo6E,mDAMqBC,ktBChBrBt7E,SAUEhB,mMCAW,qFAHeu7E,YAF5Bv6E,+RCFO,SAASu7E,GAAO75E,EAAO6B,EAAQi4E,GAClC,MAAMtwC,EAA+B,iBAAVxpC,EAAqBA,EAAM2L,WAAa3L,EACnE,OAAIwpC,EAAY3nC,QAAUA,EACf2nC,EACJ,GAAGswC,EAAIC,OAAOl4E,EAAS2nC,EAAY3nC,UAAU7B,ICwBjD,SAASg6E,GAAeC,GAC3B,MAAM7F,EAlBH,SAAwB6F,GAM3B,MAAMC,EAAYC,IACd,MAAMC,EAAQ9yE,KAAK+yE,MAAMJ,EAAKE,GAE9B,OADAF,GAAMG,EAAQD,EACPC,GAEX,MAAO,CACHX,MAAOS,EAAS,MAChBI,QAASJ,EAAS,KAClBK,QAASL,EAAS,MAITM,CAAeP,GAC5B,MAAO,GAAGJ,GAAOzF,EAAKqF,MAAO,EAAG,QAAQI,GAAOzF,EAAKkG,QAAS,EAAG,QAAQT,GAAOzF,EAAKmG,QAAS,EAAG,kFCgB3Ep1E,KAAMs1E,sBAINT,GAAe70E,WAMjCA,KAAIs1E,eAAe,SAClBt8E,MAAO,WACPu8E,SAAU,wFAfgCv1E,wTAHPA,0DAGHA,qWAYD0zE,yGAhBvCv6E,SACEhB,cAGAA,qBACAA,OACEA,cACAA,qBAEFA,OACEA,cACAA,qBAEFA,cACAA,OACEA,cACAA,gDAfwE6H,OAAAA,oEAAjCA,eAGOA,wBAAVA,kBAGfA,KAAMs1E,0CAINT,GAAe70E,+BAMjCA,KAAIs1E,eAAe,SAClBt8E,MAAO,WACPu8E,SAAU,4EAjDlB97E,EACAqkB,EACAhiB,EACAy2E,EACAiD,EAeAC,UAxBAC,GAAA,aACAC,YACAtzE,wBACAuzE,cAQAC,QACA/5E,EDdO,SAAqBg6E,EAAWC,EAAU,IAAIx+E,MACjD,OAAO4K,KAAKC,IAAI2zE,EAAQC,UAAYF,EAAUE,WCalDC,CAAA5zE,QACAmzE,EAAAlD,GAAAC,EAAAz2E,EDRgB,IAAO,GAAK,KXy6B5B,IAAmBvF,SAAAA,OY/4BnBy7D,aAAAyjB,IZg5BIt3E,IAAwBG,GAAG+E,WAAW7E,KAAKjI,sMY95B/C2/E,EAAAvC,GAAAgC,OACAl8E,EAAAy8E,EAAAz8E,UACAqkB,EAAAo4D,EAAAp4D,OACAy0D,EAAA2D,EAAA3D,SACAsD,qBAIAH,MACAD,EAAAr+E,OAAA66D,WAAA4jB,EAAA,MAEA7jB,aAAAyjB,wIC0BA,SAASU,GAAS95E,GACd,MAAMpE,EAAIoE,EAAI,EACd,OAAOpE,EAAIA,EAAIA,EAAI,ECrBvB,SAASm+E,GAAK/9E,GAAM0D,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG2G,OAAEA,EAASqK,GAAW,IACjE,MAAMxL,GAAKqwB,iBAAiBt5B,GAAMypE,QAClC,MAAO,CACH/lE,MAAAA,EACAD,SAAAA,EACA2G,OAAAA,EACAE,IAAKtG,GAAK,YAAYA,EAAIiF,GAGlC,SAAS+0E,GAAIh+E,GAAM0D,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG2G,OAAEA,EAAS0zE,GAAQ9/E,EAAEA,EAAI,EAACyU,EAAEA,EAAI,EAACg3D,QAAEA,EAAU,GAAM,IAC7F,MAAM9oE,EAAQ24B,iBAAiBt5B,GACzBi+E,GAAkBt9E,EAAM8oE,QACxByU,EAAgC,SAApBv9E,EAAMu9E,UAAuB,GAAKv9E,EAAMu9E,UACpDC,EAAKF,GAAkB,EAAIxU,GACjC,MAAO,CACH/lE,MAAAA,EACAD,SAAAA,EACA2G,OAAAA,EACAE,IAAK,CAACtG,EAAGo6E,IAAM,sBACPF,gBAAwB,EAAIl6E,GAAKhG,SAAS,EAAIgG,GAAKyO,yBACrDwrE,EAAkBE,EAAKC,gHCxC5Bz2E,KAASvG,+KAHIuG,2BAFhB7G,iJADK86E,cAAyCj0E,qBAA9CtD,qXARNvD,kBAKAA,SACEhB,cACAA,yFALyB6H,OAAAA,2DAMhBi0E,Kfk5CX,SAA2ByC,EAAY32E,EAAO42E,EAASC,EAAS52E,EAAK62E,EAAM5zE,EAAQ5K,EAAMy+E,EAASC,EAAmBt5E,EAAMu5E,GACvH,IAAI11E,EAAIo1E,EAAWh6E,OACfkO,EAAIisE,EAAKn6E,OACTD,EAAI6E,EACR,MAAM21E,EAAc,GACpB,KAAOx6E,KACHw6E,EAAYP,EAAWj6E,GAAGrB,KAAOqB,EACrC,MAAMy6E,EAAa,GACbC,EAAa,IAAI7yE,IACjB8yE,EAAS,IAAI9yE,IAEnB,IADA7H,EAAImO,EACGnO,KAAK,CACR,MAAM46E,EAAYL,EAAYh3E,EAAK62E,EAAMp6E,GACnCrB,EAAMu7E,EAAQU,GACpB,IAAIl2E,EAAQ8B,EAAOsoB,IAAInwB,GAClB+F,EAIIy1E,GACLz1E,EAAM/E,EAAEi7E,EAAWt3E,IAJnBoB,EAAQ41E,EAAkB37E,EAAKi8E,GAC/Bl2E,EAAMpJ,KAKVo/E,EAAWj4D,IAAI9jB,EAAK87E,EAAWz6E,GAAK0E,GAChC/F,KAAO67E,GACPG,EAAOl4D,IAAI9jB,EAAK+G,KAAKC,IAAI3F,EAAIw6E,EAAY77E,KAEjD,MAAMk8E,EAAY,IAAI1/E,IAChB2/E,EAAW,IAAI3/E,IACrB,SAASuB,EAAOgI,GACZD,EAAcC,EAAO,GACrBA,EAAMmC,EAAEjL,EAAMoF,GACdwF,EAAOic,IAAI/d,EAAM/F,IAAK+F,GACtB1D,EAAO0D,EAAM49C,MACbn0C,IAEJ,KAAOtJ,GAAKsJ,GAAG,CACX,MAAM4sE,EAAYN,EAAWtsE,EAAI,GAC3B6sE,EAAYf,EAAWp1E,EAAI,GAC3Bo2E,EAAUF,EAAUp8E,IACpBu8E,EAAUF,EAAUr8E,IACtBo8E,IAAcC,GAEdh6E,EAAO+5E,EAAUz4B,MACjBz9C,IACAsJ,KAEMusE,EAAWv3E,IAAI+3E,IAKf10E,EAAOrD,IAAI83E,IAAYJ,EAAU13E,IAAI83E,GAC3Cv+E,EAAOq+E,GAEFD,EAAS33E,IAAI+3E,GAClBr2E,IAEK81E,EAAO7rD,IAAImsD,GAAWN,EAAO7rD,IAAIosD,IACtCJ,EAAS16E,IAAI66E,GACbv+E,EAAOq+E,KAGPF,EAAUz6E,IAAI86E,GACdr2E,MAfAw1E,EAAQW,EAAWx0E,GACnB3B,KAiBR,KAAOA,KAAK,CACR,MAAMm2E,EAAYf,EAAWp1E,GACxB61E,EAAWv3E,IAAI63E,EAAUr8E,MAC1B07E,EAAQW,EAAWx0E,GAE3B,KAAO2H,GACHzR,EAAO+9E,EAAWtsE,EAAI,IAC1B,OAAOssE,oEeh+CUp7E,SAAU,6CAEUgP,EAAG,GAAIhP,SAAU,iDAFrCA,SAAU,kCAEUgP,EAAG,GAAIhP,SAAU,yKAT1D87E,mBACAC,2HAewBA,EAAalC,qrBCpBrCx8E,SAUEhB,mMCAY,sFAHcu7E,YAF5Bv6E,wiBCqDc6G,KAAY21E,aACb31E,KAAYqC,2DAGErC,sJAJbA,KAAY21E,sBACb31E,KAAYqC,4gBAJlBrC,qCAYAA,gMAhBP7G,SACEhB,yNAeK6H,8PApDP83E,EADAC,GAAA,EAEArC,GAAA,EAEAr3E,oBAEAgE,EAAAszE,OAAAA,EAAAD,OAAAsC,GAAAhF,GAAAG,UACA9wE,GAAAszE,QAEAD,EAAAsC,OACAF,GAAAnC,OAAAA,EAAAtzE,MAAAA,8BAGAszE,SACAsC,GAAAtC,OAAAA,EAAAtzE,UAAA9K,MAEAy7E,GAAAC,OAAA5wE,MAAA41E,EAAA51E,MAAAszE,OAAAA,QAEAmC,EAAAG,OAEAF,GAAA,eAKA/E,GAAA7oC,QAEA6oC,GAAAC,OAAAyC,OAAAA,QACAoC,OAAAv4D,mBAIAm2D,GAAAA,GACA1C,GAAAC,OAAAyC,OAAAA,aAiBiCqC,GAAiB,WAMpBA,GAAiB,WCrEnC,oEAAQ,CAAE3/E,OAAQI,SAAS2mE"}